[2024-12-05T21:49:02.653+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T21:49:02.666+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:48:35.126550+00:00 [queued]>
[2024-12-05T21:49:02.673+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:48:35.126550+00:00 [queued]>
[2024-12-05T21:49:02.673+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T21:49:02.687+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): extract_sql> on 2024-12-05 21:48:35.126550+00:00
[2024-12-05T21:49:02.693+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=5369) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T21:49:02.695+0000] {standard_task_runner.py:72} INFO - Started process 5370 to run task
[2024-12-05T21:49:02.695+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'extract_sql', 'manual__2024-12-05T21:48:35.126550+00:00', '--job-id', '1171', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmp6jw_wt_l']
[2024-12-05T21:49:02.697+0000] {standard_task_runner.py:105} INFO - Job 1171: Subtask extract_sql
[2024-12-05T21:49:02.738+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:48:35.126550+00:00 [running]> on host c7780884450d
[2024-12-05T21:49:02.802+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='extract_sql' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T21:48:35.126550+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T21:48:35.126550+00:00'
[2024-12-05T21:49:02.803+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T21:49:02.822+0000] {llm_mapping.py:187} INFO - Извлечён llm_response: Sure! Here’s the mapping of the brands to their respective categories based on the search queries:

1. **kicker** - electronics, accessories
2. **kicx** - electronics
3. **kiddieart** - kids, stationery
4. **kiddieland** - kids, toys
5. **kiddy** - kids, toys
6. **kidi** - kids, toys
7. **kidkraft** - kids, furniture
8. **kidstar** - kids, toys
9. **kidzconcept** - kids, toys
10. **kiepe** - appliances, electronics
11. **kilemkhan** - apparel, accessories
12. **kilemkhanmoonrise** - apparel, accessories
13. **kilemkhanotto** - apparel, accessories
14. **kinbox** - furniture, kids
15. **kinder** - kids, toys
16. **kineticsand** - kids, toys
17. **king** - electronics, appliances
18. **kingleen** - appliances, electronics
19. **kingmax** - electronics, computers
20. **kingmeda** - appliances, electronics
21. **kingroy** - electronics
22. **kingslong** - electronics, auto
23. **kingsong** - electronics, auto
24. **kingsotoys** - kids, toys
25. **kingston** - electronics, computers

Now, I will generate the SQL INSERT statement:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('kicker', 'electronics'),
    ('kicker', 'accessories'),
    ('kicx', 'electronics'),
    ('kiddieart', 'kids'),
    ('kiddieart', 'stationery'),
    ('kiddieland', 'kids'),
    ('kiddieland', 'toys'),
    ('kiddy', 'kids'),
    ('kiddy', 'toys'),
    ('kidi', 'kids'),
    ('kidi', 'toys'),
    ('kidkraft', 'kids'),
    ('kidkraft', 'furniture'),
    ('kidstar', 'kids'),
    ('kidstar', 'toys'),
    ('kidzconcept', 'kids'),
    ('kidzconcept', 'toys'),
    ('kiepe', 'appliances'),
    ('kiepe', 'electronics'),
    ('kilemkhan', 'apparel'),
    ('kilemkhan', 'accessories'),
    ('kilemkhanmoonrise', 'apparel'),
    ('kilemkhanmoonrise', 'accessories'),
    ('kilemkhanotto', 'apparel'),
    ('kilemkhanotto', 'accessories'),
    ('kinbox', 'furniture'),
    ('kinbox', 'kids'),
    ('kinder', 'kids'),
    ('kinder', 'toys'),
    ('kineticsand', 'kids'),
    ('kineticsand', 'toys'),
    ('king', 'electronics'),
    ('king', 'appliances'),
    ('kingleen', 'appliances'),
    ('kingleen', 'electronics'),
    ('kingmax', 'electronics'),
    ('kingmax', 'computers'),
    ('kingmeda', 'appliances'),
    ('kingmeda', 'electronics'),
    ('kingroy', 'electronics'),
    ('kingslong', 'electronics'),
    ('kingslong', 'auto'),
    ('kingsong', 'electronics'),
    ('kingsong', 'auto'),
    ('kingsotoys', 'kids'),
    ('kingsotoys', 'toys'),
    ('kingston', 'electronics'),
    ('kingston', 'computers');
```
[2024-12-05T21:49:02.823+0000] {llm_mapping.py:174} INFO - Извлечён SQL-код:
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('kicker', 'electronics'),
    ('kicker', 'accessories'),
    ('kicx', 'electronics'),
    ('kiddieart', 'kids'),
    ('kiddieart', 'stationery'),
    ('kiddieland', 'kids'),
    ('kiddieland', 'toys'),
    ('kiddy', 'kids'),
    ('kiddy', 'toys'),
    ('kidi', 'kids'),
    ('kidi', 'toys'),
    ('kidkraft', 'kids'),
    ('kidkraft', 'furniture'),
    ('kidstar', 'kids'),
    ('kidstar', 'toys'),
    ('kidzconcept', 'kids'),
    ('kidzconcept', 'toys'),
    ('kiepe', 'appliances'),
    ('kiepe', 'electronics'),
    ('kilemkhan', 'apparel'),
    ('kilemkhan', 'accessories'),
    ('kilemkhanmoonrise', 'apparel'),
    ('kilemkhanmoonrise', 'accessories'),
    ('kilemkhanotto', 'apparel'),
    ('kilemkhanotto', 'accessories'),
    ('kinbox', 'furniture'),
    ('kinbox', 'kids'),
    ('kinder', 'kids'),
    ('kinder', 'toys'),
    ('kineticsand', 'kids'),
    ('kineticsand', 'toys'),
    ('king', 'electronics'),
    ('king', 'appliances'),
    ('kingleen', 'appliances'),
    ('kingleen', 'electronics'),
    ('kingmax', 'electronics'),
    ('kingmax', 'computers'),
    ('kingmeda', 'appliances'),
    ('kingmeda', 'electronics'),
    ('kingroy', 'electronics'),
    ('kingslong', 'electronics'),
    ('kingslong', 'auto'),
    ('kingsong', 'electronics'),
    ('kingsong', 'auto'),
    ('kingsotoys', 'kids'),
    ('kingsotoys', 'toys'),
    ('kingston', 'electronics'),
    ('kingston', 'computers');
[2024-12-05T21:49:02.824+0000] {python.py:240} INFO - Done. Returned value was: INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('kicker', 'electronics'),
    ('kicker', 'accessories'),
    ('kicx', 'electronics'),
    ('kiddieart', 'kids'),
    ('kiddieart', 'stationery'),
    ('kiddieland', 'kids'),
    ('kiddieland', 'toys'),
    ('kiddy', 'kids'),
    ('kiddy', 'toys'),
    ('kidi', 'kids'),
    ('kidi', 'toys'),
    ('kidkraft', 'kids'),
    ('kidkraft', 'furniture'),
    ('kidstar', 'kids'),
    ('kidstar', 'toys'),
    ('kidzconcept', 'kids'),
    ('kidzconcept', 'toys'),
    ('kiepe', 'appliances'),
    ('kiepe', 'electronics'),
    ('kilemkhan', 'apparel'),
    ('kilemkhan', 'accessories'),
    ('kilemkhanmoonrise', 'apparel'),
    ('kilemkhanmoonrise', 'accessories'),
    ('kilemkhanotto', 'apparel'),
    ('kilemkhanotto', 'accessories'),
    ('kinbox', 'furniture'),
    ('kinbox', 'kids'),
    ('kinder', 'kids'),
    ('kinder', 'toys'),
    ('kineticsand', 'kids'),
    ('kineticsand', 'toys'),
    ('king', 'electronics'),
    ('king', 'appliances'),
    ('kingleen', 'appliances'),
    ('kingleen', 'electronics'),
    ('kingmax', 'electronics'),
    ('kingmax', 'computers'),
    ('kingmeda', 'appliances'),
    ('kingmeda', 'electronics'),
    ('kingroy', 'electronics'),
    ('kingslong', 'electronics'),
    ('kingslong', 'auto'),
    ('kingsong', 'electronics'),
    ('kingsong', 'auto'),
    ('kingsotoys', 'kids'),
    ('kingsotoys', 'toys'),
    ('kingston', 'electronics'),
    ('kingston', 'computers');
[2024-12-05T21:49:02.842+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T21:49:02.843+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=extract_sql, run_id=manual__2024-12-05T21:48:35.126550+00:00, execution_date=20241205T214835, start_date=20241205T214902, end_date=20241205T214902
[2024-12-05T21:49:02.869+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T21:49:02.889+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T21:49:02.892+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
