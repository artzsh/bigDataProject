[2024-12-05T21:17:44.542+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T21:17:44.555+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T21:17:39.787754+00:00 [queued]>
[2024-12-05T21:17:44.561+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T21:17:39.787754+00:00 [queued]>
[2024-12-05T21:17:44.562+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T21:17:44.574+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): call_llm> on 2024-12-05 21:17:39.787754+00:00
[2024-12-05T21:17:44.580+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=3712) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T21:17:44.582+0000] {standard_task_runner.py:72} INFO - Started process 3713 to run task
[2024-12-05T21:17:44.582+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'call_llm', 'manual__2024-12-05T21:17:39.787754+00:00', '--job-id', '816', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmpfle82d5d']
[2024-12-05T21:17:44.584+0000] {standard_task_runner.py:105} INFO - Job 816: Subtask call_llm
[2024-12-05T21:17:44.618+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T21:17:39.787754+00:00 [running]> on host c7780884450d
[2024-12-05T21:17:44.677+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='call_llm' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T21:17:39.787754+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T21:17:39.787754+00:00'
[2024-12-05T21:17:44.678+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T21:17:44.694+0000] {llm_mapping.py:155} INFO - Извлечён return_value: {'batch': ['corsocomo', 'cort', 'cortland', 'cosottinni', 'cosrx', 'costadinafur', 'coty', 'cougar', 'courvoisier', 'covani', 'cover', 'cowon', 'cozmo', 'cpl', 'craft', 'crane', 'crea', 'creative', 'creature', 'creavit', 'creed', 'cremesso', 'creo', 'creoceramique', 'crescina'], 'next_index': 1150}
[2024-12-05T21:17:44.695+0000] {llm_mapping.py:127} INFO - Отправка запроса к LLM.
[2024-12-05T21:17:45.134+0000] {logging_mixin.py:190} INFO - New g4f version: 0.3.8.3 (current: 0.3.8.0) | pip install -U g4f
[2024-12-05T21:18:06.422+0000] {llm_mapping.py:141} INFO - Получен ответ от LLM: Here are the assigned categories for each brand based on the search results:

1. **corsocomo** - apparel, accessories
2. **cort** - furniture, appliances
3. **cortland** - furniture, appliances
4. **cosottinni** - apparel
5. **cosrx** - medicine, cosmetics
6. **costadinafur** - apparel
7. **coty** - cosmetics, medicine
8. **cougar** - electronics, accessories (gaming peripherals)
9. **courvoisier** - beverages (not in predefined categories, but closest could be 'country_yard' for outdoor use)
10. **covani** - apparel, accessories
11. **cover** - electronics (especially phone accessories)
12. **cowon** - electronics (audio devices)
13. **cozmo** - electronics (robotics)
14. **cpl** - electronics (LED lighting)
15. **craft** - stationery, appliances (crafting tools)
16. **crane** - appliances (humidifiers and air purifiers)
17. **crea** - stationery, craft supplies
18. **creative** - stationery
19. **creature** - apparel (possibly themed merchandise)
20. **creavit** - appliances (bathroom fixtures)
21. **creed** - cosmetics, medicine (fragrances)
22. **cremesso** - appliances (coffee machines)
23. **creo** - electronics (3D printing)
24. **creoceramique** - construction (ceramic materials)
25. **crescina** - medicine (hair loss treatment)

Now, here is the SQL INSERT statement based on the categories assigned:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('corsocomo', 'apparel'),
    ('corsocomo', 'accessories'),
    ('cort', 'furniture'),
    ('cort', 'appliances'),
    ('cortland', 'furniture'),
    ('cortland', 'appliances'),
    ('cosottinni', 'apparel'),
    ('cosrx', 'medicine'),
    ('cosrx', 'cosmetics'),
    ('costadinafur', 'apparel'),
    ('coty', 'cosmetics'),
    ('coty', 'medicine'),
    ('cougar', 'electronics'),
    ('cougar', 'accessories'),
    ('courvoisier', 'country_yard'),
    ('covani', 'apparel'),
    ('covani', 'accessories'),
    ('cover', 'electronics'),
    ('cowon', 'electronics'),
    ('cozmo', 'electronics'),
    ('cpl', 'electronics'),
    ('craft', 'stationery'),
    ('craft', 'appliances'),
    ('crane', 'appliances'),
    ('crea', 'stationery'),
    ('creative', 'stationery'),
    ('creature', 'apparel'),
    ('creavit', 'appliances'),
    ('creed', 'cosmetics'),
    ('creed', 'medicine'),
    ('cremesso', 'appliances'),
    ('creo', 'electronics'),
    ('creoceramique', 'construction'),
    ('crescina', 'medicine');
```
[2024-12-05T21:18:06.423+0000] {python.py:240} INFO - Done. Returned value was: Here are the assigned categories for each brand based on the search results:

1. **corsocomo** - apparel, accessories
2. **cort** - furniture, appliances
3. **cortland** - furniture, appliances
4. **cosottinni** - apparel
5. **cosrx** - medicine, cosmetics
6. **costadinafur** - apparel
7. **coty** - cosmetics, medicine
8. **cougar** - electronics, accessories (gaming peripherals)
9. **courvoisier** - beverages (not in predefined categories, but closest could be 'country_yard' for outdoor use)
10. **covani** - apparel, accessories
11. **cover** - electronics (especially phone accessories)
12. **cowon** - electronics (audio devices)
13. **cozmo** - electronics (robotics)
14. **cpl** - electronics (LED lighting)
15. **craft** - stationery, appliances (crafting tools)
16. **crane** - appliances (humidifiers and air purifiers)
17. **crea** - stationery, craft supplies
18. **creative** - stationery
19. **creature** - apparel (possibly themed merchandise)
20. **creavit** - appliances (bathroom fixtures)
21. **creed** - cosmetics, medicine (fragrances)
22. **cremesso** - appliances (coffee machines)
23. **creo** - electronics (3D printing)
24. **creoceramique** - construction (ceramic materials)
25. **crescina** - medicine (hair loss treatment)

Now, here is the SQL INSERT statement based on the categories assigned:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('corsocomo', 'apparel'),
    ('corsocomo', 'accessories'),
    ('cort', 'furniture'),
    ('cort', 'appliances'),
    ('cortland', 'furniture'),
    ('cortland', 'appliances'),
    ('cosottinni', 'apparel'),
    ('cosrx', 'medicine'),
    ('cosrx', 'cosmetics'),
    ('costadinafur', 'apparel'),
    ('coty', 'cosmetics'),
    ('coty', 'medicine'),
    ('cougar', 'electronics'),
    ('cougar', 'accessories'),
    ('courvoisier', 'country_yard'),
    ('covani', 'apparel'),
    ('covani', 'accessories'),
    ('cover', 'electronics'),
    ('cowon', 'electronics'),
    ('cozmo', 'electronics'),
    ('cpl', 'electronics'),
    ('craft', 'stationery'),
    ('craft', 'appliances'),
    ('crane', 'appliances'),
    ('crea', 'stationery'),
    ('creative', 'stationery'),
    ('creature', 'apparel'),
    ('creavit', 'appliances'),
    ('creed', 'cosmetics'),
    ('creed', 'medicine'),
    ('cremesso', 'appliances'),
    ('creo', 'electronics'),
    ('creoceramique', 'construction'),
    ('crescina', 'medicine');
```
[2024-12-05T21:18:06.441+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T21:18:06.441+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=call_llm, run_id=manual__2024-12-05T21:17:39.787754+00:00, execution_date=20241205T211739, start_date=20241205T211744, end_date=20241205T211806
[2024-12-05T21:18:06.488+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T21:18:06.504+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T21:18:06.507+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
