[2024-12-05T21:58:06.742+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T21:58:06.754+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:57:35.701096+00:00 [queued]>
[2024-12-05T21:58:06.761+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:57:35.701096+00:00 [queued]>
[2024-12-05T21:58:06.762+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T21:58:06.773+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): extract_sql> on 2024-12-05 21:57:35.701096+00:00
[2024-12-05T21:58:06.780+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=5845) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T21:58:06.781+0000] {standard_task_runner.py:72} INFO - Started process 5846 to run task
[2024-12-05T21:58:06.781+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'extract_sql', 'manual__2024-12-05T21:57:35.701096+00:00', '--job-id', '1273', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmp5kpfw02x']
[2024-12-05T21:58:06.784+0000] {standard_task_runner.py:105} INFO - Job 1273: Subtask extract_sql
[2024-12-05T21:58:06.823+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:57:35.701096+00:00 [running]> on host c7780884450d
[2024-12-05T21:58:06.894+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='extract_sql' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T21:57:35.701096+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T21:57:35.701096+00:00'
[2024-12-05T21:58:06.895+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T21:58:06.914+0000] {llm_mapping.py:187} INFO - Извлечён llm_response: Here are the assigned categories for each brand based on the search queries:

1. **madshus**: sport
2. **maestro**: electronics, appliances
3. **maff**: stationery
4. **magaudio**: electronics
5. **magellan**: electronics, auto
6. **magformers**: kids, toys
7. **magiazolota**: accessories
8. **magic**: toys, kids
9. **magicbeartoys**: kids, toys
10. **magicblooms**: accessories
11. **magicstones**: toys, kids
12. **magictrack**: toys, kids
13. **magistro**: stationery
14. **magkijson**: computers
15. **magma**: appliances
16. **magnat**: electronics
17. **magneticbike**: sport
18. **magneticus**: toys, kids
19. **magnetspel**: toys, kids
20. **magnetta**: accessories
21. **magniflex**: furniture, appliances
22. **magnit**: appliances
23. **magnitoj**: electronics
24. **magnum**: auto
25. **magnus**: appliances

Now, here is the SQL INSERT statement based on the assigned categories:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('madshus', 'sport'),
    ('maestro', 'electronics'),
    ('maestro', 'appliances'),
    ('maff', 'stationery'),
    ('magaudio', 'electronics'),
    ('magellan', 'electronics'),
    ('magellan', 'auto'),
    ('magformers', 'kids'),
    ('magformers', 'toys'),
    ('magiazolota', 'accessories'),
    ('magic', 'toys'),
    ('magic', 'kids'),
    ('magicbeartoys', 'kids'),
    ('magicbeartoys', 'toys'),
    ('magicblooms', 'accessories'),
    ('magicstones', 'toys'),
    ('magicstones', 'kids'),
    ('magictrack', 'toys'),
    ('magictrack', 'kids'),
    ('magistro', 'stationery'),
    ('magkijson', 'computers'),
    ('magma', 'appliances'),
    ('magnat', 'electronics'),
    ('magneticbike', 'sport'),
    ('magneticus', 'toys'),
    ('magneticus', 'kids'),
    ('magnetspel', 'toys'),
    ('magnetspel', 'kids'),
    ('magnetta', 'accessories'),
    ('magniflex', 'furniture'),
    ('magniflex', 'appliances'),
    ('magnit', 'appliances'),
    ('magnitoj', 'electronics'),
    ('magnum', 'auto'),
    ('magnus', 'appliances');
```
[2024-12-05T21:58:06.915+0000] {llm_mapping.py:174} INFO - Извлечён SQL-код:
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('madshus', 'sport'),
    ('maestro', 'electronics'),
    ('maestro', 'appliances'),
    ('maff', 'stationery'),
    ('magaudio', 'electronics'),
    ('magellan', 'electronics'),
    ('magellan', 'auto'),
    ('magformers', 'kids'),
    ('magformers', 'toys'),
    ('magiazolota', 'accessories'),
    ('magic', 'toys'),
    ('magic', 'kids'),
    ('magicbeartoys', 'kids'),
    ('magicbeartoys', 'toys'),
    ('magicblooms', 'accessories'),
    ('magicstones', 'toys'),
    ('magicstones', 'kids'),
    ('magictrack', 'toys'),
    ('magictrack', 'kids'),
    ('magistro', 'stationery'),
    ('magkijson', 'computers'),
    ('magma', 'appliances'),
    ('magnat', 'electronics'),
    ('magneticbike', 'sport'),
    ('magneticus', 'toys'),
    ('magneticus', 'kids'),
    ('magnetspel', 'toys'),
    ('magnetspel', 'kids'),
    ('magnetta', 'accessories'),
    ('magniflex', 'furniture'),
    ('magniflex', 'appliances'),
    ('magnit', 'appliances'),
    ('magnitoj', 'electronics'),
    ('magnum', 'auto'),
    ('magnus', 'appliances');
[2024-12-05T21:58:06.916+0000] {python.py:240} INFO - Done. Returned value was: INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('madshus', 'sport'),
    ('maestro', 'electronics'),
    ('maestro', 'appliances'),
    ('maff', 'stationery'),
    ('magaudio', 'electronics'),
    ('magellan', 'electronics'),
    ('magellan', 'auto'),
    ('magformers', 'kids'),
    ('magformers', 'toys'),
    ('magiazolota', 'accessories'),
    ('magic', 'toys'),
    ('magic', 'kids'),
    ('magicbeartoys', 'kids'),
    ('magicbeartoys', 'toys'),
    ('magicblooms', 'accessories'),
    ('magicstones', 'toys'),
    ('magicstones', 'kids'),
    ('magictrack', 'toys'),
    ('magictrack', 'kids'),
    ('magistro', 'stationery'),
    ('magkijson', 'computers'),
    ('magma', 'appliances'),
    ('magnat', 'electronics'),
    ('magneticbike', 'sport'),
    ('magneticus', 'toys'),
    ('magneticus', 'kids'),
    ('magnetspel', 'toys'),
    ('magnetspel', 'kids'),
    ('magnetta', 'accessories'),
    ('magniflex', 'furniture'),
    ('magniflex', 'appliances'),
    ('magnit', 'appliances'),
    ('magnitoj', 'electronics'),
    ('magnum', 'auto'),
    ('magnus', 'appliances');
[2024-12-05T21:58:06.932+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T21:58:06.933+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=extract_sql, run_id=manual__2024-12-05T21:57:35.701096+00:00, execution_date=20241205T215735, start_date=20241205T215806, end_date=20241205T215806
[2024-12-05T21:58:06.955+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T21:58:06.974+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T21:58:06.977+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
