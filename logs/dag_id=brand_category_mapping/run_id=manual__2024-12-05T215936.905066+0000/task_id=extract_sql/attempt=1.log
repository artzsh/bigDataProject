[2024-12-05T22:00:27.244+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T22:00:27.257+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:59:36.905066+00:00 [queued]>
[2024-12-05T22:00:27.263+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:59:36.905066+00:00 [queued]>
[2024-12-05T22:00:27.264+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T22:00:27.277+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): extract_sql> on 2024-12-05 21:59:36.905066+00:00
[2024-12-05T22:00:27.283+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=5957) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T22:00:27.284+0000] {standard_task_runner.py:72} INFO - Started process 5958 to run task
[2024-12-05T22:00:27.284+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'extract_sql', 'manual__2024-12-05T21:59:36.905066+00:00', '--job-id', '1297', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmpmh4j68n_']
[2024-12-05T22:00:27.286+0000] {standard_task_runner.py:105} INFO - Job 1297: Subtask extract_sql
[2024-12-05T22:00:27.322+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:59:36.905066+00:00 [running]> on host c7780884450d
[2024-12-05T22:00:27.385+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='extract_sql' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T21:59:36.905066+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T21:59:36.905066+00:00'
[2024-12-05T22:00:27.386+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T22:00:27.405+0000] {llm_mapping.py:187} INFO - Извлечён llm_response: Based on the brands provided, I will categorize each brand according to the predefined categories. Below is the mapping for each brand, followed by the SQL INSERT statement.

1. **marta** - apparel
2. **martinex** - appliances, electronics
3. **martinez** - apparel, accessories
4. **martinromas** - furniture
5. **maruemsta** - stationery
6. **maruishi** - appliances
7. **marusa** - apparel
8. **marvel** - apparel, accessories, electronics (toys, comics)
9. **masaimedved** - kids
10. **maserati** - auto
11. **masi** - apparel, sport
12. **masima** - apparel
13. **massagie** - medicine, accessories
14. **masseffect** - electronics (video games)
15. **masstige** - apparel, accessories
16. **masstone** - electronics
17. **mastela** - kids, accessories
18. **master** - appliances, tools
19. **masterbrilliant** - appliances, electronics
20. **mastercraft** - construction, tools
21. **masterfish** - appliances
22. **masteriq** - electronics
23. **masters** - sport
24. **masteryard** - country_yard, tools
25. **mastino** - apparel

Here is the SQL INSERT statement for the brand-category mapping:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('marta', 'apparel'),
    ('martinex', 'appliances'),
    ('martinex', 'electronics'),
    ('martinez', 'apparel'),
    ('martinez', 'accessories'),
    ('martinromas', 'furniture'),
    ('maruemsta', 'stationery'),
    ('maruishi', 'appliances'),
    ('marusa', 'apparel'),
    ('marvel', 'apparel'),
    ('marvel', 'accessories'),
    ('marvel', 'electronics'),
    ('masaimedved', 'kids'),
    ('maserati', 'auto'),
    ('masi', 'apparel'),
    ('masi', 'sport'),
    ('masima', 'apparel'),
    ('massagie', 'medicine'),
    ('massagie', 'accessories'),
    ('masseffect', 'electronics'),
    ('masstige', 'apparel'),
    ('masstige', 'accessories'),
    ('masstone', 'electronics'),
    ('mastela', 'kids'),
    ('mastela', 'accessories'),
    ('master', 'appliances'),
    ('master', 'tools'),
    ('masterbrilliant', 'appliances'),
    ('masterbrilliant', 'electronics'),
    ('mastercraft', 'construction'),
    ('mastercraft', 'tools'),
    ('masterfish', 'appliances'),
    ('masteriq', 'electronics'),
    ('masters', 'sport'),
    ('masteryard', 'country_yard'),
    ('masteryard', 'tools'),
    ('mastino', 'apparel');
``` 

This statement includes all the brands and their assigned categories based on the search results and logical assignment.
[2024-12-05T22:00:27.406+0000] {llm_mapping.py:174} INFO - Извлечён SQL-код:
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('marta', 'apparel'),
    ('martinex', 'appliances'),
    ('martinex', 'electronics'),
    ('martinez', 'apparel'),
    ('martinez', 'accessories'),
    ('martinromas', 'furniture'),
    ('maruemsta', 'stationery'),
    ('maruishi', 'appliances'),
    ('marusa', 'apparel'),
    ('marvel', 'apparel'),
    ('marvel', 'accessories'),
    ('marvel', 'electronics'),
    ('masaimedved', 'kids'),
    ('maserati', 'auto'),
    ('masi', 'apparel'),
    ('masi', 'sport'),
    ('masima', 'apparel'),
    ('massagie', 'medicine'),
    ('massagie', 'accessories'),
    ('masseffect', 'electronics'),
    ('masstige', 'apparel'),
    ('masstige', 'accessories'),
    ('masstone', 'electronics'),
    ('mastela', 'kids'),
    ('mastela', 'accessories'),
    ('master', 'appliances'),
    ('master', 'tools'),
    ('masterbrilliant', 'appliances'),
    ('masterbrilliant', 'electronics'),
    ('mastercraft', 'construction'),
    ('mastercraft', 'tools'),
    ('masterfish', 'appliances'),
    ('masteriq', 'electronics'),
    ('masters', 'sport'),
    ('masteryard', 'country_yard'),
    ('masteryard', 'tools'),
    ('mastino', 'apparel');
[2024-12-05T22:00:27.406+0000] {python.py:240} INFO - Done. Returned value was: INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('marta', 'apparel'),
    ('martinex', 'appliances'),
    ('martinex', 'electronics'),
    ('martinez', 'apparel'),
    ('martinez', 'accessories'),
    ('martinromas', 'furniture'),
    ('maruemsta', 'stationery'),
    ('maruishi', 'appliances'),
    ('marusa', 'apparel'),
    ('marvel', 'apparel'),
    ('marvel', 'accessories'),
    ('marvel', 'electronics'),
    ('masaimedved', 'kids'),
    ('maserati', 'auto'),
    ('masi', 'apparel'),
    ('masi', 'sport'),
    ('masima', 'apparel'),
    ('massagie', 'medicine'),
    ('massagie', 'accessories'),
    ('masseffect', 'electronics'),
    ('masstige', 'apparel'),
    ('masstige', 'accessories'),
    ('masstone', 'electronics'),
    ('mastela', 'kids'),
    ('mastela', 'accessories'),
    ('master', 'appliances'),
    ('master', 'tools'),
    ('masterbrilliant', 'appliances'),
    ('masterbrilliant', 'electronics'),
    ('mastercraft', 'construction'),
    ('mastercraft', 'tools'),
    ('masterfish', 'appliances'),
    ('masteriq', 'electronics'),
    ('masters', 'sport'),
    ('masteryard', 'country_yard'),
    ('masteryard', 'tools'),
    ('mastino', 'apparel');
[2024-12-05T22:00:27.423+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T22:00:27.424+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=extract_sql, run_id=manual__2024-12-05T21:59:36.905066+00:00, execution_date=20241205T215936, start_date=20241205T220027, end_date=20241205T220027
[2024-12-05T22:00:27.458+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T22:00:27.477+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T22:00:27.480+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
