[2024-12-05T22:42:13.409+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T22:42:13.423+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T22:42:07.451219+00:00 [queued]>
[2024-12-05T22:42:13.431+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T22:42:07.451219+00:00 [queued]>
[2024-12-05T22:42:13.432+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T22:42:13.446+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): call_llm> on 2024-12-05 22:42:07.451219+00:00
[2024-12-05T22:42:13.453+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=8155) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T22:42:13.454+0000] {standard_task_runner.py:72} INFO - Started process 8156 to run task
[2024-12-05T22:42:13.455+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'call_llm', 'manual__2024-12-05T22:42:07.451219+00:00', '--job-id', '1770', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmp8p2kdkv9']
[2024-12-05T22:42:13.457+0000] {standard_task_runner.py:105} INFO - Job 1770: Subtask call_llm
[2024-12-05T22:42:13.495+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T22:42:07.451219+00:00 [running]> on host c7780884450d
[2024-12-05T22:42:13.559+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='call_llm' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T22:42:07.451219+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T22:42:07.451219+00:00'
[2024-12-05T22:42:13.560+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T22:42:13.577+0000] {llm_mapping.py:155} INFO - Извлечён return_value: {'batch': ['tourist', 'tous', 'toyland', 'toyo', 'toyota', 'toysmax', 'tp-link', 'tpmaster', 'traceelliot', 'tradiciatekstila', 'tradiciitekstila', 'tramontina', 'tramp', 'transcend', 'transformers', 'traser', 'travel', 'travelite', 'travellight', 'traxxas', 'trazano', 'trebl', 'trefl', 'trek', 'trend'], 'next_index': 5125}
[2024-12-05T22:42:13.578+0000] {llm_mapping.py:127} INFO - Отправка запроса к LLM.
[2024-12-05T22:42:13.996+0000] {logging_mixin.py:190} INFO - New g4f version: 0.3.8.3 (current: 0.3.8.0) | pip install -U g4f
[2024-12-05T22:42:34.290+0000] {llm_mapping.py:141} INFO - Получен ответ от LLM: Here are the assigned categories for each brand based on the search results:

1. **tourist**: country_yard, apparel
2. **tous**: accessories
3. **toyland**: kids, toys
4. **toyo**: auto, appliances
5. **toyota**: auto
6. **toysmax**: kids, toys
7. **tp-link**: electronics
8. **tpmaster**: electronics
9. **traceelliot**: electronics
10. **tradiciatekstila**: apparel
11. **tradiciitekstila**: apparel
12. **tramontina**: appliances, country_yard
13. **tramp**: apparel, sport
14. **transcend**: electronics
15. **transformers**: kids, toys
16. **traser**: accessories
17. **travel**: accessories, country_yard
18. **travelite**: accessories, luggage
19. **travellight**: accessories, luggage
20. **traxxas**: sport, toys
21. **trazano**: apparel
22. **trebl**: electronics
23. **trefl**: kids, toys
24. **trek**: sport, apparel
25. **trend**: apparel

Now, here is the SQL INSERT statement:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('tourist', 'country_yard'),
    ('tourist', 'apparel'),
    ('tous', 'accessories'),
    ('toyland', 'kids'),
    ('toyland', 'toys'),
    ('toyo', 'auto'),
    ('toyo', 'appliances'),
    ('toyota', 'auto'),
    ('toysmax', 'kids'),
    ('toysmax', 'toys'),
    ('tp-link', 'electronics'),
    ('tpmaster', 'electronics'),
    ('traceelliot', 'electronics'),
    ('tradiciatekstila', 'apparel'),
    ('tradiciitekstila', 'apparel'),
    ('tramontina', 'appliances'),
    ('tramontina', 'country_yard'),
    ('tramp', 'apparel'),
    ('tramp', 'sport'),
    ('transcend', 'electronics'),
    ('transformers', 'kids'),
    ('transformers', 'toys'),
    ('traser', 'accessories'),
    ('travel', 'accessories'),
    ('travel', 'country_yard'),
    ('travelite', 'accessories'),
    ('travelite', 'luggage'),
    ('travellight', 'accessories'),
    ('travellight', 'luggage'),
    ('traxxas', 'sport'),
    ('traxxas', 'toys'),
    ('trazano', 'apparel'),
    ('trebl', 'electronics'),
    ('trefl', 'kids'),
    ('trefl', 'toys'),
    ('trek', 'sport'),
    ('trek', 'apparel'),
    ('trend', 'apparel');
```
[2024-12-05T22:42:34.290+0000] {python.py:240} INFO - Done. Returned value was: Here are the assigned categories for each brand based on the search results:

1. **tourist**: country_yard, apparel
2. **tous**: accessories
3. **toyland**: kids, toys
4. **toyo**: auto, appliances
5. **toyota**: auto
6. **toysmax**: kids, toys
7. **tp-link**: electronics
8. **tpmaster**: electronics
9. **traceelliot**: electronics
10. **tradiciatekstila**: apparel
11. **tradiciitekstila**: apparel
12. **tramontina**: appliances, country_yard
13. **tramp**: apparel, sport
14. **transcend**: electronics
15. **transformers**: kids, toys
16. **traser**: accessories
17. **travel**: accessories, country_yard
18. **travelite**: accessories, luggage
19. **travellight**: accessories, luggage
20. **traxxas**: sport, toys
21. **trazano**: apparel
22. **trebl**: electronics
23. **trefl**: kids, toys
24. **trek**: sport, apparel
25. **trend**: apparel

Now, here is the SQL INSERT statement:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('tourist', 'country_yard'),
    ('tourist', 'apparel'),
    ('tous', 'accessories'),
    ('toyland', 'kids'),
    ('toyland', 'toys'),
    ('toyo', 'auto'),
    ('toyo', 'appliances'),
    ('toyota', 'auto'),
    ('toysmax', 'kids'),
    ('toysmax', 'toys'),
    ('tp-link', 'electronics'),
    ('tpmaster', 'electronics'),
    ('traceelliot', 'electronics'),
    ('tradiciatekstila', 'apparel'),
    ('tradiciitekstila', 'apparel'),
    ('tramontina', 'appliances'),
    ('tramontina', 'country_yard'),
    ('tramp', 'apparel'),
    ('tramp', 'sport'),
    ('transcend', 'electronics'),
    ('transformers', 'kids'),
    ('transformers', 'toys'),
    ('traser', 'accessories'),
    ('travel', 'accessories'),
    ('travel', 'country_yard'),
    ('travelite', 'accessories'),
    ('travelite', 'luggage'),
    ('travellight', 'accessories'),
    ('travellight', 'luggage'),
    ('traxxas', 'sport'),
    ('traxxas', 'toys'),
    ('trazano', 'apparel'),
    ('trebl', 'electronics'),
    ('trefl', 'kids'),
    ('trefl', 'toys'),
    ('trek', 'sport'),
    ('trek', 'apparel'),
    ('trend', 'apparel');
```
[2024-12-05T22:42:34.308+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T22:42:34.309+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=call_llm, run_id=manual__2024-12-05T22:42:07.451219+00:00, execution_date=20241205T224207, start_date=20241205T224213, end_date=20241205T224234
[2024-12-05T22:42:34.331+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T22:42:34.348+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T22:42:34.352+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
