[2024-12-05T21:11:47.878+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T21:11:47.890+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:11:24.547033+00:00 [queued]>
[2024-12-05T21:11:47.896+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:11:24.547033+00:00 [queued]>
[2024-12-05T21:11:47.896+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T21:11:47.908+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): extract_sql> on 2024-12-05 21:11:24.547033+00:00
[2024-12-05T21:11:47.914+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=3367) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T21:11:47.916+0000] {standard_task_runner.py:72} INFO - Started process 3368 to run task
[2024-12-05T21:11:47.915+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'extract_sql', 'manual__2024-12-05T21:11:24.547033+00:00', '--job-id', '739', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmpig07ap1y']
[2024-12-05T21:11:47.917+0000] {standard_task_runner.py:105} INFO - Job 739: Subtask extract_sql
[2024-12-05T21:11:47.956+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:11:24.547033+00:00 [running]> on host c7780884450d
[2024-12-05T21:11:48.013+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='extract_sql' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T21:11:24.547033+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T21:11:24.547033+00:00'
[2024-12-05T21:11:48.014+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T21:11:48.033+0000] {llm_mapping.py:187} INFO - Извлечён llm_response: Here is the mapping of the brands to their respective categories based on the search queries:

1. **bravat**: appliances
2. **bravilor**: appliances
3. **bravis**: electronics
4. **bravo**: electronics, appliances
5. **breezeboat**: country_yard, sport
6. **bref**: appliances
7. **brembo**: auto
8. **brennenstuhl**: electronics, appliances
9. **bresser**: electronics
10. **brevi**: kids
11. **bridgestone**: auto
12. **brisk**: auto
13. **brita**: appliances
14. **britax**: kids
15. **britaxroemer**: kids
16. **britaxromer**: kids
17. **britneyspears**: apparel, accessories
18. **britop**: electronics
19. **briverre**: appliances
20. **brizoll**: furniture
21. **brkpress**: stationery
22. **bro**: apparel
23. **brocoli**: food (not in categories provided, but if we were to fit it, it might relate to country_yard)
24. **bronzallure**: accessories
25. **broomer**: country_yard

Now, I will generate the SQL INSERT statement:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('bravat', 'appliances'),
    ('bravilor', 'appliances'),
    ('bravis', 'electronics'),
    ('bravo', 'electronics'),
    ('bravo', 'appliances'),
    ('breezeboat', 'country_yard'),
    ('breezeboat', 'sport'),
    ('bref', 'appliances'),
    ('brembo', 'auto'),
    ('brennenstuhl', 'electronics'),
    ('brennenstuhl', 'appliances'),
    ('bresser', 'electronics'),
    ('brevi', 'kids'),
    ('bridgestone', 'auto'),
    ('brisk', 'auto'),
    ('brita', 'appliances'),
    ('britax', 'kids'),
    ('britaxroemer', 'kids'),
    ('britaxromer', 'kids'),
    ('britneyspears', 'apparel'),
    ('britneyspears', 'accessories'),
    ('britop', 'electronics'),
    ('briverre', 'appliances'),
    ('brizoll', 'furniture'),
    ('brkpress', 'stationery'),
    ('bro', 'apparel'),
    ('brocoli', 'country_yard'),
    ('bronzallure', 'accessories'),
    ('broomer', 'country_yard');
```
[2024-12-05T21:11:48.034+0000] {llm_mapping.py:174} INFO - Извлечён SQL-код:
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('bravat', 'appliances'),
    ('bravilor', 'appliances'),
    ('bravis', 'electronics'),
    ('bravo', 'electronics'),
    ('bravo', 'appliances'),
    ('breezeboat', 'country_yard'),
    ('breezeboat', 'sport'),
    ('bref', 'appliances'),
    ('brembo', 'auto'),
    ('brennenstuhl', 'electronics'),
    ('brennenstuhl', 'appliances'),
    ('bresser', 'electronics'),
    ('brevi', 'kids'),
    ('bridgestone', 'auto'),
    ('brisk', 'auto'),
    ('brita', 'appliances'),
    ('britax', 'kids'),
    ('britaxroemer', 'kids'),
    ('britaxromer', 'kids'),
    ('britneyspears', 'apparel'),
    ('britneyspears', 'accessories'),
    ('britop', 'electronics'),
    ('briverre', 'appliances'),
    ('brizoll', 'furniture'),
    ('brkpress', 'stationery'),
    ('bro', 'apparel'),
    ('brocoli', 'country_yard'),
    ('bronzallure', 'accessories'),
    ('broomer', 'country_yard');
[2024-12-05T21:11:48.034+0000] {python.py:240} INFO - Done. Returned value was: INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('bravat', 'appliances'),
    ('bravilor', 'appliances'),
    ('bravis', 'electronics'),
    ('bravo', 'electronics'),
    ('bravo', 'appliances'),
    ('breezeboat', 'country_yard'),
    ('breezeboat', 'sport'),
    ('bref', 'appliances'),
    ('brembo', 'auto'),
    ('brennenstuhl', 'electronics'),
    ('brennenstuhl', 'appliances'),
    ('bresser', 'electronics'),
    ('brevi', 'kids'),
    ('bridgestone', 'auto'),
    ('brisk', 'auto'),
    ('brita', 'appliances'),
    ('britax', 'kids'),
    ('britaxroemer', 'kids'),
    ('britaxromer', 'kids'),
    ('britneyspears', 'apparel'),
    ('britneyspears', 'accessories'),
    ('britop', 'electronics'),
    ('briverre', 'appliances'),
    ('brizoll', 'furniture'),
    ('brkpress', 'stationery'),
    ('bro', 'apparel'),
    ('brocoli', 'country_yard'),
    ('bronzallure', 'accessories'),
    ('broomer', 'country_yard');
[2024-12-05T21:11:48.052+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T21:11:48.052+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=extract_sql, run_id=manual__2024-12-05T21:11:24.547033+00:00, execution_date=20241205T211124, start_date=20241205T211147, end_date=20241205T211148
[2024-12-05T21:11:48.091+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T21:11:48.111+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T21:11:48.114+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
