[2024-12-05T21:43:49.941+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T21:43:49.954+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T21:43:44.629063+00:00 [queued]>
[2024-12-05T21:43:49.960+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T21:43:44.629063+00:00 [queued]>
[2024-12-05T21:43:49.960+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T21:43:49.973+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): call_llm> on 2024-12-05 21:43:44.629063+00:00
[2024-12-05T21:43:49.983+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=5105) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T21:43:49.984+0000] {standard_task_runner.py:72} INFO - Started process 5106 to run task
[2024-12-05T21:43:49.985+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'call_llm', 'manual__2024-12-05T21:43:44.629063+00:00', '--job-id', '1116', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmpvr4wt5ks']
[2024-12-05T21:43:49.987+0000] {standard_task_runner.py:105} INFO - Job 1116: Subtask call_llm
[2024-12-05T21:43:50.028+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T21:43:44.629063+00:00 [running]> on host c7780884450d
[2024-12-05T21:43:50.096+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='call_llm' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T21:43:44.629063+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T21:43:44.629063+00:00'
[2024-12-05T21:43:50.097+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T21:43:50.115+0000] {llm_mapping.py:155} INFO - Извлечён return_value: {'batch': ['iope', 'ipipoo', 'iplay', 'ipower', 'iqmarketing', 'iqos', 'irbis', 'irest', 'irida', 'irisk', 'irit', 'iriver', 'irobot', 'irontrue', 'ismart', 'isntree', 'istarikomiks', 'italcarciofi', 'italianstage', 'italmix', 'italtrike', 'itc', 'itlv', 'iunik', 'i-velo'], 'next_index': 2400}
[2024-12-05T21:43:50.115+0000] {llm_mapping.py:127} INFO - Отправка запроса к LLM.
[2024-12-05T21:43:50.542+0000] {logging_mixin.py:190} INFO - New g4f version: 0.3.8.3 (current: 0.3.8.0) | pip install -U g4f
[2024-12-05T21:44:15.930+0000] {llm_mapping.py:141} INFO - Получен ответ от LLM: Here’s the mapping of the brands to the predefined categories based on the search results:

1. **iope**: medicine
2. **ipipoo**: electronics, accessories
3. **iplay**: kids, sport
4. **ipower**: electronics, appliances
5. **iqmarketing**: (no specific category found, assigning) electronics
6. **iqos**: electronics, accessories
7. **irbis**: electronics, computers
8. **irest**: furniture, appliances
9. **irida**: (no specific category found, assigning) accessories
10. **irisk**: (no specific category found, assigning) accessories
11. **irit**: (no specific category found, assigning) appliances
12. **iriver**: electronics, computers
13. **irobot**: electronics, appliances
14. **irontrue**: sport, accessories
15. **ismart**: electronics
16. **isntree**: medicine, accessories
17. **istarikomiks**: (no specific category found, assigning) stationery
18. **italcarciofi**: (no specific category found, assigning) food (not in predefined categories)
19. **italianstage**: (no specific category found, assigning) appliances
20. **italmix**: (no specific category found, assigning) appliances
21. **italtrike**: kids, sport
22. **itc**: (no specific category found, assigning) electronics
23. **itlv**: (no specific category found, assigning) appliances
24. **iunik**: medicine, accessories
25. **i-velo**: sport, auto

Now, here’s the SQL INSERT statement for the brand-category mapping:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('iope', 'medicine'),
    ('ipipoo', 'electronics'),
    ('ipipoo', 'accessories'),
    ('iplay', 'kids'),
    ('iplay', 'sport'),
    ('ipower', 'electronics'),
    ('ipower', 'appliances'),
    ('iqmarketing', 'electronics'),
    ('iqos', 'electronics'),
    ('iqos', 'accessories'),
    ('irbis', 'electronics'),
    ('irbis', 'computers'),
    ('irest', 'furniture'),
    ('irest', 'appliances'),
    ('irida', 'accessories'),
    ('irisk', 'accessories'),
    ('irit', 'appliances'),
    ('iriver', 'electronics'),
    ('iriver', 'computers'),
    ('irobot', 'electronics'),
    ('irobot', 'appliances'),
    ('irontrue', 'sport'),
    ('irontrue', 'accessories'),
    ('ismart', 'electronics'),
    ('isntree', 'medicine'),
    ('isntree', 'accessories'),
    ('istarikomiks', 'stationery'),
    ('italcarciofi', 'appliances'),
    ('italianstage', 'appliances'),
    ('italmix', 'appliances'),
    ('italtrike', 'kids'),
    ('italtrike', 'sport'),
    ('itc', 'electronics'),
    ('itlv', 'appliances'),
    ('iunik', 'medicine'),
    ('iunik', 'accessories'),
    ('i-velo', 'sport'),
    ('i-velo', 'auto');
```
[2024-12-05T21:44:15.930+0000] {python.py:240} INFO - Done. Returned value was: Here’s the mapping of the brands to the predefined categories based on the search results:

1. **iope**: medicine
2. **ipipoo**: electronics, accessories
3. **iplay**: kids, sport
4. **ipower**: electronics, appliances
5. **iqmarketing**: (no specific category found, assigning) electronics
6. **iqos**: electronics, accessories
7. **irbis**: electronics, computers
8. **irest**: furniture, appliances
9. **irida**: (no specific category found, assigning) accessories
10. **irisk**: (no specific category found, assigning) accessories
11. **irit**: (no specific category found, assigning) appliances
12. **iriver**: electronics, computers
13. **irobot**: electronics, appliances
14. **irontrue**: sport, accessories
15. **ismart**: electronics
16. **isntree**: medicine, accessories
17. **istarikomiks**: (no specific category found, assigning) stationery
18. **italcarciofi**: (no specific category found, assigning) food (not in predefined categories)
19. **italianstage**: (no specific category found, assigning) appliances
20. **italmix**: (no specific category found, assigning) appliances
21. **italtrike**: kids, sport
22. **itc**: (no specific category found, assigning) electronics
23. **itlv**: (no specific category found, assigning) appliances
24. **iunik**: medicine, accessories
25. **i-velo**: sport, auto

Now, here’s the SQL INSERT statement for the brand-category mapping:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('iope', 'medicine'),
    ('ipipoo', 'electronics'),
    ('ipipoo', 'accessories'),
    ('iplay', 'kids'),
    ('iplay', 'sport'),
    ('ipower', 'electronics'),
    ('ipower', 'appliances'),
    ('iqmarketing', 'electronics'),
    ('iqos', 'electronics'),
    ('iqos', 'accessories'),
    ('irbis', 'electronics'),
    ('irbis', 'computers'),
    ('irest', 'furniture'),
    ('irest', 'appliances'),
    ('irida', 'accessories'),
    ('irisk', 'accessories'),
    ('irit', 'appliances'),
    ('iriver', 'electronics'),
    ('iriver', 'computers'),
    ('irobot', 'electronics'),
    ('irobot', 'appliances'),
    ('irontrue', 'sport'),
    ('irontrue', 'accessories'),
    ('ismart', 'electronics'),
    ('isntree', 'medicine'),
    ('isntree', 'accessories'),
    ('istarikomiks', 'stationery'),
    ('italcarciofi', 'appliances'),
    ('italianstage', 'appliances'),
    ('italmix', 'appliances'),
    ('italtrike', 'kids'),
    ('italtrike', 'sport'),
    ('itc', 'electronics'),
    ('itlv', 'appliances'),
    ('iunik', 'medicine'),
    ('iunik', 'accessories'),
    ('i-velo', 'sport'),
    ('i-velo', 'auto');
```
[2024-12-05T21:44:15.951+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T21:44:15.951+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=call_llm, run_id=manual__2024-12-05T21:43:44.629063+00:00, execution_date=20241205T214344, start_date=20241205T214349, end_date=20241205T214415
[2024-12-05T21:44:15.968+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T21:44:15.988+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T21:44:15.991+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
