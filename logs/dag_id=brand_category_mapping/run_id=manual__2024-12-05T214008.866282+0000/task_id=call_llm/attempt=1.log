[2024-12-05T21:40:13.823+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T21:40:13.837+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T21:40:08.866282+00:00 [queued]>
[2024-12-05T21:40:13.844+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T21:40:08.866282+00:00 [queued]>
[2024-12-05T21:40:13.845+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T21:40:13.858+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): call_llm> on 2024-12-05 21:40:08.866282+00:00
[2024-12-05T21:40:13.864+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=4909) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T21:40:13.865+0000] {standard_task_runner.py:72} INFO - Started process 4910 to run task
[2024-12-05T21:40:13.865+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'call_llm', 'manual__2024-12-05T21:40:08.866282+00:00', '--job-id', '1074', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmp2eouse_l']
[2024-12-05T21:40:13.868+0000] {standard_task_runner.py:105} INFO - Job 1074: Subtask call_llm
[2024-12-05T21:40:13.909+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T21:40:08.866282+00:00 [running]> on host c7780884450d
[2024-12-05T21:40:13.977+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='call_llm' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T21:40:08.866282+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T21:40:08.866282+00:00'
[2024-12-05T21:40:13.978+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T21:40:13.995+0000] {llm_mapping.py:155} INFO - Извлечён return_value: {'batch': ['hjc', 'hkaudio', 'hktyre', 'hlebsol', 'hobbi', 'hobbyworld', 'hobot', 'hoco', 'hohner', 'hoka', 'hola', 'holatoys', 'holder', 'holicy', 'holiday', 'holikaholika', 'hollicy', 'homage', 'homeart', 'homeelement', 'homelife', 'homestar', 'homs', 'homy', 'honda'], 'next_index': 2225}
[2024-12-05T21:40:13.995+0000] {llm_mapping.py:127} INFO - Отправка запроса к LLM.
[2024-12-05T21:40:14.423+0000] {logging_mixin.py:190} INFO - New g4f version: 0.3.8.3 (current: 0.3.8.0) | pip install -U g4f
[2024-12-05T21:40:33.789+0000] {llm_mapping.py:141} INFO - Получен ответ от LLM: Here’s the mapping of each brand to its predefined categories based on the search results:

1. **hjc** - auto (motorcycle helmets)
2. **hkaudio** - electronics (audio equipment)
3. **hktyre** - auto (tires)
4. **hlebsol** - medicine (health products)
5. **hobbi** - stationery (craft supplies)
6. **hobbyworld** - kids (toys and games)
7. **hobot** - appliances (robotic vacuum cleaners)
8. **hoco** - accessories (mobile phone accessories)
9. **hohner** - accessories (musical instruments)
10. **hoka** - apparel (athletic footwear)
11. **hola** - accessories (cosmetics and beauty products)
12. **holatoys** - kids (toys)
13. **holder** - accessories (various holders and stands)
14. **holicy** - apparel (clothing)
15. **holiday** - apparel (seasonal clothing)
16. **holikaholika** - cosmetics (beauty products)
17. **hollicy** - apparel (clothing)
18. **homage** - apparel (clothing)
19. **homeart** - furniture (home decor)
20. **homeelement** - appliances (home products)
21. **homelife** - furniture (home decor)
22. **homestar** - appliances (home products)
23. **homs** - furniture (home furniture)
24. **homy** - furniture (home decor)
25. **honda** - auto (vehicles and motorcycles)

Now, here’s the SQL INSERT statement based on the assigned categories:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('hjc', 'auto'),
    ('hkaudio', 'electronics'),
    ('hktyre', 'auto'),
    ('hlebsol', 'medicine'),
    ('hobbi', 'stationery'),
    ('hobbyworld', 'kids'),
    ('hobot', 'appliances'),
    ('hoco', 'accessories'),
    ('hohner', 'accessories'),
    ('hoka', 'apparel'),
    ('hola', 'accessories'),
    ('holatoys', 'kids'),
    ('holder', 'accessories'),
    ('holicy', 'apparel'),
    ('holiday', 'apparel'),
    ('holikaholika', 'cosmetics'),
    ('hollicy', 'apparel'),
    ('homage', 'apparel'),
    ('homeart', 'furniture'),
    ('homeelement', 'appliances'),
    ('homelife', 'furniture'),
    ('homestar', 'appliances'),
    ('homs', 'furniture'),
    ('homy', 'furniture'),
    ('honda', 'auto');
```
[2024-12-05T21:40:33.790+0000] {python.py:240} INFO - Done. Returned value was: Here’s the mapping of each brand to its predefined categories based on the search results:

1. **hjc** - auto (motorcycle helmets)
2. **hkaudio** - electronics (audio equipment)
3. **hktyre** - auto (tires)
4. **hlebsol** - medicine (health products)
5. **hobbi** - stationery (craft supplies)
6. **hobbyworld** - kids (toys and games)
7. **hobot** - appliances (robotic vacuum cleaners)
8. **hoco** - accessories (mobile phone accessories)
9. **hohner** - accessories (musical instruments)
10. **hoka** - apparel (athletic footwear)
11. **hola** - accessories (cosmetics and beauty products)
12. **holatoys** - kids (toys)
13. **holder** - accessories (various holders and stands)
14. **holicy** - apparel (clothing)
15. **holiday** - apparel (seasonal clothing)
16. **holikaholika** - cosmetics (beauty products)
17. **hollicy** - apparel (clothing)
18. **homage** - apparel (clothing)
19. **homeart** - furniture (home decor)
20. **homeelement** - appliances (home products)
21. **homelife** - furniture (home decor)
22. **homestar** - appliances (home products)
23. **homs** - furniture (home furniture)
24. **homy** - furniture (home decor)
25. **honda** - auto (vehicles and motorcycles)

Now, here’s the SQL INSERT statement based on the assigned categories:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('hjc', 'auto'),
    ('hkaudio', 'electronics'),
    ('hktyre', 'auto'),
    ('hlebsol', 'medicine'),
    ('hobbi', 'stationery'),
    ('hobbyworld', 'kids'),
    ('hobot', 'appliances'),
    ('hoco', 'accessories'),
    ('hohner', 'accessories'),
    ('hoka', 'apparel'),
    ('hola', 'accessories'),
    ('holatoys', 'kids'),
    ('holder', 'accessories'),
    ('holicy', 'apparel'),
    ('holiday', 'apparel'),
    ('holikaholika', 'cosmetics'),
    ('hollicy', 'apparel'),
    ('homage', 'apparel'),
    ('homeart', 'furniture'),
    ('homeelement', 'appliances'),
    ('homelife', 'furniture'),
    ('homestar', 'appliances'),
    ('homs', 'furniture'),
    ('homy', 'furniture'),
    ('honda', 'auto');
```
[2024-12-05T21:40:33.809+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T21:40:33.809+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=call_llm, run_id=manual__2024-12-05T21:40:08.866282+00:00, execution_date=20241205T214008, start_date=20241205T214013, end_date=20241205T214033
[2024-12-05T21:40:33.865+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T21:40:33.868+0000] {standard_task_runner.py:217} INFO - Process not found (most likely exited), stop collecting metrics
[2024-12-05T21:40:33.885+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T21:40:33.888+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
