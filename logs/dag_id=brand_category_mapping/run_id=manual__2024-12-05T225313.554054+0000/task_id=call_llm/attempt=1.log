[2024-12-05T22:53:18.519+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T22:53:18.533+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T22:53:13.554054+00:00 [queued]>
[2024-12-05T22:53:18.539+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T22:53:13.554054+00:00 [queued]>
[2024-12-05T22:53:18.539+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T22:53:18.552+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): call_llm> on 2024-12-05 22:53:13.554054+00:00
[2024-12-05T22:53:18.558+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=8764) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T22:53:18.559+0000] {standard_task_runner.py:72} INFO - Started process 8765 to run task
[2024-12-05T22:53:18.560+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'call_llm', 'manual__2024-12-05T22:53:13.554054+00:00', '--job-id', '1902', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmpmla11k8v']
[2024-12-05T22:53:18.561+0000] {standard_task_runner.py:105} INFO - Job 1902: Subtask call_llm
[2024-12-05T22:53:18.598+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T22:53:13.554054+00:00 [running]> on host c7780884450d
[2024-12-05T22:53:18.665+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='call_llm' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T22:53:13.554054+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T22:53:13.554054+00:00'
[2024-12-05T22:53:18.666+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T22:53:18.686+0000] {llm_mapping.py:155} INFO - Извлечён return_value: {'batch': ['zlatek', 'zmi', 'zobo', 'zodiac', 'zodiak', 'zoizoi', 'zongshen', 'zooexpress', 'zoom', 'zoomer', 'zoops', 'zorg', 'zotac', 'zowie', 'zpao', 'zte', 'zubr', 'zugo', 'zuru', 'zvezda', 'zwerg', 'zwilling', 'zwillingjahenckels', 'zx', 'zyxel'], 'next_index': 5675}
[2024-12-05T22:53:18.686+0000] {llm_mapping.py:127} INFO - Отправка запроса к LLM.
[2024-12-05T22:53:19.102+0000] {logging_mixin.py:190} INFO - New g4f version: 0.3.8.3 (current: 0.3.8.0) | pip install -U g4f
[2024-12-05T22:53:39.240+0000] {llm_mapping.py:141} INFO - Получен ответ от LLM: Here’s the mapping of each brand to the predefined categories based on the search results:

1. **zlatek** - stationery
2. **zmi** - electronics, appliances
3. **zobo** - kids, toys
4. **zodiac** - auto, accessories
5. **zodiak** - apparel
6. **zoizoi** - kids, toys
7. **zongshen** - auto, appliances
8. **zooexpress** - kids, toys
9. **zoom** - electronics, computers
10. **zoomer** - kids, toys
11. **zoops** - kids, toys
12. **zorg** - appliances, electronics
13. **zotac** - computers, electronics
14. **zowie** - electronics, computers
15. **zpao** - apparel
16. **zte** - electronics, computers
17. **zubr** - appliances, construction
18. **zugo** - apparel
19. **zuru** - kids, toys
20. **zvezda** - kids, toys
21. **zwerg** - kids, toys
22. **zwilling** - kitchen appliances, accessories
23. **zwillingjahenckels** - kitchen appliances, accessories
24. **zx** - electronics
25. **zyxel** - electronics, computers

Now, here is the SQL INSERT statement for the brand-category mapping:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('zlatek', 'stationery'),
    ('zmi', 'electronics'),
    ('zmi', 'appliances'),
    ('zobo', 'kids'),
    ('zobo', 'toys'),
    ('zodiac', 'auto'),
    ('zodiac', 'accessories'),
    ('zodiak', 'apparel'),
    ('zoizoi', 'kids'),
    ('zoizoi', 'toys'),
    ('zongshen', 'auto'),
    ('zongshen', 'appliances'),
    ('zooexpress', 'kids'),
    ('zooexpress', 'toys'),
    ('zoom', 'electronics'),
    ('zoom', 'computers'),
    ('zoomer', 'kids'),
    ('zoomer', 'toys'),
    ('zoops', 'kids'),
    ('zoops', 'toys'),
    ('zorg', 'appliances'),
    ('zorg', 'electronics'),
    ('zotac', 'computers'),
    ('zotac', 'electronics'),
    ('zowie', 'electronics'),
    ('zowie', 'computers'),
    ('zpao', 'apparel'),
    ('zte', 'electronics'),
    ('zte', 'computers'),
    ('zubr', 'appliances'),
    ('zubr', 'construction'),
    ('zugo', 'apparel'),
    ('zuru', 'kids'),
    ('zuru', 'toys'),
    ('zvezda', 'kids'),
    ('zvezda', 'toys'),
    ('zwerg', 'kids'),
    ('zwerg', 'toys'),
    ('zwilling', 'appliances'),
    ('zwilling', 'accessories'),
    ('zwillingjahenckels', 'appliances'),
    ('zwillingjahenckels', 'accessories'),
    ('zx', 'electronics'),
    ('zyxel', 'electronics'),
    ('zyxel', 'computers');
```
[2024-12-05T22:53:39.240+0000] {python.py:240} INFO - Done. Returned value was: Here’s the mapping of each brand to the predefined categories based on the search results:

1. **zlatek** - stationery
2. **zmi** - electronics, appliances
3. **zobo** - kids, toys
4. **zodiac** - auto, accessories
5. **zodiak** - apparel
6. **zoizoi** - kids, toys
7. **zongshen** - auto, appliances
8. **zooexpress** - kids, toys
9. **zoom** - electronics, computers
10. **zoomer** - kids, toys
11. **zoops** - kids, toys
12. **zorg** - appliances, electronics
13. **zotac** - computers, electronics
14. **zowie** - electronics, computers
15. **zpao** - apparel
16. **zte** - electronics, computers
17. **zubr** - appliances, construction
18. **zugo** - apparel
19. **zuru** - kids, toys
20. **zvezda** - kids, toys
21. **zwerg** - kids, toys
22. **zwilling** - kitchen appliances, accessories
23. **zwillingjahenckels** - kitchen appliances, accessories
24. **zx** - electronics
25. **zyxel** - electronics, computers

Now, here is the SQL INSERT statement for the brand-category mapping:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('zlatek', 'stationery'),
    ('zmi', 'electronics'),
    ('zmi', 'appliances'),
    ('zobo', 'kids'),
    ('zobo', 'toys'),
    ('zodiac', 'auto'),
    ('zodiac', 'accessories'),
    ('zodiak', 'apparel'),
    ('zoizoi', 'kids'),
    ('zoizoi', 'toys'),
    ('zongshen', 'auto'),
    ('zongshen', 'appliances'),
    ('zooexpress', 'kids'),
    ('zooexpress', 'toys'),
    ('zoom', 'electronics'),
    ('zoom', 'computers'),
    ('zoomer', 'kids'),
    ('zoomer', 'toys'),
    ('zoops', 'kids'),
    ('zoops', 'toys'),
    ('zorg', 'appliances'),
    ('zorg', 'electronics'),
    ('zotac', 'computers'),
    ('zotac', 'electronics'),
    ('zowie', 'electronics'),
    ('zowie', 'computers'),
    ('zpao', 'apparel'),
    ('zte', 'electronics'),
    ('zte', 'computers'),
    ('zubr', 'appliances'),
    ('zubr', 'construction'),
    ('zugo', 'apparel'),
    ('zuru', 'kids'),
    ('zuru', 'toys'),
    ('zvezda', 'kids'),
    ('zvezda', 'toys'),
    ('zwerg', 'kids'),
    ('zwerg', 'toys'),
    ('zwilling', 'appliances'),
    ('zwilling', 'accessories'),
    ('zwillingjahenckels', 'appliances'),
    ('zwillingjahenckels', 'accessories'),
    ('zx', 'electronics'),
    ('zyxel', 'electronics'),
    ('zyxel', 'computers');
```
[2024-12-05T22:53:39.261+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T22:53:39.261+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=call_llm, run_id=manual__2024-12-05T22:53:13.554054+00:00, execution_date=20241205T225313, start_date=20241205T225318, end_date=20241205T225339
[2024-12-05T22:53:39.312+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T22:53:39.354+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T22:53:39.359+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
