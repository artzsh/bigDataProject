[2024-12-05T22:09:41.151+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T22:09:41.164+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T22:09:02.785672+00:00 [queued]>
[2024-12-05T22:09:41.170+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T22:09:02.785672+00:00 [queued]>
[2024-12-05T22:09:41.171+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T22:09:41.182+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): extract_sql> on 2024-12-05 22:09:02.785672+00:00
[2024-12-05T22:09:41.188+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=6454) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T22:09:41.190+0000] {standard_task_runner.py:72} INFO - Started process 6455 to run task
[2024-12-05T22:09:41.190+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'extract_sql', 'manual__2024-12-05T22:09:02.785672+00:00', '--job-id', '1405', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmpv0gxpn7b']
[2024-12-05T22:09:41.192+0000] {standard_task_runner.py:105} INFO - Job 1405: Subtask extract_sql
[2024-12-05T22:09:41.242+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T22:09:02.785672+00:00 [running]> on host c7780884450d
[2024-12-05T22:09:41.371+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='extract_sql' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T22:09:02.785672+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T22:09:02.785672+00:00'
[2024-12-05T22:09:41.373+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T22:09:41.397+0000] {llm_mapping.py:187} INFO - Извлечён llm_response: Here's the mapping of the provided brands to their respective categories based on the search queries and information available:

1. **nikai** - appliances
2. **nikakids** - kids
3. **nikanplus** - apparel
4. **nike** - apparel, accessories, sport
5. **nikon** - electronics
6. **nikotex** - medicine
7. **nikstory** - stationery
8. **nikzad** - apparel
9. **nillkin** - electronics, accessories
10. **ninaricci** - apparel, accessories
11. **ninebot** - electronics, auto
12. **ningbo** - construction
13. **nintendo** - electronics, kids
14. **nioxin** - medicine
15. **nip** - medicine
16. **nirmal** - stationery
17. **nishane** - accessories
18. **nitecore** - electronics
19. **nitro** - auto
20. **nitto** - auto
21. **nivea** - medicine, cosmetics
22. **nix** - electronics
23. **nixx** - electronics
24. **nizegorodskaaigruska** - kids
25. **nmp** - construction

Now, here is the SQL INSERT statement based on the mappings:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('nikai', 'appliances'),
    ('nikakids', 'kids'),
    ('nikanplus', 'apparel'),
    ('nike', 'apparel'),
    ('nike', 'accessories'),
    ('nike', 'sport'),
    ('nikon', 'electronics'),
    ('nikotex', 'medicine'),
    ('nikstory', 'stationery'),
    ('nikzad', 'apparel'),
    ('nillkin', 'electronics'),
    ('nillkin', 'accessories'),
    ('ninaricci', 'apparel'),
    ('ninaricci', 'accessories'),
    ('ninebot', 'electronics'),
    ('ninebot', 'auto'),
    ('ningbo', 'construction'),
    ('nintendo', 'electronics'),
    ('nintendo', 'kids'),
    ('nioxin', 'medicine'),
    ('nip', 'medicine'),
    ('nirmal', 'stationery'),
    ('nishane', 'accessories'),
    ('nitecore', 'electronics'),
    ('nitro', 'auto'),
    ('nitto', 'auto'),
    ('nivea', 'medicine'),
    ('nivea', 'cosmetics'),
    ('nix', 'electronics'),
    ('nixx', 'electronics'),
    ('nizegorodskaaigruska', 'kids'),
    ('nmp', 'construction');
```

This statement includes all the brands and their corresponding categories as per the provided guidelines.
[2024-12-05T22:09:41.398+0000] {llm_mapping.py:174} INFO - Извлечён SQL-код:
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('nikai', 'appliances'),
    ('nikakids', 'kids'),
    ('nikanplus', 'apparel'),
    ('nike', 'apparel'),
    ('nike', 'accessories'),
    ('nike', 'sport'),
    ('nikon', 'electronics'),
    ('nikotex', 'medicine'),
    ('nikstory', 'stationery'),
    ('nikzad', 'apparel'),
    ('nillkin', 'electronics'),
    ('nillkin', 'accessories'),
    ('ninaricci', 'apparel'),
    ('ninaricci', 'accessories'),
    ('ninebot', 'electronics'),
    ('ninebot', 'auto'),
    ('ningbo', 'construction'),
    ('nintendo', 'electronics'),
    ('nintendo', 'kids'),
    ('nioxin', 'medicine'),
    ('nip', 'medicine'),
    ('nirmal', 'stationery'),
    ('nishane', 'accessories'),
    ('nitecore', 'electronics'),
    ('nitro', 'auto'),
    ('nitto', 'auto'),
    ('nivea', 'medicine'),
    ('nivea', 'cosmetics'),
    ('nix', 'electronics'),
    ('nixx', 'electronics'),
    ('nizegorodskaaigruska', 'kids'),
    ('nmp', 'construction');
[2024-12-05T22:09:41.399+0000] {python.py:240} INFO - Done. Returned value was: INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('nikai', 'appliances'),
    ('nikakids', 'kids'),
    ('nikanplus', 'apparel'),
    ('nike', 'apparel'),
    ('nike', 'accessories'),
    ('nike', 'sport'),
    ('nikon', 'electronics'),
    ('nikotex', 'medicine'),
    ('nikstory', 'stationery'),
    ('nikzad', 'apparel'),
    ('nillkin', 'electronics'),
    ('nillkin', 'accessories'),
    ('ninaricci', 'apparel'),
    ('ninaricci', 'accessories'),
    ('ninebot', 'electronics'),
    ('ninebot', 'auto'),
    ('ningbo', 'construction'),
    ('nintendo', 'electronics'),
    ('nintendo', 'kids'),
    ('nioxin', 'medicine'),
    ('nip', 'medicine'),
    ('nirmal', 'stationery'),
    ('nishane', 'accessories'),
    ('nitecore', 'electronics'),
    ('nitro', 'auto'),
    ('nitto', 'auto'),
    ('nivea', 'medicine'),
    ('nivea', 'cosmetics'),
    ('nix', 'electronics'),
    ('nixx', 'electronics'),
    ('nizegorodskaaigruska', 'kids'),
    ('nmp', 'construction');
[2024-12-05T22:09:41.415+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T22:09:41.415+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=extract_sql, run_id=manual__2024-12-05T22:09:02.785672+00:00, execution_date=20241205T220902, start_date=20241205T220941, end_date=20241205T220941
[2024-12-05T22:09:41.444+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T22:09:41.462+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T22:09:41.465+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
