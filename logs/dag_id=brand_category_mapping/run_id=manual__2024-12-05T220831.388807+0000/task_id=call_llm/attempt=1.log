[2024-12-05T22:08:37.476+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T22:08:37.487+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T22:08:31.388807+00:00 [queued]>
[2024-12-05T22:08:37.493+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T22:08:31.388807+00:00 [queued]>
[2024-12-05T22:08:37.493+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T22:08:37.505+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): call_llm> on 2024-12-05 22:08:31.388807+00:00
[2024-12-05T22:08:37.511+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=6414) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T22:08:37.512+0000] {standard_task_runner.py:72} INFO - Started process 6415 to run task
[2024-12-05T22:08:37.512+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'call_llm', 'manual__2024-12-05T22:08:31.388807+00:00', '--job-id', '1398', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmpwmgk__mf']
[2024-12-05T22:08:37.514+0000] {standard_task_runner.py:105} INFO - Job 1398: Subtask call_llm
[2024-12-05T22:08:37.547+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T22:08:31.388807+00:00 [running]> on host c7780884450d
[2024-12-05T22:08:37.606+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='call_llm' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T22:08:31.388807+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T22:08:31.388807+00:00'
[2024-12-05T22:08:37.607+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T22:08:37.624+0000] {llm_mapping.py:155} INFO - Извлечён return_value: {'batch': ['netechnics', 'netgear', 'netis', 'neumann', 'neva', 'neva-taft', 'newbright', 'newco', 'newport', 'newsuntoys', 'nexen', 'nexpero', 'next', 'nexttab', 'nexttool', 'nexxt', 'ngk', 'nibk', 'nicecooker', 'nici', 'nickelodeon', 'nicol', 'niio', 'nik', 'nika'], 'next_index': 3575}
[2024-12-05T22:08:37.625+0000] {llm_mapping.py:127} INFO - Отправка запроса к LLM.
[2024-12-05T22:08:38.053+0000] {logging_mixin.py:190} INFO - New g4f version: 0.3.8.3 (current: 0.3.8.0) | pip install -U g4f
[2024-12-05T22:08:57.703+0000] {llm_mapping.py:141} INFO - Получен ответ от LLM: Here’s the mapping for the provided brands based on the search queries:

1. **netechnics**: electronics
2. **netgear**: electronics
3. **netis**: electronics
4. **neumann**: electronics, accessories
5. **neva**: appliances
6. **neva-taft**: appliances
7. **newbright**: kids, toys
8. **newco**: furniture
9. **newport**: furniture
10. **newsuntoys**: kids, toys
11. **nexen**: auto
12. **nexpero**: electronics
13. **next**: apparel
14. **nexttab**: electronics
15. **nexttool**: tools, construction
16. **nexxt**: electronics
17. **ngk**: auto, accessories
18. **nibk**: auto, accessories
19. **nicecooker**: appliances
20. **nici**: kids, accessories
21. **nickelodeon**: kids, entertainment
22. **nicol**: stationery
23. **niio**: electronics
24. **nik**: apparel
25. **nika**: apparel

Now, here is the SQL INSERT statement based on the mappings:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('netechnics', 'electronics'),
    ('netgear', 'electronics'),
    ('netis', 'electronics'),
    ('neumann', 'electronics'),
    ('neumann', 'accessories'),
    ('neva', 'appliances'),
    ('neva-taft', 'appliances'),
    ('newbright', 'kids'),
    ('newbright', 'toys'),
    ('newco', 'furniture'),
    ('newport', 'furniture'),
    ('newsuntoys', 'kids'),
    ('newsuntoys', 'toys'),
    ('nexen', 'auto'),
    ('nexpero', 'electronics'),
    ('next', 'apparel'),
    ('nexttab', 'electronics'),
    ('nexttool', 'construction'),
    ('nexxt', 'electronics'),
    ('ngk', 'auto'),
    ('ngk', 'accessories'),
    ('nibk', 'auto'),
    ('nibk', 'accessories'),
    ('nicecooker', 'appliances'),
    ('nici', 'kids'),
    ('nici', 'accessories'),
    ('nickelodeon', 'kids'),
    ('nickelodeon', 'entertainment'),
    ('nicol', 'stationery'),
    ('niio', 'electronics'),
    ('nik', 'apparel'),
    ('nika', 'apparel');
```
[2024-12-05T22:08:57.704+0000] {python.py:240} INFO - Done. Returned value was: Here’s the mapping for the provided brands based on the search queries:

1. **netechnics**: electronics
2. **netgear**: electronics
3. **netis**: electronics
4. **neumann**: electronics, accessories
5. **neva**: appliances
6. **neva-taft**: appliances
7. **newbright**: kids, toys
8. **newco**: furniture
9. **newport**: furniture
10. **newsuntoys**: kids, toys
11. **nexen**: auto
12. **nexpero**: electronics
13. **next**: apparel
14. **nexttab**: electronics
15. **nexttool**: tools, construction
16. **nexxt**: electronics
17. **ngk**: auto, accessories
18. **nibk**: auto, accessories
19. **nicecooker**: appliances
20. **nici**: kids, accessories
21. **nickelodeon**: kids, entertainment
22. **nicol**: stationery
23. **niio**: electronics
24. **nik**: apparel
25. **nika**: apparel

Now, here is the SQL INSERT statement based on the mappings:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('netechnics', 'electronics'),
    ('netgear', 'electronics'),
    ('netis', 'electronics'),
    ('neumann', 'electronics'),
    ('neumann', 'accessories'),
    ('neva', 'appliances'),
    ('neva-taft', 'appliances'),
    ('newbright', 'kids'),
    ('newbright', 'toys'),
    ('newco', 'furniture'),
    ('newport', 'furniture'),
    ('newsuntoys', 'kids'),
    ('newsuntoys', 'toys'),
    ('nexen', 'auto'),
    ('nexpero', 'electronics'),
    ('next', 'apparel'),
    ('nexttab', 'electronics'),
    ('nexttool', 'construction'),
    ('nexxt', 'electronics'),
    ('ngk', 'auto'),
    ('ngk', 'accessories'),
    ('nibk', 'auto'),
    ('nibk', 'accessories'),
    ('nicecooker', 'appliances'),
    ('nici', 'kids'),
    ('nici', 'accessories'),
    ('nickelodeon', 'kids'),
    ('nickelodeon', 'entertainment'),
    ('nicol', 'stationery'),
    ('niio', 'electronics'),
    ('nik', 'apparel'),
    ('nika', 'apparel');
```
[2024-12-05T22:08:57.724+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T22:08:57.725+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=call_llm, run_id=manual__2024-12-05T22:08:31.388807+00:00, execution_date=20241205T220831, start_date=20241205T220837, end_date=20241205T220857
[2024-12-05T22:08:57.775+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T22:08:57.794+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T22:08:57.799+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
