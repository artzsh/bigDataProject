[2024-12-05T22:16:12.182+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T22:16:12.198+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T22:15:49.255165+00:00 [queued]>
[2024-12-05T22:16:12.205+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T22:15:49.255165+00:00 [queued]>
[2024-12-05T22:16:12.206+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T22:16:12.219+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): extract_sql> on 2024-12-05 22:15:49.255165+00:00
[2024-12-05T22:16:12.225+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=6818) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T22:16:12.227+0000] {standard_task_runner.py:72} INFO - Started process 6819 to run task
[2024-12-05T22:16:12.227+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'extract_sql', 'manual__2024-12-05T22:15:49.255165+00:00', '--job-id', '1483', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmpmthrdyjx']
[2024-12-05T22:16:12.229+0000] {standard_task_runner.py:105} INFO - Job 1483: Subtask extract_sql
[2024-12-05T22:16:12.266+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T22:15:49.255165+00:00 [running]> on host c7780884450d
[2024-12-05T22:16:12.328+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='extract_sql' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T22:15:49.255165+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T22:15:49.255165+00:00'
[2024-12-05T22:16:12.329+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T22:16:12.347+0000] {llm_mapping.py:187} INFO - Извлечён llm_response: Here’s the mapping of the brands to their respective categories based on the search results:

1. **peppapig** - kids
2. **pepsi** - beverages (not in categories, but can be considered as a food-related category)
3. **pequetren** - toys, kids
4. **perilla** - apparel
5. **perina** - apparel
6. **perlina** - apparel
7. **permanence** - stationery
8. **persil** - appliances (laundry products)
9. **persona** - stationery
10. **peru** - country_yard (as it relates to a country)
11. **peruzzo** - auto (bicycle accessories)
12. **pervenec** - apparel
13. **perwoll** - appliances (laundry products)
14. **petek** - accessories (bags and travel accessories)
15. **peterhof** - kitchen appliances
16. **petitcollin** - kids (toys)
17. **petitfee** - medicine (health products)
18. **petmate** - accessories (pet products)
19. **petro-canada** - auto (fuel)
20. **phanteks** - computers (computer components)
21. **phantom** - electronics (likely related to audio/visual equipment)
22. **philandteds** - kids (baby products)
23. **philippus** - medicine (health products)
24. **philips** - electronics (various electronics)
25. **phillips** - electronics (similar to Philips, likely referring to the same category)

Now, here’s the SQL INSERT statement based on the above categories:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('peppapig', 'kids'),
    ('pepsi', 'appliances'), -- assuming beverages as a stretch
    ('pequetren', 'kids'),
    ('perilla', 'apparel'),
    ('perina', 'apparel'),
    ('perlina', 'apparel'),
    ('permanence', 'stationery'),
    ('persil', 'appliances'),
    ('persona', 'stationery'),
    ('peru', 'country_yard'),
    ('peruzzo', 'auto'),
    ('pervenec', 'apparel'),
    ('perwoll', 'appliances'),
    ('petek', 'accessories'),
    ('peterhof', 'appliances'),
    ('petitcollin', 'kids'),
    ('petitfee', 'medicine'),
    ('petmate', 'accessories'),
    ('petro-canada', 'auto'),
    ('phanteks', 'computers'),
    ('phantom', 'electronics'),
    ('philandteds', 'kids'),
    ('philippus', 'medicine'),
    ('philips', 'electronics'),
    ('phillips', 'electronics');
``` 

This SQL statement captures the brands and their respective categories based on the search results and logical associations.
[2024-12-05T22:16:12.348+0000] {llm_mapping.py:174} INFO - Извлечён SQL-код:
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('peppapig', 'kids'),
    ('pepsi', 'appliances'), -- assuming beverages as a stretch
    ('pequetren', 'kids'),
    ('perilla', 'apparel'),
    ('perina', 'apparel'),
    ('perlina', 'apparel'),
    ('permanence', 'stationery'),
    ('persil', 'appliances'),
    ('persona', 'stationery'),
    ('peru', 'country_yard'),
    ('peruzzo', 'auto'),
    ('pervenec', 'apparel'),
    ('perwoll', 'appliances'),
    ('petek', 'accessories'),
    ('peterhof', 'appliances'),
    ('petitcollin', 'kids'),
    ('petitfee', 'medicine'),
    ('petmate', 'accessories'),
    ('petro-canada', 'auto'),
    ('phanteks', 'computers'),
    ('phantom', 'electronics'),
    ('philandteds', 'kids'),
    ('philippus', 'medicine'),
    ('philips', 'electronics'),
    ('phillips', 'electronics');
[2024-12-05T22:16:12.348+0000] {python.py:240} INFO - Done. Returned value was: INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('peppapig', 'kids'),
    ('pepsi', 'appliances'), -- assuming beverages as a stretch
    ('pequetren', 'kids'),
    ('perilla', 'apparel'),
    ('perina', 'apparel'),
    ('perlina', 'apparel'),
    ('permanence', 'stationery'),
    ('persil', 'appliances'),
    ('persona', 'stationery'),
    ('peru', 'country_yard'),
    ('peruzzo', 'auto'),
    ('pervenec', 'apparel'),
    ('perwoll', 'appliances'),
    ('petek', 'accessories'),
    ('peterhof', 'appliances'),
    ('petitcollin', 'kids'),
    ('petitfee', 'medicine'),
    ('petmate', 'accessories'),
    ('petro-canada', 'auto'),
    ('phanteks', 'computers'),
    ('phantom', 'electronics'),
    ('philandteds', 'kids'),
    ('philippus', 'medicine'),
    ('philips', 'electronics'),
    ('phillips', 'electronics');
[2024-12-05T22:16:12.364+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T22:16:12.365+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=extract_sql, run_id=manual__2024-12-05T22:15:49.255165+00:00, execution_date=20241205T221549, start_date=20241205T221612, end_date=20241205T221612
[2024-12-05T22:16:12.401+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T22:16:12.419+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T22:16:12.422+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
