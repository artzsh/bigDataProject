[2024-12-05T21:47:30.143+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T21:47:30.155+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:46:59.102141+00:00 [queued]>
[2024-12-05T21:47:30.160+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:46:59.102141+00:00 [queued]>
[2024-12-05T21:47:30.161+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T21:47:30.172+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): extract_sql> on 2024-12-05 21:46:59.102141+00:00
[2024-12-05T21:47:30.179+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=5285) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T21:47:30.181+0000] {standard_task_runner.py:72} INFO - Started process 5286 to run task
[2024-12-05T21:47:30.181+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'extract_sql', 'manual__2024-12-05T21:46:59.102141+00:00', '--job-id', '1153', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmpkxym5est']
[2024-12-05T21:47:30.182+0000] {standard_task_runner.py:105} INFO - Job 1153: Subtask extract_sql
[2024-12-05T21:47:30.219+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:46:59.102141+00:00 [running]> on host c7780884450d
[2024-12-05T21:47:30.276+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='extract_sql' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T21:46:59.102141+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T21:46:59.102141+00:00'
[2024-12-05T21:47:30.277+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T21:47:30.294+0000] {llm_mapping.py:187} INFO - Извлечён llm_response: Based on the provided brands, I will perform the steps outlined to determine the appropriate categories for each brand. Here are the results:

1. **kampfer**: kitchen appliances, country yard
2. **kamskaaposuda**: kitchen appliances
3. **kandf**: stationery
4. **kangkang**: kids
5. **kanizea**: apparel
6. **kanzler**: apparel, accessories
7. **kapika**: kids, apparel
8. **kapitoska**: kids, apparel
9. **kaplanser**: apparel
10. **kapo**: apparel
11. **kapous**: beauty, accessories
12. **kapousprofessional**: beauty, accessories
13. **kappa**: apparel, sport
14. **kapsen**: apparel
15. **karadium**: beauty, cosmetics
16. **karaja**: beauty, cosmetics
17. **karapuz**: kids
18. **karat**: jewelry, accessories
19. **karavaevskaauf**: apparel
20. **karcher**: appliances, construction
21. **karerapress**: stationery
22. **kari**: beauty, cosmetics
23. **karma**: beauty, cosmetics
24. **karmababy**: kids
25. **karmen**: apparel, accessories

Now, I will generate the SQL INSERT statement based on the categories assigned:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('kampfer', 'appliances'),
    ('kampfer', 'country_yard'),
    ('kamskaaposuda', 'appliances'),
    ('kandf', 'stationery'),
    ('kangkang', 'kids'),
    ('kanizea', 'apparel'),
    ('kanzler', 'apparel'),
    ('kanzler', 'accessories'),
    ('kapika', 'kids'),
    ('kapika', 'apparel'),
    ('kapitoska', 'kids'),
    ('kapitoska', 'apparel'),
    ('kaplanser', 'apparel'),
    ('kapo', 'apparel'),
    ('kapous', 'accessories'),
    ('kapousprofessional', 'accessories'),
    ('kappa', 'apparel'),
    ('kappa', 'sport'),
    ('kapsen', 'apparel'),
    ('karadium', 'cosmetics'),
    ('karaja', 'cosmetics'),
    ('karapuz', 'kids'),
    ('karat', 'accessories'),
    ('karavaevskaauf', 'apparel'),
    ('karcher', 'appliances'),
    ('karcher', 'construction'),
    ('karerapress', 'stationery'),
    ('kari', 'cosmetics'),
    ('karma', 'cosmetics'),
    ('karmababy', 'kids'),
    ('karmen', 'apparel'),
    ('karmen', 'accessories');
```

This SQL statement inserts the mapping of each brand to its respective categories as determined.
[2024-12-05T21:47:30.295+0000] {llm_mapping.py:174} INFO - Извлечён SQL-код:
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('kampfer', 'appliances'),
    ('kampfer', 'country_yard'),
    ('kamskaaposuda', 'appliances'),
    ('kandf', 'stationery'),
    ('kangkang', 'kids'),
    ('kanizea', 'apparel'),
    ('kanzler', 'apparel'),
    ('kanzler', 'accessories'),
    ('kapika', 'kids'),
    ('kapika', 'apparel'),
    ('kapitoska', 'kids'),
    ('kapitoska', 'apparel'),
    ('kaplanser', 'apparel'),
    ('kapo', 'apparel'),
    ('kapous', 'accessories'),
    ('kapousprofessional', 'accessories'),
    ('kappa', 'apparel'),
    ('kappa', 'sport'),
    ('kapsen', 'apparel'),
    ('karadium', 'cosmetics'),
    ('karaja', 'cosmetics'),
    ('karapuz', 'kids'),
    ('karat', 'accessories'),
    ('karavaevskaauf', 'apparel'),
    ('karcher', 'appliances'),
    ('karcher', 'construction'),
    ('karerapress', 'stationery'),
    ('kari', 'cosmetics'),
    ('karma', 'cosmetics'),
    ('karmababy', 'kids'),
    ('karmen', 'apparel'),
    ('karmen', 'accessories');
[2024-12-05T21:47:30.295+0000] {python.py:240} INFO - Done. Returned value was: INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('kampfer', 'appliances'),
    ('kampfer', 'country_yard'),
    ('kamskaaposuda', 'appliances'),
    ('kandf', 'stationery'),
    ('kangkang', 'kids'),
    ('kanizea', 'apparel'),
    ('kanzler', 'apparel'),
    ('kanzler', 'accessories'),
    ('kapika', 'kids'),
    ('kapika', 'apparel'),
    ('kapitoska', 'kids'),
    ('kapitoska', 'apparel'),
    ('kaplanser', 'apparel'),
    ('kapo', 'apparel'),
    ('kapous', 'accessories'),
    ('kapousprofessional', 'accessories'),
    ('kappa', 'apparel'),
    ('kappa', 'sport'),
    ('kapsen', 'apparel'),
    ('karadium', 'cosmetics'),
    ('karaja', 'cosmetics'),
    ('karapuz', 'kids'),
    ('karat', 'accessories'),
    ('karavaevskaauf', 'apparel'),
    ('karcher', 'appliances'),
    ('karcher', 'construction'),
    ('karerapress', 'stationery'),
    ('kari', 'cosmetics'),
    ('karma', 'cosmetics'),
    ('karmababy', 'kids'),
    ('karmen', 'apparel'),
    ('karmen', 'accessories');
[2024-12-05T21:47:30.311+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T21:47:30.311+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=extract_sql, run_id=manual__2024-12-05T21:46:59.102141+00:00, execution_date=20241205T214659, start_date=20241205T214730, end_date=20241205T214730
[2024-12-05T21:47:30.355+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T21:47:30.375+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T21:47:30.378+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
