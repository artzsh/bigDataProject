[2024-12-05T21:10:47.195+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T21:10:47.210+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:10:22.481104+00:00 [queued]>
[2024-12-05T21:10:47.218+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:10:22.481104+00:00 [queued]>
[2024-12-05T21:10:47.218+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T21:10:47.232+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): extract_sql> on 2024-12-05 21:10:22.481104+00:00
[2024-12-05T21:10:47.238+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=3310) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T21:10:47.240+0000] {standard_task_runner.py:72} INFO - Started process 3311 to run task
[2024-12-05T21:10:47.240+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'extract_sql', 'manual__2024-12-05T21:10:22.481104+00:00', '--job-id', '727', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmpovn5c8jc']
[2024-12-05T21:10:47.242+0000] {standard_task_runner.py:105} INFO - Job 727: Subtask extract_sql
[2024-12-05T21:10:47.281+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:10:22.481104+00:00 [running]> on host c7780884450d
[2024-12-05T21:10:47.353+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='extract_sql' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T21:10:22.481104+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T21:10:22.481104+00:00'
[2024-12-05T21:10:47.354+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T21:10:47.375+0000] {llm_mapping.py:187} INFO - Извлечён llm_response: Here's the mapping of the provided brands to their respective categories based on the search results:

1. **bomberg** - apparel, accessories
2. **bombora** - appliances, electronics
3. **bompani** - appliances
4. **bon** - apparel
5. **bona** - appliances, cleaning
6. **bond** - accessories
7. **bondibon** - kids, stationery
8. **bonduelle** - country_yard, food
9. **boneco** - appliances, electronics
10. **bonita** - apparel
11. **bonne** - apparel
12. **bontrager** - sport, accessories
13. **bonvini** - furniture
14. **booil** - appliances
15. **boomtrix** - kids, toys
16. **borasco** - appliances
17. **bork** - appliances, electronics
18. **borofone** - electronics, accessories
19. **borovici** - furniture
20. **bosch** - appliances, electronics, construction
21. **bose** - electronics
22. **bosh** - electronics, appliances
23. **bosher** - appliances
24. **bosnic** - cleaning, appliances
25. **boss** - apparel, accessories

Now, here is the SQL INSERT statement based on the mappings:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('bomberg', 'apparel'),
    ('bomberg', 'accessories'),
    ('bombora', 'appliances'),
    ('bombora', 'electronics'),
    ('bompani', 'appliances'),
    ('bon', 'apparel'),
    ('bona', 'appliances'),
    ('bona', 'cleaning'),
    ('bond', 'accessories'),
    ('bondibon', 'kids'),
    ('bondibon', 'stationery'),
    ('bonduelle', 'country_yard'),
    ('bonduelle', 'food'),
    ('boneco', 'appliances'),
    ('boneco', 'electronics'),
    ('bonita', 'apparel'),
    ('bonne', 'apparel'),
    ('bontrager', 'sport'),
    ('bontrager', 'accessories'),
    ('bonvini', 'furniture'),
    ('booil', 'appliances'),
    ('boomtrix', 'kids'),
    ('boomtrix', 'toys'),
    ('borasco', 'appliances'),
    ('bork', 'appliances'),
    ('bork', 'electronics'),
    ('borofone', 'electronics'),
    ('borofone', 'accessories'),
    ('borovici', 'furniture'),
    ('bosch', 'appliances'),
    ('bosch', 'electronics'),
    ('bosch', 'construction'),
    ('bose', 'electronics'),
    ('bosh', 'electronics'),
    ('bosh', 'appliances'),
    ('bosher', 'appliances'),
    ('bosnic', 'cleaning'),
    ('bosnic', 'appliances'),
    ('boss', 'apparel'),
    ('boss', 'accessories');
```
[2024-12-05T21:10:47.376+0000] {llm_mapping.py:174} INFO - Извлечён SQL-код:
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('bomberg', 'apparel'),
    ('bomberg', 'accessories'),
    ('bombora', 'appliances'),
    ('bombora', 'electronics'),
    ('bompani', 'appliances'),
    ('bon', 'apparel'),
    ('bona', 'appliances'),
    ('bona', 'cleaning'),
    ('bond', 'accessories'),
    ('bondibon', 'kids'),
    ('bondibon', 'stationery'),
    ('bonduelle', 'country_yard'),
    ('bonduelle', 'food'),
    ('boneco', 'appliances'),
    ('boneco', 'electronics'),
    ('bonita', 'apparel'),
    ('bonne', 'apparel'),
    ('bontrager', 'sport'),
    ('bontrager', 'accessories'),
    ('bonvini', 'furniture'),
    ('booil', 'appliances'),
    ('boomtrix', 'kids'),
    ('boomtrix', 'toys'),
    ('borasco', 'appliances'),
    ('bork', 'appliances'),
    ('bork', 'electronics'),
    ('borofone', 'electronics'),
    ('borofone', 'accessories'),
    ('borovici', 'furniture'),
    ('bosch', 'appliances'),
    ('bosch', 'electronics'),
    ('bosch', 'construction'),
    ('bose', 'electronics'),
    ('bosh', 'electronics'),
    ('bosh', 'appliances'),
    ('bosher', 'appliances'),
    ('bosnic', 'cleaning'),
    ('bosnic', 'appliances'),
    ('boss', 'apparel'),
    ('boss', 'accessories');
[2024-12-05T21:10:47.377+0000] {python.py:240} INFO - Done. Returned value was: INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('bomberg', 'apparel'),
    ('bomberg', 'accessories'),
    ('bombora', 'appliances'),
    ('bombora', 'electronics'),
    ('bompani', 'appliances'),
    ('bon', 'apparel'),
    ('bona', 'appliances'),
    ('bona', 'cleaning'),
    ('bond', 'accessories'),
    ('bondibon', 'kids'),
    ('bondibon', 'stationery'),
    ('bonduelle', 'country_yard'),
    ('bonduelle', 'food'),
    ('boneco', 'appliances'),
    ('boneco', 'electronics'),
    ('bonita', 'apparel'),
    ('bonne', 'apparel'),
    ('bontrager', 'sport'),
    ('bontrager', 'accessories'),
    ('bonvini', 'furniture'),
    ('booil', 'appliances'),
    ('boomtrix', 'kids'),
    ('boomtrix', 'toys'),
    ('borasco', 'appliances'),
    ('bork', 'appliances'),
    ('bork', 'electronics'),
    ('borofone', 'electronics'),
    ('borofone', 'accessories'),
    ('borovici', 'furniture'),
    ('bosch', 'appliances'),
    ('bosch', 'electronics'),
    ('bosch', 'construction'),
    ('bose', 'electronics'),
    ('bosh', 'electronics'),
    ('bosh', 'appliances'),
    ('bosher', 'appliances'),
    ('bosnic', 'cleaning'),
    ('bosnic', 'appliances'),
    ('boss', 'apparel'),
    ('boss', 'accessories');
[2024-12-05T21:10:47.396+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T21:10:47.397+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=extract_sql, run_id=manual__2024-12-05T21:10:22.481104+00:00, execution_date=20241205T211022, start_date=20241205T211047, end_date=20241205T211047
[2024-12-05T21:10:47.415+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T21:10:47.436+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T21:10:47.440+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
