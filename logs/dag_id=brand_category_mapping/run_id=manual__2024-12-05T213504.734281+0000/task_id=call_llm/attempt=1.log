[2024-12-05T21:35:09.610+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T21:35:09.621+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T21:35:04.734281+00:00 [queued]>
[2024-12-05T21:35:09.629+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T21:35:04.734281+00:00 [queued]>
[2024-12-05T21:35:09.629+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T21:35:09.643+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): call_llm> on 2024-12-05 21:35:04.734281+00:00
[2024-12-05T21:35:09.650+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=4657) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T21:35:09.652+0000] {standard_task_runner.py:72} INFO - Started process 4658 to run task
[2024-12-05T21:35:09.652+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'call_llm', 'manual__2024-12-05T21:35:04.734281+00:00', '--job-id', '1020', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmp9_21pdrq']
[2024-12-05T21:35:09.654+0000] {standard_task_runner.py:105} INFO - Job 1020: Subtask call_llm
[2024-12-05T21:35:09.690+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T21:35:04.734281+00:00 [running]> on host c7780884450d
[2024-12-05T21:35:09.751+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='call_llm' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T21:35:04.734281+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T21:35:04.734281+00:00'
[2024-12-05T21:35:09.753+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T21:35:09.770+0000] {llm_mapping.py:155} INFO - Извлечён return_value: {'batch': ['godox', 'gofit', 'goform', 'goldenconcept', 'goldenrose', 'golf', 'goliath', 'gomel', 'gomeldrev', 'gonher', 'goodbaby', 'goodgrill', 'goodhelper', 'goodloot', 'goodmax', 'goodram', 'goodride', 'goodyear', 'google', 'goojitzu', 'goo.n', 'goon', 'gopro', 'gorenje', 'gorizont'], 'next_index': 2000}
[2024-12-05T21:35:09.770+0000] {llm_mapping.py:127} INFO - Отправка запроса к LLM.
[2024-12-05T21:35:10.199+0000] {logging_mixin.py:190} INFO - New g4f version: 0.3.8.3 (current: 0.3.8.0) | pip install -U g4f
[2024-12-05T21:35:26.690+0000] {llm_mapping.py:141} INFO - Получен ответ от LLM: Here is the mapping of the brands to their respective categories based on the searches:

1. **godox** - electronics
2. **gofit** - sport, accessories
3. **goform** - auto
4. **goldenconcept** - accessories
5. **goldenrose** - cosmetics (not listed but fits under accessories)
6. **golf** - sport
7. **goliath** - kids, toys
8. **gomel** - furniture
9. **gomeldrev** - furniture
10. **gonher** - auto
11. **goodbaby** - kids, accessories
12. **goodgrill** - appliances
13. **goodhelper** - appliances
14. **goodloot** - kids
15. **goodmax** - electronics
16. **goodram** - computers
17. **goodride** - auto
18. **goodyear** - auto
19. **google** - computers, electronics
20. **goojitzu** - kids, toys
21. **goo.n** - kids, medicine
22. **goon** - kids, medicine
23. **gopro** - electronics, sport
24. **gorenje** - appliances
25. **gorizont** - electronics

Based on the above mappings, here is the SQL INSERT statement:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('godox', 'electronics'),
    ('gofit', 'sport'),
    ('gofit', 'accessories'),
    ('goform', 'auto'),
    ('goldenconcept', 'accessories'),
    ('goldenrose', 'accessories'),
    ('golf', 'sport'),
    ('goliath', 'kids'),
    ('goliath', 'toys'),
    ('gomel', 'furniture'),
    ('gomeldrev', 'furniture'),
    ('gonher', 'auto'),
    ('goodbaby', 'kids'),
    ('goodbaby', 'accessories'),
    ('goodgrill', 'appliances'),
    ('goodhelper', 'appliances'),
    ('goodloot', 'kids'),
    ('goodmax', 'electronics'),
    ('goodram', 'computers'),
    ('goodride', 'auto'),
    ('goodyear', 'auto'),
    ('google', 'computers'),
    ('google', 'electronics'),
    ('goojitzu', 'kids'),
    ('goojitzu', 'toys'),
    ('goo.n', 'kids'),
    ('goo.n', 'medicine'),
    ('goon', 'kids'),
    ('goon', 'medicine'),
    ('gopro', 'electronics'),
    ('gopro', 'sport'),
    ('gorenje', 'appliances'),
    ('gorizont', 'electronics');
```
[2024-12-05T21:35:26.691+0000] {python.py:240} INFO - Done. Returned value was: Here is the mapping of the brands to their respective categories based on the searches:

1. **godox** - electronics
2. **gofit** - sport, accessories
3. **goform** - auto
4. **goldenconcept** - accessories
5. **goldenrose** - cosmetics (not listed but fits under accessories)
6. **golf** - sport
7. **goliath** - kids, toys
8. **gomel** - furniture
9. **gomeldrev** - furniture
10. **gonher** - auto
11. **goodbaby** - kids, accessories
12. **goodgrill** - appliances
13. **goodhelper** - appliances
14. **goodloot** - kids
15. **goodmax** - electronics
16. **goodram** - computers
17. **goodride** - auto
18. **goodyear** - auto
19. **google** - computers, electronics
20. **goojitzu** - kids, toys
21. **goo.n** - kids, medicine
22. **goon** - kids, medicine
23. **gopro** - electronics, sport
24. **gorenje** - appliances
25. **gorizont** - electronics

Based on the above mappings, here is the SQL INSERT statement:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('godox', 'electronics'),
    ('gofit', 'sport'),
    ('gofit', 'accessories'),
    ('goform', 'auto'),
    ('goldenconcept', 'accessories'),
    ('goldenrose', 'accessories'),
    ('golf', 'sport'),
    ('goliath', 'kids'),
    ('goliath', 'toys'),
    ('gomel', 'furniture'),
    ('gomeldrev', 'furniture'),
    ('gonher', 'auto'),
    ('goodbaby', 'kids'),
    ('goodbaby', 'accessories'),
    ('goodgrill', 'appliances'),
    ('goodhelper', 'appliances'),
    ('goodloot', 'kids'),
    ('goodmax', 'electronics'),
    ('goodram', 'computers'),
    ('goodride', 'auto'),
    ('goodyear', 'auto'),
    ('google', 'computers'),
    ('google', 'electronics'),
    ('goojitzu', 'kids'),
    ('goojitzu', 'toys'),
    ('goo.n', 'kids'),
    ('goo.n', 'medicine'),
    ('goon', 'kids'),
    ('goon', 'medicine'),
    ('gopro', 'electronics'),
    ('gopro', 'sport'),
    ('gorenje', 'appliances'),
    ('gorizont', 'electronics');
```
[2024-12-05T21:35:26.711+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T21:35:26.711+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=call_llm, run_id=manual__2024-12-05T21:35:04.734281+00:00, execution_date=20241205T213504, start_date=20241205T213509, end_date=20241205T213526
[2024-12-05T21:35:26.760+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T21:35:26.779+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T21:35:26.782+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
