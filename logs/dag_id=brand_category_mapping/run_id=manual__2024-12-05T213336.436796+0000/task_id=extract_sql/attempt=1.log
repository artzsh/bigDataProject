[2024-12-05T21:33:58.676+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T21:33:58.689+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:33:36.436796+00:00 [queued]>
[2024-12-05T21:33:58.695+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:33:36.436796+00:00 [queued]>
[2024-12-05T21:33:58.695+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T21:33:58.708+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): extract_sql> on 2024-12-05 21:33:36.436796+00:00
[2024-12-05T21:33:58.721+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=4585) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T21:33:58.723+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'extract_sql', 'manual__2024-12-05T21:33:36.436796+00:00', '--job-id', '1003', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmpeps4ux1p']
[2024-12-05T21:33:58.727+0000] {standard_task_runner.py:72} INFO - Started process 4586 to run task
[2024-12-05T21:33:58.729+0000] {standard_task_runner.py:105} INFO - Job 1003: Subtask extract_sql
[2024-12-05T21:33:58.769+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:33:36.436796+00:00 [running]> on host c7780884450d
[2024-12-05T21:33:58.832+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='extract_sql' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T21:33:36.436796+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T21:33:36.436796+00:00'
[2024-12-05T21:33:58.833+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T21:33:58.851+0000] {llm_mapping.py:187} INFO - Извлечён llm_response: Based on the brands provided and the categories available, here’s the mapping of each brand to their respective categories:

1. **geil** - electronics
2. **geitaran** - electronics
3. **gejzer** - appliances
4. **gelflex** - sport
5. **gelsomino** - furniture
6. **gembird** - electronics
7. **gemei** - electronics
8. **genau** - appliances
9. **genebre** - construction
10. **generalelectric** - appliances, electronics
11. **genesis** - electronics
12. **geneticlab** - medicine
13. **geneticlabnutrition** - medicine
14. **genius** - electronics
15. **genki** - medicine
16. **genlog** - electronics
17. **genny** - apparel
18. **gentrycup** - accessories
19. **gerat** - appliances
20. **gerber** - kids, medicine
21. **gerbor** - furniture
22. **gerdamix** - appliances
23. **gerkulesgames** - sport
24. **geroivmaskah** - apparel
25. **gesso** - stationery

Now, I will generate the SQL INSERT statement based on the above mappings:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('geil', 'electronics'),
    ('geitaran', 'electronics'),
    ('gejzer', 'appliances'),
    ('gelflex', 'sport'),
    ('gelsomino', 'furniture'),
    ('gembird', 'electronics'),
    ('gemei', 'electronics'),
    ('genau', 'appliances'),
    ('genebre', 'construction'),
    ('generalelectric', 'appliances'),
    ('generalelectric', 'electronics'),
    ('genesis', 'electronics'),
    ('geneticlab', 'medicine'),
    ('geneticlabnutrition', 'medicine'),
    ('genius', 'electronics'),
    ('genki', 'medicine'),
    ('genlog', 'electronics'),
    ('genny', 'apparel'),
    ('gentrycup', 'accessories'),
    ('gerat', 'appliances'),
    ('gerber', 'kids'),
    ('gerber', 'medicine'),
    ('gerbor', 'furniture'),
    ('gerdamix', 'appliances'),
    ('gerkulesgames', 'sport'),
    ('geroivmaskah', 'apparel'),
    ('gesso', 'stationery');
```
[2024-12-05T21:33:58.852+0000] {llm_mapping.py:174} INFO - Извлечён SQL-код:
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('geil', 'electronics'),
    ('geitaran', 'electronics'),
    ('gejzer', 'appliances'),
    ('gelflex', 'sport'),
    ('gelsomino', 'furniture'),
    ('gembird', 'electronics'),
    ('gemei', 'electronics'),
    ('genau', 'appliances'),
    ('genebre', 'construction'),
    ('generalelectric', 'appliances'),
    ('generalelectric', 'electronics'),
    ('genesis', 'electronics'),
    ('geneticlab', 'medicine'),
    ('geneticlabnutrition', 'medicine'),
    ('genius', 'electronics'),
    ('genki', 'medicine'),
    ('genlog', 'electronics'),
    ('genny', 'apparel'),
    ('gentrycup', 'accessories'),
    ('gerat', 'appliances'),
    ('gerber', 'kids'),
    ('gerber', 'medicine'),
    ('gerbor', 'furniture'),
    ('gerdamix', 'appliances'),
    ('gerkulesgames', 'sport'),
    ('geroivmaskah', 'apparel'),
    ('gesso', 'stationery');
[2024-12-05T21:33:58.852+0000] {python.py:240} INFO - Done. Returned value was: INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('geil', 'electronics'),
    ('geitaran', 'electronics'),
    ('gejzer', 'appliances'),
    ('gelflex', 'sport'),
    ('gelsomino', 'furniture'),
    ('gembird', 'electronics'),
    ('gemei', 'electronics'),
    ('genau', 'appliances'),
    ('genebre', 'construction'),
    ('generalelectric', 'appliances'),
    ('generalelectric', 'electronics'),
    ('genesis', 'electronics'),
    ('geneticlab', 'medicine'),
    ('geneticlabnutrition', 'medicine'),
    ('genius', 'electronics'),
    ('genki', 'medicine'),
    ('genlog', 'electronics'),
    ('genny', 'apparel'),
    ('gentrycup', 'accessories'),
    ('gerat', 'appliances'),
    ('gerber', 'kids'),
    ('gerber', 'medicine'),
    ('gerbor', 'furniture'),
    ('gerdamix', 'appliances'),
    ('gerkulesgames', 'sport'),
    ('geroivmaskah', 'apparel'),
    ('gesso', 'stationery');
[2024-12-05T21:33:58.869+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T21:33:58.869+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=extract_sql, run_id=manual__2024-12-05T21:33:36.436796+00:00, execution_date=20241205T213336, start_date=20241205T213358, end_date=20241205T213358
[2024-12-05T21:33:58.904+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T21:33:58.923+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T21:33:58.926+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
