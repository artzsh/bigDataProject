[2024-12-05T22:05:55.310+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T22:05:55.322+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T22:05:50.782338+00:00 [queued]>
[2024-12-05T22:05:55.329+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T22:05:50.782338+00:00 [queued]>
[2024-12-05T22:05:55.329+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T22:05:55.342+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): call_llm> on 2024-12-05 22:05:50.782338+00:00
[2024-12-05T22:05:55.348+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=6274) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T22:05:55.350+0000] {standard_task_runner.py:72} INFO - Started process 6275 to run task
[2024-12-05T22:05:55.350+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'call_llm', 'manual__2024-12-05T22:05:50.782338+00:00', '--job-id', '1368', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmpcq60nrnn']
[2024-12-05T22:05:55.352+0000] {standard_task_runner.py:105} INFO - Job 1368: Subtask call_llm
[2024-12-05T22:05:55.389+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T22:05:50.782338+00:00 [running]> on host c7780884450d
[2024-12-05T22:05:55.450+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='call_llm' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T22:05:50.782338+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T22:05:50.782338+00:00'
[2024-12-05T22:05:55.451+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T22:05:55.469+0000] {llm_mapping.py:155} INFO - Извлечён return_value: {'batch': ['moov', 'mooveandfun', 'mopeksbel', 'mora', 'morakniv', 'morel', 'morita', 'moroshka', 'morphyrichards', 'moschino', 'mosconi', 'moser', 'moshi', 'mossani', 'mostykultury', 'motivyotdyha', 'motogp', 'motorcraft', 'motorola', 'motul', 'moulinex', 'moulinvilla', 'mountainbuggy', 'moxom', 'mozaika-sintez'], 'next_index': 3450}
[2024-12-05T22:05:55.469+0000] {llm_mapping.py:127} INFO - Отправка запроса к LLM.
[2024-12-05T22:05:55.889+0000] {logging_mixin.py:190} INFO - New g4f version: 0.3.8.3 (current: 0.3.8.0) | pip install -U g4f
[2024-12-05T22:06:18.494+0000] {llm_mapping.py:141} INFO - Получен ответ от LLM: Here are the assigned categories for each brand based on the search results:

1. **moov** - apparel, accessories
2. **mooveandfun** - kids, accessories
3. **mopeksbel** - apparel
4. **mora** - appliances, electronics
5. **morakniv** - accessories, sport
6. **morel** - electronics, appliances
7. **morita** - appliances, electronics
8. **moroshka** - kids
9. **morphyrichards** - appliances
10. **moschino** - apparel, accessories
11. **mosconi** - electronics, auto
12. **moser** - appliances, electronics
13. **moshi** - electronics, accessories
14. **mossani** - apparel, accessories
15. **mostykultury** - accessories
16. **motivyotdyha** - apparel, sport
17. **motogp** - sport, apparel
18. **motorcraft** - auto, appliances
19. **motorola** - electronics, computers
20. **motul** - auto, appliances
21. **moulinex** - appliances
22. **moulinvilla** - appliances
23. **mountainbuggy** - kids, accessories
24. **moxom** - electronics, accessories
25. **mozaika-sintez** - stationery

Now, here’s the SQL INSERT statement:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('moov', 'apparel'),
    ('moov', 'accessories'),
    ('mooveandfun', 'kids'),
    ('mooveandfun', 'accessories'),
    ('mopeksbel', 'apparel'),
    ('mora', 'appliances'),
    ('mora', 'electronics'),
    ('morakniv', 'accessories'),
    ('morakniv', 'sport'),
    ('morel', 'electronics'),
    ('morel', 'appliances'),
    ('morita', 'appliances'),
    ('morita', 'electronics'),
    ('moroshka', 'kids'),
    ('morphyrichards', 'appliances'),
    ('moschino', 'apparel'),
    ('moschino', 'accessories'),
    ('mosconi', 'electronics'),
    ('mosconi', 'auto'),
    ('moser', 'appliances'),
    ('moser', 'electronics'),
    ('moshi', 'electronics'),
    ('moshi', 'accessories'),
    ('mossani', 'apparel'),
    ('mossani', 'accessories'),
    ('mostykultury', 'accessories'),
    ('motivyotdyha', 'apparel'),
    ('motivyotdyha', 'sport'),
    ('motogp', 'sport'),
    ('motogp', 'apparel'),
    ('motorcraft', 'auto'),
    ('motorcraft', 'appliances'),
    ('motorola', 'electronics'),
    ('motorola', 'computers'),
    ('motul', 'auto'),
    ('motul', 'appliances'),
    ('moulinex', 'appliances'),
    ('moulinvilla', 'appliances'),
    ('mountainbuggy', 'kids'),
    ('mountainbuggy', 'accessories'),
    ('moxom', 'electronics'),
    ('moxom', 'accessories'),
    ('mozaika-sintez', 'stationery');
```
[2024-12-05T22:06:18.494+0000] {python.py:240} INFO - Done. Returned value was: Here are the assigned categories for each brand based on the search results:

1. **moov** - apparel, accessories
2. **mooveandfun** - kids, accessories
3. **mopeksbel** - apparel
4. **mora** - appliances, electronics
5. **morakniv** - accessories, sport
6. **morel** - electronics, appliances
7. **morita** - appliances, electronics
8. **moroshka** - kids
9. **morphyrichards** - appliances
10. **moschino** - apparel, accessories
11. **mosconi** - electronics, auto
12. **moser** - appliances, electronics
13. **moshi** - electronics, accessories
14. **mossani** - apparel, accessories
15. **mostykultury** - accessories
16. **motivyotdyha** - apparel, sport
17. **motogp** - sport, apparel
18. **motorcraft** - auto, appliances
19. **motorola** - electronics, computers
20. **motul** - auto, appliances
21. **moulinex** - appliances
22. **moulinvilla** - appliances
23. **mountainbuggy** - kids, accessories
24. **moxom** - electronics, accessories
25. **mozaika-sintez** - stationery

Now, here’s the SQL INSERT statement:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('moov', 'apparel'),
    ('moov', 'accessories'),
    ('mooveandfun', 'kids'),
    ('mooveandfun', 'accessories'),
    ('mopeksbel', 'apparel'),
    ('mora', 'appliances'),
    ('mora', 'electronics'),
    ('morakniv', 'accessories'),
    ('morakniv', 'sport'),
    ('morel', 'electronics'),
    ('morel', 'appliances'),
    ('morita', 'appliances'),
    ('morita', 'electronics'),
    ('moroshka', 'kids'),
    ('morphyrichards', 'appliances'),
    ('moschino', 'apparel'),
    ('moschino', 'accessories'),
    ('mosconi', 'electronics'),
    ('mosconi', 'auto'),
    ('moser', 'appliances'),
    ('moser', 'electronics'),
    ('moshi', 'electronics'),
    ('moshi', 'accessories'),
    ('mossani', 'apparel'),
    ('mossani', 'accessories'),
    ('mostykultury', 'accessories'),
    ('motivyotdyha', 'apparel'),
    ('motivyotdyha', 'sport'),
    ('motogp', 'sport'),
    ('motogp', 'apparel'),
    ('motorcraft', 'auto'),
    ('motorcraft', 'appliances'),
    ('motorola', 'electronics'),
    ('motorola', 'computers'),
    ('motul', 'auto'),
    ('motul', 'appliances'),
    ('moulinex', 'appliances'),
    ('moulinvilla', 'appliances'),
    ('mountainbuggy', 'kids'),
    ('mountainbuggy', 'accessories'),
    ('moxom', 'electronics'),
    ('moxom', 'accessories'),
    ('mozaika-sintez', 'stationery');
```
[2024-12-05T22:06:18.514+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T22:06:18.515+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=call_llm, run_id=manual__2024-12-05T22:05:50.782338+00:00, execution_date=20241205T220550, start_date=20241205T220555, end_date=20241205T220618
[2024-12-05T22:06:18.541+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T22:06:18.559+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T22:06:18.562+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
