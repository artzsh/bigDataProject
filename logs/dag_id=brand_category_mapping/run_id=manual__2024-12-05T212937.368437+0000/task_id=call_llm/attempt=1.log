[2024-12-05T21:29:42.229+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T21:29:42.241+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T21:29:37.368437+00:00 [queued]>
[2024-12-05T21:29:42.246+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T21:29:37.368437+00:00 [queued]>
[2024-12-05T21:29:42.247+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T21:29:42.258+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): call_llm> on 2024-12-05 21:29:37.368437+00:00
[2024-12-05T21:29:42.263+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=4356) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T21:29:42.265+0000] {standard_task_runner.py:72} INFO - Started process 4357 to run task
[2024-12-05T21:29:42.265+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'call_llm', 'manual__2024-12-05T21:29:37.368437+00:00', '--job-id', '954', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmpzb376576']
[2024-12-05T21:29:42.267+0000] {standard_task_runner.py:105} INFO - Job 954: Subtask call_llm
[2024-12-05T21:29:42.299+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T21:29:37.368437+00:00 [running]> on host c7780884450d
[2024-12-05T21:29:42.359+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='call_llm' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T21:29:37.368437+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T21:29:37.368437+00:00'
[2024-12-05T21:29:42.360+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T21:29:42.377+0000] {llm_mapping.py:155} INFO - Извлечён return_value: {'batch': ['fashion', 'fashy', 'fassen', 'favorite', 'favory', 'favourite', 'fcp', 'fea', 'febest', 'febi', 'federal', 'feedback', 'feile', 'felisatti', 'felix', 'femi', 'fender', 'fendi', 'fengnix', 'feniks', 'fenix', 'fenox', 'ferbe', 'feron', 'ferrari'], 'next_index': 1725}
[2024-12-05T21:29:42.378+0000] {llm_mapping.py:127} INFO - Отправка запроса к LLM.
[2024-12-05T21:29:42.793+0000] {logging_mixin.py:190} INFO - New g4f version: 0.3.8.3 (current: 0.3.8.0) | pip install -U g4f
[2024-12-05T21:29:58.876+0000] {llm_mapping.py:141} INFO - Получен ответ от LLM: Here's the mapping of the brands to their respective categories based on the search results:

1. **fashion** - apparel
2. **fashy** - apparel, accessories
3. **fassen** - apparel
4. **favorite** - appliances, furniture
5. **favory** - stationery
6. **favourite** - apparel
7. **fcp** - electronics
8. **fea** - electronics
9. **febest** - auto
10. **febi** - auto, appliances
11. **federal** - auto
12. **feedback** - electronics
13. **feile** - apparel
14. **felisatti** - appliances
15. **felix** - accessories
16. **femi** - apparel
17. **fender** - electronics, accessories
18. **fendi** - apparel, accessories
19. **fengnix** - electronics
20. **feniks** - electronics
21. **fenix** - electronics
22. **fenox** - auto
23. **ferbe** - appliances
24. **feron** - electronics
25. **ferrari** - auto, apparel, accessories

Now, here is the SQL INSERT statement for the brand-category mapping:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('fashion', 'apparel'),
    ('fashy', 'apparel'),
    ('fashy', 'accessories'),
    ('fassen', 'apparel'),
    ('favorite', 'appliances'),
    ('favorite', 'furniture'),
    ('favory', 'stationery'),
    ('favourite', 'apparel'),
    ('fcp', 'electronics'),
    ('fea', 'electronics'),
    ('febest', 'auto'),
    ('febi', 'auto'),
    ('febi', 'appliances'),
    ('federal', 'auto'),
    ('feedback', 'electronics'),
    ('feile', 'apparel'),
    ('felisatti', 'appliances'),
    ('felix', 'accessories'),
    ('femi', 'apparel'),
    ('fender', 'electronics'),
    ('fender', 'accessories'),
    ('fendi', 'apparel'),
    ('fendi', 'accessories'),
    ('fengnix', 'electronics'),
    ('feniks', 'electronics'),
    ('fenix', 'electronics'),
    ('fenox', 'auto'),
    ('ferbe', 'appliances'),
    ('feron', 'electronics'),
    ('ferrari', 'auto'),
    ('ferrari', 'apparel'),
    ('ferrari', 'accessories');
```
[2024-12-05T21:29:58.877+0000] {python.py:240} INFO - Done. Returned value was: Here's the mapping of the brands to their respective categories based on the search results:

1. **fashion** - apparel
2. **fashy** - apparel, accessories
3. **fassen** - apparel
4. **favorite** - appliances, furniture
5. **favory** - stationery
6. **favourite** - apparel
7. **fcp** - electronics
8. **fea** - electronics
9. **febest** - auto
10. **febi** - auto, appliances
11. **federal** - auto
12. **feedback** - electronics
13. **feile** - apparel
14. **felisatti** - appliances
15. **felix** - accessories
16. **femi** - apparel
17. **fender** - electronics, accessories
18. **fendi** - apparel, accessories
19. **fengnix** - electronics
20. **feniks** - electronics
21. **fenix** - electronics
22. **fenox** - auto
23. **ferbe** - appliances
24. **feron** - electronics
25. **ferrari** - auto, apparel, accessories

Now, here is the SQL INSERT statement for the brand-category mapping:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('fashion', 'apparel'),
    ('fashy', 'apparel'),
    ('fashy', 'accessories'),
    ('fassen', 'apparel'),
    ('favorite', 'appliances'),
    ('favorite', 'furniture'),
    ('favory', 'stationery'),
    ('favourite', 'apparel'),
    ('fcp', 'electronics'),
    ('fea', 'electronics'),
    ('febest', 'auto'),
    ('febi', 'auto'),
    ('febi', 'appliances'),
    ('federal', 'auto'),
    ('feedback', 'electronics'),
    ('feile', 'apparel'),
    ('felisatti', 'appliances'),
    ('felix', 'accessories'),
    ('femi', 'apparel'),
    ('fender', 'electronics'),
    ('fender', 'accessories'),
    ('fendi', 'apparel'),
    ('fendi', 'accessories'),
    ('fengnix', 'electronics'),
    ('feniks', 'electronics'),
    ('fenix', 'electronics'),
    ('fenox', 'auto'),
    ('ferbe', 'appliances'),
    ('feron', 'electronics'),
    ('ferrari', 'auto'),
    ('ferrari', 'apparel'),
    ('ferrari', 'accessories');
```
[2024-12-05T21:29:58.895+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T21:29:58.895+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=call_llm, run_id=manual__2024-12-05T21:29:37.368437+00:00, execution_date=20241205T212937, start_date=20241205T212942, end_date=20241205T212958
[2024-12-05T21:29:58.930+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T21:29:58.947+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T21:29:58.950+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
