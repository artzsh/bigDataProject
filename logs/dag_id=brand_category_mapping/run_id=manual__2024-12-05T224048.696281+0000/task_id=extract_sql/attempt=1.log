[2024-12-05T22:42:03.226+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T22:42:03.238+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T22:40:48.696281+00:00 [queued]>
[2024-12-05T22:42:03.247+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T22:40:48.696281+00:00 [queued]>
[2024-12-05T22:42:03.248+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T22:42:03.262+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): extract_sql> on 2024-12-05 22:40:48.696281+00:00
[2024-12-05T22:42:03.268+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=8139) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T22:42:03.270+0000] {standard_task_runner.py:72} INFO - Started process 8140 to run task
[2024-12-05T22:42:03.270+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'extract_sql', 'manual__2024-12-05T22:40:48.696281+00:00', '--job-id', '1765', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmpdk2nlgif']
[2024-12-05T22:42:03.272+0000] {standard_task_runner.py:105} INFO - Job 1765: Subtask extract_sql
[2024-12-05T22:42:03.311+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T22:40:48.696281+00:00 [running]> on host c7780884450d
[2024-12-05T22:42:03.382+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='extract_sql' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T22:40:48.696281+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T22:40:48.696281+00:00'
[2024-12-05T22:42:03.383+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T22:42:03.404+0000] {llm_mapping.py:187} INFO - Извлечён llm_response: Here are the assigned categories for each brand based on the search results:

1. **to-plan**: construction
2. **toplitz**: electronics, appliances
3. **topran**: auto
4. **topten**: electronics
5. **torch**: electronics, appliances
6. **torgue**: auto
7. **tornado**: appliances
8. **torneo**: sport
9. **toro**: country_yard
10. **torr**: electronics
11. **torrent**: electronics
12. **torres**: furniture
13. **torso**: apparel
14. **tortine**: food (not in provided categories, but can be considered as part of appliances for kitchen use)
15. **tosato**: appliances
16. **toscom**: electronics
17. **toshiba**: electronics, appliances
18. **totachi**: auto
19. **totaku**: electronics
20. **total**: construction
21. **totalbox**: appliances
22. **toto**: appliances
23. **totolink**: electronics
24. **totu**: accessories
25. **touchbeauty**: beauty accessories (not in provided categories, but can be considered as accessories)

Now, here is the SQL INSERT statement based on the assigned categories:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('to-plan', 'construction'),
    ('toplitz', 'electronics'),
    ('toplitz', 'appliances'),
    ('topran', 'auto'),
    ('topten', 'electronics'),
    ('torch', 'electronics'),
    ('torch', 'appliances'),
    ('torgue', 'auto'),
    ('tornado', 'appliances'),
    ('torneo', 'sport'),
    ('toro', 'country_yard'),
    ('torr', 'electronics'),
    ('torrent', 'electronics'),
    ('torres', 'furniture'),
    ('torso', 'apparel'),
    ('tortine', 'appliances'),
    ('tosato', 'appliances'),
    ('toscom', 'electronics'),
    ('toshiba', 'electronics'),
    ('toshiba', 'appliances'),
    ('totachi', 'auto'),
    ('totaku', 'electronics'),
    ('total', 'construction'),
    ('totalbox', 'appliances'),
    ('toto', 'appliances'),
    ('totolink', 'electronics'),
    ('totu', 'accessories'),
    ('touchbeauty', 'accessories');
```
[2024-12-05T22:42:03.405+0000] {llm_mapping.py:174} INFO - Извлечён SQL-код:
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('to-plan', 'construction'),
    ('toplitz', 'electronics'),
    ('toplitz', 'appliances'),
    ('topran', 'auto'),
    ('topten', 'electronics'),
    ('torch', 'electronics'),
    ('torch', 'appliances'),
    ('torgue', 'auto'),
    ('tornado', 'appliances'),
    ('torneo', 'sport'),
    ('toro', 'country_yard'),
    ('torr', 'electronics'),
    ('torrent', 'electronics'),
    ('torres', 'furniture'),
    ('torso', 'apparel'),
    ('tortine', 'appliances'),
    ('tosato', 'appliances'),
    ('toscom', 'electronics'),
    ('toshiba', 'electronics'),
    ('toshiba', 'appliances'),
    ('totachi', 'auto'),
    ('totaku', 'electronics'),
    ('total', 'construction'),
    ('totalbox', 'appliances'),
    ('toto', 'appliances'),
    ('totolink', 'electronics'),
    ('totu', 'accessories'),
    ('touchbeauty', 'accessories');
[2024-12-05T22:42:03.405+0000] {python.py:240} INFO - Done. Returned value was: INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('to-plan', 'construction'),
    ('toplitz', 'electronics'),
    ('toplitz', 'appliances'),
    ('topran', 'auto'),
    ('topten', 'electronics'),
    ('torch', 'electronics'),
    ('torch', 'appliances'),
    ('torgue', 'auto'),
    ('tornado', 'appliances'),
    ('torneo', 'sport'),
    ('toro', 'country_yard'),
    ('torr', 'electronics'),
    ('torrent', 'electronics'),
    ('torres', 'furniture'),
    ('torso', 'apparel'),
    ('tortine', 'appliances'),
    ('tosato', 'appliances'),
    ('toscom', 'electronics'),
    ('toshiba', 'electronics'),
    ('toshiba', 'appliances'),
    ('totachi', 'auto'),
    ('totaku', 'electronics'),
    ('total', 'construction'),
    ('totalbox', 'appliances'),
    ('toto', 'appliances'),
    ('totolink', 'electronics'),
    ('totu', 'accessories'),
    ('touchbeauty', 'accessories');
[2024-12-05T22:42:03.423+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T22:42:03.424+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=extract_sql, run_id=manual__2024-12-05T22:40:48.696281+00:00, execution_date=20241205T224048, start_date=20241205T224203, end_date=20241205T224203
[2024-12-05T22:42:03.445+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T22:42:03.467+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T22:42:03.470+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
