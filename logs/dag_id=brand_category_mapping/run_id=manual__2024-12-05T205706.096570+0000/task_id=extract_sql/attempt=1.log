[2024-12-05T20:57:26.191+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T20:57:26.203+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T20:57:06.096570+00:00 [queued]>
[2024-12-05T20:57:26.209+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T20:57:06.096570+00:00 [queued]>
[2024-12-05T20:57:26.210+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T20:57:26.222+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): extract_sql> on 2024-12-05 20:57:06.096570+00:00
[2024-12-05T20:57:26.228+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=2614) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T20:57:26.229+0000] {standard_task_runner.py:72} INFO - Started process 2615 to run task
[2024-12-05T20:57:26.230+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'extract_sql', 'manual__2024-12-05T20:57:06.096570+00:00', '--job-id', '577', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmpxxpfnuyj']
[2024-12-05T20:57:26.231+0000] {standard_task_runner.py:105} INFO - Job 577: Subtask extract_sql
[2024-12-05T20:57:26.265+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T20:57:06.096570+00:00 [running]> on host c7780884450d
[2024-12-05T20:57:26.331+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='extract_sql' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T20:57:06.096570+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T20:57:06.096570+00:00'
[2024-12-05T20:57:26.332+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T20:57:26.351+0000] {llm_mapping.py:187} INFO - Извлечён llm_response: Based on the provided brands, I have categorized them according to the predefined categories. Here's the mapping I found:

1. **alakaj** - apparel
2. **alantex** - apparel
3. **alaskaoriginale** - apparel
4. **alavann** - apparel
5. **alba** - apparel
6. **albertm** - apparel
7. **albertocasiano** - apparel
8. **albino** - apparel
9. **alborz** - apparel
10. **alca** - appliances
11. **alcasta** - electronics
12. **alcon** - electronics
13. **alctron** - electronics
14. **aldit** - appliances
15. **aleana** - apparel
16. **alecord** - electronics
17. **alerana** - medicine
18. **alesis** - electronics
19. **alessandrobosso** - apparel
20. **alessio** - apparel
21. **aletant** - apparel
22. **alex** - apparel
23. **alexandermcqueen** - apparel
24. **alexandre.j** - apparel
25. **alexika** - apparel

Now, I will generate the SQL INSERT statement based on the mappings:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('alakaj', 'apparel'),
    ('alantex', 'apparel'),
    ('alaskaoriginale', 'apparel'),
    ('alavann', 'apparel'),
    ('alba', 'apparel'),
    ('albertm', 'apparel'),
    ('albertocasiano', 'apparel'),
    ('albino', 'apparel'),
    ('alborz', 'apparel'),
    ('alca', 'appliances'),
    ('alcasta', 'electronics'),
    ('alcon', 'electronics'),
    ('alctron', 'electronics'),
    ('aldit', 'appliances'),
    ('aleana', 'apparel'),
    ('alecord', 'electronics'),
    ('alerana', 'medicine'),
    ('alesis', 'electronics'),
    ('alessandrobosso', 'apparel'),
    ('alessio', 'apparel'),
    ('aletant', 'apparel'),
    ('alex', 'apparel'),
    ('alexandermcqueen', 'apparel'),
    ('alexandre.j', 'apparel'),
    ('alexika', 'apparel');
```
[2024-12-05T20:57:26.352+0000] {llm_mapping.py:174} INFO - Извлечён SQL-код:
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('alakaj', 'apparel'),
    ('alantex', 'apparel'),
    ('alaskaoriginale', 'apparel'),
    ('alavann', 'apparel'),
    ('alba', 'apparel'),
    ('albertm', 'apparel'),
    ('albertocasiano', 'apparel'),
    ('albino', 'apparel'),
    ('alborz', 'apparel'),
    ('alca', 'appliances'),
    ('alcasta', 'electronics'),
    ('alcon', 'electronics'),
    ('alctron', 'electronics'),
    ('aldit', 'appliances'),
    ('aleana', 'apparel'),
    ('alecord', 'electronics'),
    ('alerana', 'medicine'),
    ('alesis', 'electronics'),
    ('alessandrobosso', 'apparel'),
    ('alessio', 'apparel'),
    ('aletant', 'apparel'),
    ('alex', 'apparel'),
    ('alexandermcqueen', 'apparel'),
    ('alexandre.j', 'apparel'),
    ('alexika', 'apparel');
[2024-12-05T20:57:26.353+0000] {python.py:240} INFO - Done. Returned value was: INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('alakaj', 'apparel'),
    ('alantex', 'apparel'),
    ('alaskaoriginale', 'apparel'),
    ('alavann', 'apparel'),
    ('alba', 'apparel'),
    ('albertm', 'apparel'),
    ('albertocasiano', 'apparel'),
    ('albino', 'apparel'),
    ('alborz', 'apparel'),
    ('alca', 'appliances'),
    ('alcasta', 'electronics'),
    ('alcon', 'electronics'),
    ('alctron', 'electronics'),
    ('aldit', 'appliances'),
    ('aleana', 'apparel'),
    ('alecord', 'electronics'),
    ('alerana', 'medicine'),
    ('alesis', 'electronics'),
    ('alessandrobosso', 'apparel'),
    ('alessio', 'apparel'),
    ('aletant', 'apparel'),
    ('alex', 'apparel'),
    ('alexandermcqueen', 'apparel'),
    ('alexandre.j', 'apparel'),
    ('alexika', 'apparel');
[2024-12-05T20:57:26.370+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T20:57:26.371+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=extract_sql, run_id=manual__2024-12-05T20:57:06.096570+00:00, execution_date=20241205T205706, start_date=20241205T205726, end_date=20241205T205726
[2024-12-05T20:57:26.403+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T20:57:26.423+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T20:57:26.426+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
