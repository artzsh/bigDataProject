[2024-12-05T21:00:37.426+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T21:00:37.441+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:00:05.365526+00:00 [queued]>
[2024-12-05T21:00:37.448+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:00:05.365526+00:00 [queued]>
[2024-12-05T21:00:37.449+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T21:00:37.462+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): extract_sql> on 2024-12-05 21:00:05.365526+00:00
[2024-12-05T21:00:37.468+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=2782) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T21:00:37.470+0000] {standard_task_runner.py:72} INFO - Started process 2783 to run task
[2024-12-05T21:00:37.471+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'extract_sql', 'manual__2024-12-05T21:00:05.365526+00:00', '--job-id', '613', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmp4dy_c1g7']
[2024-12-05T21:00:37.473+0000] {standard_task_runner.py:105} INFO - Job 613: Subtask extract_sql
[2024-12-05T21:00:37.514+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:00:05.365526+00:00 [running]> on host c7780884450d
[2024-12-05T21:00:37.585+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='extract_sql' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T21:00:05.365526+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T21:00:05.365526+00:00'
[2024-12-05T21:00:37.586+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T21:00:37.606+0000] {llm_mapping.py:187} INFO - Извлечён llm_response: Here is the mapping of the brands to their respective categories based on the search results:

1. **apc** - apparel
2. **apcbyschneiderelectric** - electronics, appliances
3. **apex** - electronics, auto
4. **aplus** - computers, electronics
5. **apocalypse** - apparel
6. **apollo** - electronics, auto
7. **apple** - electronics, computers
8. **applegate** - food (not in provided categories, but closest would be country_yard)
9. **appollo** - electronics, auto
10. **apriori** - apparel
11. **aps** - electronics
12. **aqoamarin** - electronics
13. **aqua** - appliances, country_yard
14. **aquabeads** - kids
15. **aquael** - appliances, country_yard
16. **aquafit** - sport
17. **aquafresh** - medicine
18. **aquafruit** - food (not in provided categories, but closest would be country_yard)
19. **aquajet** - appliances
20. **aqualife** - appliances
21. **aquamarine** - electronics
22. **aquanet** - accessories
23. **aquapick** - medicine
24. **aquarodos** - kids
25. **aquastar** - electronics

Now, generating the SQL INSERT statement:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('apc', 'apparel'),
    ('apcbyschneiderelectric', 'electronics'),
    ('apcbyschneiderelectric', 'appliances'),
    ('apex', 'electronics'),
    ('apex', 'auto'),
    ('aplus', 'computers'),
    ('aplus', 'electronics'),
    ('apocalypse', 'apparel'),
    ('apollo', 'electronics'),
    ('apollo', 'auto'),
    ('apple', 'electronics'),
    ('apple', 'computers'),
    ('applegate', 'country_yard'),
    ('appollo', 'electronics'),
    ('appollo', 'auto'),
    ('apriori', 'apparel'),
    ('aps', 'electronics'),
    ('aqoamarin', 'electronics'),
    ('aqua', 'appliances'),
    ('aqua', 'country_yard'),
    ('aquabeads', 'kids'),
    ('aquael', 'appliances'),
    ('aquael', 'country_yard'),
    ('aquafit', 'sport'),
    ('aquafresh', 'medicine'),
    ('aquafruit', 'country_yard'),
    ('aquajet', 'appliances'),
    ('aqualife', 'appliances'),
    ('aquamarine', 'electronics'),
    ('aquanet', 'accessories'),
    ('aquapick', 'medicine'),
    ('aquarodos', 'kids'),
    ('aquastar', 'electronics');
```
[2024-12-05T21:00:37.607+0000] {llm_mapping.py:174} INFO - Извлечён SQL-код:
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('apc', 'apparel'),
    ('apcbyschneiderelectric', 'electronics'),
    ('apcbyschneiderelectric', 'appliances'),
    ('apex', 'electronics'),
    ('apex', 'auto'),
    ('aplus', 'computers'),
    ('aplus', 'electronics'),
    ('apocalypse', 'apparel'),
    ('apollo', 'electronics'),
    ('apollo', 'auto'),
    ('apple', 'electronics'),
    ('apple', 'computers'),
    ('applegate', 'country_yard'),
    ('appollo', 'electronics'),
    ('appollo', 'auto'),
    ('apriori', 'apparel'),
    ('aps', 'electronics'),
    ('aqoamarin', 'electronics'),
    ('aqua', 'appliances'),
    ('aqua', 'country_yard'),
    ('aquabeads', 'kids'),
    ('aquael', 'appliances'),
    ('aquael', 'country_yard'),
    ('aquafit', 'sport'),
    ('aquafresh', 'medicine'),
    ('aquafruit', 'country_yard'),
    ('aquajet', 'appliances'),
    ('aqualife', 'appliances'),
    ('aquamarine', 'electronics'),
    ('aquanet', 'accessories'),
    ('aquapick', 'medicine'),
    ('aquarodos', 'kids'),
    ('aquastar', 'electronics');
[2024-12-05T21:00:37.607+0000] {python.py:240} INFO - Done. Returned value was: INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('apc', 'apparel'),
    ('apcbyschneiderelectric', 'electronics'),
    ('apcbyschneiderelectric', 'appliances'),
    ('apex', 'electronics'),
    ('apex', 'auto'),
    ('aplus', 'computers'),
    ('aplus', 'electronics'),
    ('apocalypse', 'apparel'),
    ('apollo', 'electronics'),
    ('apollo', 'auto'),
    ('apple', 'electronics'),
    ('apple', 'computers'),
    ('applegate', 'country_yard'),
    ('appollo', 'electronics'),
    ('appollo', 'auto'),
    ('apriori', 'apparel'),
    ('aps', 'electronics'),
    ('aqoamarin', 'electronics'),
    ('aqua', 'appliances'),
    ('aqua', 'country_yard'),
    ('aquabeads', 'kids'),
    ('aquael', 'appliances'),
    ('aquael', 'country_yard'),
    ('aquafit', 'sport'),
    ('aquafresh', 'medicine'),
    ('aquafruit', 'country_yard'),
    ('aquajet', 'appliances'),
    ('aqualife', 'appliances'),
    ('aquamarine', 'electronics'),
    ('aquanet', 'accessories'),
    ('aquapick', 'medicine'),
    ('aquarodos', 'kids'),
    ('aquastar', 'electronics');
[2024-12-05T21:00:37.624+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T21:00:37.625+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=extract_sql, run_id=manual__2024-12-05T21:00:05.365526+00:00, execution_date=20241205T210005, start_date=20241205T210037, end_date=20241205T210037
[2024-12-05T21:00:37.644+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T21:00:37.663+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T21:00:37.666+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
