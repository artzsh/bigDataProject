[2024-12-05T21:27:09.542+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T21:27:09.555+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:26:40.420119+00:00 [queued]>
[2024-12-05T21:27:09.561+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:26:40.420119+00:00 [queued]>
[2024-12-05T21:27:09.562+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T21:27:09.575+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): extract_sql> on 2024-12-05 21:26:40.420119+00:00
[2024-12-05T21:27:09.581+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=4221) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T21:27:09.583+0000] {standard_task_runner.py:72} INFO - Started process 4222 to run task
[2024-12-05T21:27:09.583+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'extract_sql', 'manual__2024-12-05T21:26:40.420119+00:00', '--job-id', '925', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmpoj4_4q1b']
[2024-12-05T21:27:09.585+0000] {standard_task_runner.py:105} INFO - Job 925: Subtask extract_sql
[2024-12-05T21:27:09.624+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:26:40.420119+00:00 [running]> on host c7780884450d
[2024-12-05T21:27:09.696+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='extract_sql' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T21:26:40.420119+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T21:26:40.420119+00:00'
[2024-12-05T21:27:09.697+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T21:27:09.720+0000] {llm_mapping.py:187} INFO - Извлечён llm_response: Here’s the mapping of the provided brands to their respective categories based on the search results:

1. **eos** - cosmetics (not in predefined categories, but can fit accessories)
2. **epicgear** - gaming peripherals (electronics)
3. **epiphone** - guitars and musical instruments (not in predefined categories, but can fit accessories)
4. **epoch** - toys and games (kids)
5. **epr** - electronics and appliances (electronics, appliances)
6. **epson** - printers and imaging (electronics)
7. **era** - home appliances (appliances)
8. **erbis** - construction materials (construction)
9. **erdenet** - textiles (not in predefined categories, but can fit apparel)
10. **ergo** - ergonomic products (not in predefined categories, but can fit accessories)
11. **ergobaby** - baby carriers (kids, accessories)
12. **ergolux** - ergonomic furniture (furniture)
13. **ergostand** - ergonomic stands (accessories)
14. **erichkrause** - stationery products (stationery)
15. **erik** - various products (not enough information, but can fit furniture)
16. **erismann** - wallpapers (not in predefined categories, but can fit construction)
17. **erisson** - electronics (electronics)
18. **erkaplan** - construction (construction)
19. **erlit** - sanitary ware (not in predefined categories, but can fit construction)
20. **ermila** - hair styling tools (appliances)
21. **ersport** - sports equipment (sport)
22. **esab** - welding and cutting equipment (construction)
23. **escada** - fashion (apparel, accessories)
24. **escan** - security products (electronics)
25. **escentricmolecules** - fragrances (not in predefined categories, but can fit accessories)

Based on this mapping, the SQL INSERT statement would look like this:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('eos', 'accessories'),
    ('epicgear', 'electronics'),
    ('epiphone', 'accessories'),
    ('epoch', 'kids'),
    ('epr', 'electronics'),
    ('epr', 'appliances'),
    ('epson', 'electronics'),
    ('era', 'appliances'),
    ('erbis', 'construction'),
    ('erdenet', 'apparel'),
    ('ergo', 'accessories'),
    ('ergobaby', 'kids'),
    ('ergobaby', 'accessories'),
    ('ergolux', 'furniture'),
    ('ergostand', 'accessories'),
    ('erichkrause', 'stationery'),
    ('erik', 'furniture'),
    ('erismann', 'construction'),
    ('erisson', 'electronics'),
    ('erkaplan', 'construction'),
    ('erlit', 'construction'),
    ('ermila', 'appliances'),
    ('ersport', 'sport'),
    ('esab', 'construction'),
    ('escada', 'apparel'),
    ('escada', 'accessories'),
    ('escan', 'electronics'),
    ('escentricmolecules', 'accessories');
```

This statement maps each brand to its respective categories based on the search results and logical deductions.
[2024-12-05T21:27:09.721+0000] {llm_mapping.py:174} INFO - Извлечён SQL-код:
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('eos', 'accessories'),
    ('epicgear', 'electronics'),
    ('epiphone', 'accessories'),
    ('epoch', 'kids'),
    ('epr', 'electronics'),
    ('epr', 'appliances'),
    ('epson', 'electronics'),
    ('era', 'appliances'),
    ('erbis', 'construction'),
    ('erdenet', 'apparel'),
    ('ergo', 'accessories'),
    ('ergobaby', 'kids'),
    ('ergobaby', 'accessories'),
    ('ergolux', 'furniture'),
    ('ergostand', 'accessories'),
    ('erichkrause', 'stationery'),
    ('erik', 'furniture'),
    ('erismann', 'construction'),
    ('erisson', 'electronics'),
    ('erkaplan', 'construction'),
    ('erlit', 'construction'),
    ('ermila', 'appliances'),
    ('ersport', 'sport'),
    ('esab', 'construction'),
    ('escada', 'apparel'),
    ('escada', 'accessories'),
    ('escan', 'electronics'),
    ('escentricmolecules', 'accessories');
[2024-12-05T21:27:09.721+0000] {python.py:240} INFO - Done. Returned value was: INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('eos', 'accessories'),
    ('epicgear', 'electronics'),
    ('epiphone', 'accessories'),
    ('epoch', 'kids'),
    ('epr', 'electronics'),
    ('epr', 'appliances'),
    ('epson', 'electronics'),
    ('era', 'appliances'),
    ('erbis', 'construction'),
    ('erdenet', 'apparel'),
    ('ergo', 'accessories'),
    ('ergobaby', 'kids'),
    ('ergobaby', 'accessories'),
    ('ergolux', 'furniture'),
    ('ergostand', 'accessories'),
    ('erichkrause', 'stationery'),
    ('erik', 'furniture'),
    ('erismann', 'construction'),
    ('erisson', 'electronics'),
    ('erkaplan', 'construction'),
    ('erlit', 'construction'),
    ('ermila', 'appliances'),
    ('ersport', 'sport'),
    ('esab', 'construction'),
    ('escada', 'apparel'),
    ('escada', 'accessories'),
    ('escan', 'electronics'),
    ('escentricmolecules', 'accessories');
[2024-12-05T21:27:09.741+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T21:27:09.742+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=extract_sql, run_id=manual__2024-12-05T21:26:40.420119+00:00, execution_date=20241205T212640, start_date=20241205T212709, end_date=20241205T212709
[2024-12-05T21:27:09.797+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T21:27:09.817+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T21:27:09.821+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
