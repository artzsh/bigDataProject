[2024-12-05T21:07:06.169+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T21:07:06.186+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:06:16.214185+00:00 [queued]>
[2024-12-05T21:07:06.195+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:06:16.214185+00:00 [queued]>
[2024-12-05T21:07:06.196+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T21:07:06.214+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): extract_sql> on 2024-12-05 21:06:16.214185+00:00
[2024-12-05T21:07:06.221+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=3119) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T21:07:06.224+0000] {standard_task_runner.py:72} INFO - Started process 3120 to run task
[2024-12-05T21:07:06.225+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'extract_sql', 'manual__2024-12-05T21:06:16.214185+00:00', '--job-id', '685', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmpedk7w6h1']
[2024-12-05T21:07:06.227+0000] {standard_task_runner.py:105} INFO - Job 685: Subtask extract_sql
[2024-12-05T21:07:06.274+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:06:16.214185+00:00 [running]> on host c7780884450d
[2024-12-05T21:07:06.376+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='extract_sql' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T21:06:16.214185+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T21:06:16.214185+00:00'
[2024-12-05T21:07:06.379+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T21:07:06.424+0000] {llm_mapping.py:187} INFO - Извлечён llm_response: Here is the mapping of the provided brands to their respective categories based on the search results:

1. **beauraing** - No specific category found; assign to **appliances** (general home goods).
2. **beautyblender** - Found to be a makeup tool; assign to **accessories**.
3. **beautycreations** - Found to be a cosmetics brand; assign to **accessories**.
4. **beautyfurs** - Associated with fur products; assign to **apparel**.
5. **beautyvisage** - Related to cosmetics; assign to **accessories**.
6. **beauugreen** - Related to eco-friendly products; assign to **apparel**.
7. **becca** - Known for cosmetics; assign to **accessories**.
8. **becker** - No specific category found; assign to **appliances** (general home goods).
9. **beeline** - Related to telecommunications; assign to **electronics**.
10. **befirst** - Associated with supplements and sports nutrition; assign to **sport**.
11. **behramhali** - No specific category found; assign to **appliances** (general home goods).
12. **behringer** - Known for audio equipment; assign to **electronics**.
13. **beijing** - No specific category found; assign to **furniture** (as it can relate to home decor).
14. **beisier** - No specific category found; assign to **appliances** (general home goods).
15. **bekker** - No specific category found; assign to **appliances** (general home goods).
16. **beko** - Known for home appliances; assign to **appliances**.
17. **bekzatsport** - Related to sports equipment; assign to **sport**.
18. **bel** - No specific category found; assign to **appliances** (general home goods).
19. **bela** - Related to cosmetics; assign to **accessories**.
20. **belaakalitva** - No specific category found; assign to **apparel**.
21. **belaavorona** - No specific category found; assign to **apparel**.
22. **belashoff** - No specific category found; assign to **apparel**.
23. **belcando** - Known for pet food; assign to **country_yard**.
24. **belcat** - Associated with musical instruments; assign to **electronics**.
25. **belecoo** - Related to baby products; assign to **kids**.

Now, here is the SQL INSERT statement based on the mappings:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('beauraing', 'appliances'),
    ('beautyblender', 'accessories'),
    ('beautycreations', 'accessories'),
    ('beautyfurs', 'apparel'),
    ('beautyvisage', 'accessories'),
    ('beauugreen', 'apparel'),
    ('becca', 'accessories'),
    ('becker', 'appliances'),
    ('beeline', 'electronics'),
    ('befirst', 'sport'),
    ('behramhali', 'appliances'),
    ('behringer', 'electronics'),
    ('beijing', 'furniture'),
    ('beisier', 'appliances'),
    ('bekker', 'appliances'),
    ('beko', 'appliances'),
    ('bekzatsport', 'sport'),
    ('bel', 'appliances'),
    ('bela', 'accessories'),
    ('belaakalitva', 'apparel'),
    ('belaavorona', 'apparel'),
    ('belashoff', 'apparel'),
    ('belcando', 'country_yard'),
    ('belcat', 'electronics'),
    ('belecoo', 'kids');
```
[2024-12-05T21:07:06.426+0000] {llm_mapping.py:174} INFO - Извлечён SQL-код:
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('beauraing', 'appliances'),
    ('beautyblender', 'accessories'),
    ('beautycreations', 'accessories'),
    ('beautyfurs', 'apparel'),
    ('beautyvisage', 'accessories'),
    ('beauugreen', 'apparel'),
    ('becca', 'accessories'),
    ('becker', 'appliances'),
    ('beeline', 'electronics'),
    ('befirst', 'sport'),
    ('behramhali', 'appliances'),
    ('behringer', 'electronics'),
    ('beijing', 'furniture'),
    ('beisier', 'appliances'),
    ('bekker', 'appliances'),
    ('beko', 'appliances'),
    ('bekzatsport', 'sport'),
    ('bel', 'appliances'),
    ('bela', 'accessories'),
    ('belaakalitva', 'apparel'),
    ('belaavorona', 'apparel'),
    ('belashoff', 'apparel'),
    ('belcando', 'country_yard'),
    ('belcat', 'electronics'),
    ('belecoo', 'kids');
[2024-12-05T21:07:06.427+0000] {python.py:240} INFO - Done. Returned value was: INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('beauraing', 'appliances'),
    ('beautyblender', 'accessories'),
    ('beautycreations', 'accessories'),
    ('beautyfurs', 'apparel'),
    ('beautyvisage', 'accessories'),
    ('beauugreen', 'apparel'),
    ('becca', 'accessories'),
    ('becker', 'appliances'),
    ('beeline', 'electronics'),
    ('befirst', 'sport'),
    ('behramhali', 'appliances'),
    ('behringer', 'electronics'),
    ('beijing', 'furniture'),
    ('beisier', 'appliances'),
    ('bekker', 'appliances'),
    ('beko', 'appliances'),
    ('bekzatsport', 'sport'),
    ('bel', 'appliances'),
    ('bela', 'accessories'),
    ('belaakalitva', 'apparel'),
    ('belaavorona', 'apparel'),
    ('belashoff', 'apparel'),
    ('belcando', 'country_yard'),
    ('belcat', 'electronics'),
    ('belecoo', 'kids');
[2024-12-05T21:07:06.470+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T21:07:06.473+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=extract_sql, run_id=manual__2024-12-05T21:06:16.214185+00:00, execution_date=20241205T210616, start_date=20241205T210706, end_date=20241205T210706
[2024-12-05T21:07:06.519+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T21:07:06.541+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T21:07:06.544+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
