[2024-12-05T22:12:30.967+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T22:12:30.981+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T22:12:07.160705+00:00 [queued]>
[2024-12-05T22:12:30.988+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T22:12:07.160705+00:00 [queued]>
[2024-12-05T22:12:30.988+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T22:12:31.001+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): extract_sql> on 2024-12-05 22:12:07.160705+00:00
[2024-12-05T22:12:31.007+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=6622) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T22:12:31.009+0000] {standard_task_runner.py:72} INFO - Started process 6623 to run task
[2024-12-05T22:12:31.009+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'extract_sql', 'manual__2024-12-05T22:12:07.160705+00:00', '--job-id', '1441', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmp_nnda14a']
[2024-12-05T22:12:31.011+0000] {standard_task_runner.py:105} INFO - Job 1441: Subtask extract_sql
[2024-12-05T22:12:31.052+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T22:12:07.160705+00:00 [running]> on host c7780884450d
[2024-12-05T22:12:31.125+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='extract_sql' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T22:12:07.160705+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T22:12:07.160705+00:00'
[2024-12-05T22:12:31.126+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T22:12:31.146+0000] {llm_mapping.py:187} INFO - Извлечён llm_response: Here is the processed information for each brand based on the steps outlined:

1. **onix**: electronics
2. **onkron**: electronics
3. **onlitop**: appliances
4. **ontario**: furniture
5. **ooba**: kids
6. **oonies**: kids
7. **ooops**: kids
8. **opadiris**: furniture
9. **opple**: electronics
10. **oppo**: electronics, computers
11. **optima**: appliances
12. **optimal**: medicine
13. **optimeal**: medicine
14. **optimum**: medicine
15. **optimumnutrition**: medicine
16. **optimus**: electronics
17. **optiplus**: electronics
18. **optoma**: electronics
19. **orabel**: accessories
20. **oral-b**: medicine
21. **oral_b**: medicine
22. **oralcare**: medicine
23. **orange**: electronics
24. **orangedaily**: accessories
25. **orangekids**: kids

Now, here is the SQL INSERT statement based on the assigned categories:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('onix', 'electronics'),
    ('onkron', 'electronics'),
    ('onlitop', 'appliances'),
    ('ontario', 'furniture'),
    ('ooba', 'kids'),
    ('oonies', 'kids'),
    ('ooops', 'kids'),
    ('opadiris', 'furniture'),
    ('opple', 'electronics'),
    ('oppo', 'electronics'),
    ('oppo', 'computers'),
    ('optima', 'appliances'),
    ('optimal', 'medicine'),
    ('optimeal', 'medicine'),
    ('optimum', 'medicine'),
    ('optimumnutrition', 'medicine'),
    ('optimus', 'electronics'),
    ('optiplus', 'electronics'),
    ('optoma', 'electronics'),
    ('orabel', 'accessories'),
    ('oral-b', 'medicine'),
    ('oral_b', 'medicine'),
    ('oralcare', 'medicine'),
    ('orange', 'electronics'),
    ('orangedaily', 'accessories'),
    ('orangekids', 'kids');
```
[2024-12-05T22:12:31.147+0000] {llm_mapping.py:174} INFO - Извлечён SQL-код:
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('onix', 'electronics'),
    ('onkron', 'electronics'),
    ('onlitop', 'appliances'),
    ('ontario', 'furniture'),
    ('ooba', 'kids'),
    ('oonies', 'kids'),
    ('ooops', 'kids'),
    ('opadiris', 'furniture'),
    ('opple', 'electronics'),
    ('oppo', 'electronics'),
    ('oppo', 'computers'),
    ('optima', 'appliances'),
    ('optimal', 'medicine'),
    ('optimeal', 'medicine'),
    ('optimum', 'medicine'),
    ('optimumnutrition', 'medicine'),
    ('optimus', 'electronics'),
    ('optiplus', 'electronics'),
    ('optoma', 'electronics'),
    ('orabel', 'accessories'),
    ('oral-b', 'medicine'),
    ('oral_b', 'medicine'),
    ('oralcare', 'medicine'),
    ('orange', 'electronics'),
    ('orangedaily', 'accessories'),
    ('orangekids', 'kids');
[2024-12-05T22:12:31.148+0000] {python.py:240} INFO - Done. Returned value was: INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('onix', 'electronics'),
    ('onkron', 'electronics'),
    ('onlitop', 'appliances'),
    ('ontario', 'furniture'),
    ('ooba', 'kids'),
    ('oonies', 'kids'),
    ('ooops', 'kids'),
    ('opadiris', 'furniture'),
    ('opple', 'electronics'),
    ('oppo', 'electronics'),
    ('oppo', 'computers'),
    ('optima', 'appliances'),
    ('optimal', 'medicine'),
    ('optimeal', 'medicine'),
    ('optimum', 'medicine'),
    ('optimumnutrition', 'medicine'),
    ('optimus', 'electronics'),
    ('optiplus', 'electronics'),
    ('optoma', 'electronics'),
    ('orabel', 'accessories'),
    ('oral-b', 'medicine'),
    ('oral_b', 'medicine'),
    ('oralcare', 'medicine'),
    ('orange', 'electronics'),
    ('orangedaily', 'accessories'),
    ('orangekids', 'kids');
[2024-12-05T22:12:31.168+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T22:12:31.168+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=extract_sql, run_id=manual__2024-12-05T22:12:07.160705+00:00, execution_date=20241205T221207, start_date=20241205T221230, end_date=20241205T221231
[2024-12-05T22:12:31.184+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T22:12:31.204+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T22:12:31.207+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
