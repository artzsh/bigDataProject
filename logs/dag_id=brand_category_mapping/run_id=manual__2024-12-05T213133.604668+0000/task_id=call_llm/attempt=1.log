[2024-12-05T21:31:38.461+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T21:31:38.474+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T21:31:33.604668+00:00 [queued]>
[2024-12-05T21:31:38.481+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T21:31:33.604668+00:00 [queued]>
[2024-12-05T21:31:38.481+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T21:31:38.495+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): call_llm> on 2024-12-05 21:31:33.604668+00:00
[2024-12-05T21:31:38.501+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=4461) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T21:31:38.503+0000] {standard_task_runner.py:72} INFO - Started process 4462 to run task
[2024-12-05T21:31:38.503+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'call_llm', 'manual__2024-12-05T21:31:33.604668+00:00', '--job-id', '978', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmpycitdgem']
[2024-12-05T21:31:38.505+0000] {standard_task_runner.py:105} INFO - Job 978: Subtask call_llm
[2024-12-05T21:31:38.545+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T21:31:33.604668+00:00 [running]> on host c7780884450d
[2024-12-05T21:31:38.616+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='call_llm' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T21:31:33.604668+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T21:31:33.604668+00:00'
[2024-12-05T21:31:38.617+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T21:31:38.634+0000] {llm_mapping.py:155} INFO - Извлечён return_value: {'batch': ['fondital', 'foodmaster', 'footwork', 'force', 'forch', 'forclaz', 'ford', 'foreo', 'forlux', 'forminabanyo', 'formula', 'fornelli', 'fornite', 'forsage', 'fortnite', 'forward', 'foryou', 'forza', 'fossil', 'fostex', 'fotomate', 'fotorama', 'foxconn', 'foxx', 'f-power'], 'next_index': 1825}
[2024-12-05T21:31:38.635+0000] {llm_mapping.py:127} INFO - Отправка запроса к LLM.
[2024-12-05T21:31:39.051+0000] {logging_mixin.py:190} INFO - New g4f version: 0.3.8.3 (current: 0.3.8.0) | pip install -U g4f
[2024-12-05T21:31:58.773+0000] {llm_mapping.py:141} INFO - Получен ответ от LLM: Based on the task, here are the brands mapped to their respective categories:

1. **fondital** - appliances
2. **foodmaster** - appliances
3. **footwork** - apparel, sport
4. **force** - construction
5. **forch** - construction
6. **forclaz** - apparel, sport
7. **ford** - auto
8. **foreo** - medicine, accessories
9. **forlux** - appliances
10. **forminabanyo** - furniture
11. **formula** - electronics
12. **fornelli** - appliances
13. **fornite** - kids, electronics
14. **forsage** - auto
15. **fortnite** - kids, electronics
16. **forward** - electronics
17. **foryou** - accessories
18. **forza** - electronics
19. **fossil** - accessories
20. **fostex** - electronics
21. **fotomate** - electronics
22. **fotorama** - electronics
23. **foxconn** - electronics
24. **foxx** - electronics
25. **f-power** - electronics

Now, here is the SQL INSERT statement based on the mappings:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('fondital', 'appliances'),
    ('foodmaster', 'appliances'),
    ('footwork', 'apparel'),
    ('footwork', 'sport'),
    ('force', 'construction'),
    ('forch', 'construction'),
    ('forclaz', 'apparel'),
    ('forclaz', 'sport'),
    ('ford', 'auto'),
    ('foreo', 'medicine'),
    ('foreo', 'accessories'),
    ('forlux', 'appliances'),
    ('forminabanyo', 'furniture'),
    ('formula', 'electronics'),
    ('fornelli', 'appliances'),
    ('fornite', 'kids'),
    ('fornite', 'electronics'),
    ('forsage', 'auto'),
    ('fortnite', 'kids'),
    ('fortnite', 'electronics'),
    ('forward', 'electronics'),
    ('foryou', 'accessories'),
    ('forza', 'electronics'),
    ('fossil', 'accessories'),
    ('fostex', 'electronics'),
    ('fotomate', 'electronics'),
    ('fotorama', 'electronics'),
    ('foxconn', 'electronics'),
    ('foxx', 'electronics'),
    ('f-power', 'electronics');
```
[2024-12-05T21:31:58.773+0000] {python.py:240} INFO - Done. Returned value was: Based on the task, here are the brands mapped to their respective categories:

1. **fondital** - appliances
2. **foodmaster** - appliances
3. **footwork** - apparel, sport
4. **force** - construction
5. **forch** - construction
6. **forclaz** - apparel, sport
7. **ford** - auto
8. **foreo** - medicine, accessories
9. **forlux** - appliances
10. **forminabanyo** - furniture
11. **formula** - electronics
12. **fornelli** - appliances
13. **fornite** - kids, electronics
14. **forsage** - auto
15. **fortnite** - kids, electronics
16. **forward** - electronics
17. **foryou** - accessories
18. **forza** - electronics
19. **fossil** - accessories
20. **fostex** - electronics
21. **fotomate** - electronics
22. **fotorama** - electronics
23. **foxconn** - electronics
24. **foxx** - electronics
25. **f-power** - electronics

Now, here is the SQL INSERT statement based on the mappings:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('fondital', 'appliances'),
    ('foodmaster', 'appliances'),
    ('footwork', 'apparel'),
    ('footwork', 'sport'),
    ('force', 'construction'),
    ('forch', 'construction'),
    ('forclaz', 'apparel'),
    ('forclaz', 'sport'),
    ('ford', 'auto'),
    ('foreo', 'medicine'),
    ('foreo', 'accessories'),
    ('forlux', 'appliances'),
    ('forminabanyo', 'furniture'),
    ('formula', 'electronics'),
    ('fornelli', 'appliances'),
    ('fornite', 'kids'),
    ('fornite', 'electronics'),
    ('forsage', 'auto'),
    ('fortnite', 'kids'),
    ('fortnite', 'electronics'),
    ('forward', 'electronics'),
    ('foryou', 'accessories'),
    ('forza', 'electronics'),
    ('fossil', 'accessories'),
    ('fostex', 'electronics'),
    ('fotomate', 'electronics'),
    ('fotorama', 'electronics'),
    ('foxconn', 'electronics'),
    ('foxx', 'electronics'),
    ('f-power', 'electronics');
```
[2024-12-05T21:31:58.791+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T21:31:58.792+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=call_llm, run_id=manual__2024-12-05T21:31:33.604668+00:00, execution_date=20241205T213133, start_date=20241205T213138, end_date=20241205T213158
[2024-12-05T21:31:58.811+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T21:31:58.828+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T21:31:58.831+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
