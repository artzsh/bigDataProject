[2024-12-05T22:24:31.387+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T22:24:31.399+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T22:24:06.809531+00:00 [queued]>
[2024-12-05T22:24:31.405+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T22:24:06.809531+00:00 [queued]>
[2024-12-05T22:24:31.406+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T22:24:31.417+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): extract_sql> on 2024-12-05 22:24:06.809531+00:00
[2024-12-05T22:24:31.423+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=7259) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T22:24:31.425+0000] {standard_task_runner.py:72} INFO - Started process 7260 to run task
[2024-12-05T22:24:31.425+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'extract_sql', 'manual__2024-12-05T22:24:06.809531+00:00', '--job-id', '1579', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmpcwk000z0']
[2024-12-05T22:24:31.426+0000] {standard_task_runner.py:105} INFO - Job 1579: Subtask extract_sql
[2024-12-05T22:24:31.463+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T22:24:06.809531+00:00 [running]> on host c7780884450d
[2024-12-05T22:24:31.531+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='extract_sql' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T22:24:06.809531+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T22:24:06.809531+00:00'
[2024-12-05T22:24:31.532+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T22:24:31.551+0000] {llm_mapping.py:187} INFO - Извлечён llm_response: Here’s the categorization of the brands based on the search results and my knowledge:

1. **rocknail** - **(accessories)**
2. **rockrider** - **(sport)**
3. **rockstargames** - **(kids)**, **(electronics)**
4. **rode** - **(electronics)**, **(accessories)**
5. **rodi** - **(appliances)**, **(kids)**
6. **roeyuta** - **(apparel)**, **(accessories)**
7. **rogervandenberghenv** - **(furniture)**, **(accessories)**
8. **roingto** - **(appliances)**, **(electronics)**
9. **roison** - **(stationery)**, **(accessories)**
10. **roja** - **(accessories)**, **(apparel)**
11. **rokids** - **(kids)**, **(apparel)**
12. **roland** - **(electronics)**, **(accessories)**
13. **rolife** - **(kids)**, **(stationery)**
14. **romack** - **(furniture)**, **(appliances)**
15. **romana** - **(furniture)**, **(accessories)**
16. **romanson** - **(accessories)**, **(electronics)**
17. **romax** - **(appliances)**, **(electronics)**
18. **rombica** - **(electronics)**, **(accessories)**
19. **romer** - **(electronics)**, **(appliances)**
20. **romoss** - **(electronics)**, **(appliances)**
21. **ronas** - **(apparel)**, **(accessories)**
22. **roncato** - **(accessories)**, **(apparel)**
23. **rondell** - **(appliances)**, **(kitchen)**
24. **rongta** - **(stationery)**, **(electronics)**
25. **rongtai** - **(appliances)**, **(electronics)**

Now, here’s the SQL INSERT statement based on the categorization:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('rocknail', 'accessories'),
    ('rockrider', 'sport'),
    ('rockstargames', 'kids'),
    ('rockstargames', 'electronics'),
    ('rode', 'electronics'),
    ('rode', 'accessories'),
    ('rodi', 'appliances'),
    ('rodi', 'kids'),
    ('roeyuta', 'apparel'),
    ('roeyuta', 'accessories'),
    ('rogervandenberghenv', 'furniture'),
    ('rogervandenberghenv', 'accessories'),
    ('roingto', 'appliances'),
    ('roingto', 'electronics'),
    ('roison', 'stationery'),
    ('roison', 'accessories'),
    ('roja', 'accessories'),
    ('roja', 'apparel'),
    ('rokids', 'kids'),
    ('rokids', 'apparel'),
    ('roland', 'electronics'),
    ('roland', 'accessories'),
    ('rolife', 'kids'),
    ('rolife', 'stationery'),
    ('romack', 'furniture'),
    ('romack', 'appliances'),
    ('romana', 'furniture'),
    ('romana', 'accessories'),
    ('romanson', 'accessories'),
    ('romanson', 'electronics'),
    ('romax', 'appliances'),
    ('romax', 'electronics'),
    ('rombica', 'electronics'),
    ('rombica', 'accessories'),
    ('romer', 'electronics'),
    ('romer', 'appliances'),
    ('romoss', 'electronics'),
    ('romoss', 'appliances'),
    ('ronas', 'apparel'),
    ('ronas', 'accessories'),
    ('roncato', 'accessories'),
    ('roncato', 'apparel'),
    ('rondell', 'appliances'),
    ('rongta', 'stationery'),
    ('rongta', 'electronics'),
    ('rongtai', 'appliances'),
    ('rongtai', 'electronics');
``` 

This SQL statement reflects the brand-category mappings based on the information gathered.
[2024-12-05T22:24:31.552+0000] {llm_mapping.py:174} INFO - Извлечён SQL-код:
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('rocknail', 'accessories'),
    ('rockrider', 'sport'),
    ('rockstargames', 'kids'),
    ('rockstargames', 'electronics'),
    ('rode', 'electronics'),
    ('rode', 'accessories'),
    ('rodi', 'appliances'),
    ('rodi', 'kids'),
    ('roeyuta', 'apparel'),
    ('roeyuta', 'accessories'),
    ('rogervandenberghenv', 'furniture'),
    ('rogervandenberghenv', 'accessories'),
    ('roingto', 'appliances'),
    ('roingto', 'electronics'),
    ('roison', 'stationery'),
    ('roison', 'accessories'),
    ('roja', 'accessories'),
    ('roja', 'apparel'),
    ('rokids', 'kids'),
    ('rokids', 'apparel'),
    ('roland', 'electronics'),
    ('roland', 'accessories'),
    ('rolife', 'kids'),
    ('rolife', 'stationery'),
    ('romack', 'furniture'),
    ('romack', 'appliances'),
    ('romana', 'furniture'),
    ('romana', 'accessories'),
    ('romanson', 'accessories'),
    ('romanson', 'electronics'),
    ('romax', 'appliances'),
    ('romax', 'electronics'),
    ('rombica', 'electronics'),
    ('rombica', 'accessories'),
    ('romer', 'electronics'),
    ('romer', 'appliances'),
    ('romoss', 'electronics'),
    ('romoss', 'appliances'),
    ('ronas', 'apparel'),
    ('ronas', 'accessories'),
    ('roncato', 'accessories'),
    ('roncato', 'apparel'),
    ('rondell', 'appliances'),
    ('rongta', 'stationery'),
    ('rongta', 'electronics'),
    ('rongtai', 'appliances'),
    ('rongtai', 'electronics');
[2024-12-05T22:24:31.552+0000] {python.py:240} INFO - Done. Returned value was: INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('rocknail', 'accessories'),
    ('rockrider', 'sport'),
    ('rockstargames', 'kids'),
    ('rockstargames', 'electronics'),
    ('rode', 'electronics'),
    ('rode', 'accessories'),
    ('rodi', 'appliances'),
    ('rodi', 'kids'),
    ('roeyuta', 'apparel'),
    ('roeyuta', 'accessories'),
    ('rogervandenberghenv', 'furniture'),
    ('rogervandenberghenv', 'accessories'),
    ('roingto', 'appliances'),
    ('roingto', 'electronics'),
    ('roison', 'stationery'),
    ('roison', 'accessories'),
    ('roja', 'accessories'),
    ('roja', 'apparel'),
    ('rokids', 'kids'),
    ('rokids', 'apparel'),
    ('roland', 'electronics'),
    ('roland', 'accessories'),
    ('rolife', 'kids'),
    ('rolife', 'stationery'),
    ('romack', 'furniture'),
    ('romack', 'appliances'),
    ('romana', 'furniture'),
    ('romana', 'accessories'),
    ('romanson', 'accessories'),
    ('romanson', 'electronics'),
    ('romax', 'appliances'),
    ('romax', 'electronics'),
    ('rombica', 'electronics'),
    ('rombica', 'accessories'),
    ('romer', 'electronics'),
    ('romer', 'appliances'),
    ('romoss', 'electronics'),
    ('romoss', 'appliances'),
    ('ronas', 'apparel'),
    ('ronas', 'accessories'),
    ('roncato', 'accessories'),
    ('roncato', 'apparel'),
    ('rondell', 'appliances'),
    ('rongta', 'stationery'),
    ('rongta', 'electronics'),
    ('rongtai', 'appliances'),
    ('rongtai', 'electronics');
[2024-12-05T22:24:31.571+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T22:24:31.572+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=extract_sql, run_id=manual__2024-12-05T22:24:06.809531+00:00, execution_date=20241205T222406, start_date=20241205T222431, end_date=20241205T222431
[2024-12-05T22:24:31.599+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T22:24:31.618+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T22:24:31.621+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
