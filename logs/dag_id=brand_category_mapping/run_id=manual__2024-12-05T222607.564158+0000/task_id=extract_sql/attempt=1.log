[2024-12-05T22:26:31.527+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T22:26:31.542+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T22:26:07.564158+00:00 [queued]>
[2024-12-05T22:26:31.550+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T22:26:07.564158+00:00 [queued]>
[2024-12-05T22:26:31.550+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T22:26:31.563+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): extract_sql> on 2024-12-05 22:26:07.564158+00:00
[2024-12-05T22:26:31.569+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=7371) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T22:26:31.570+0000] {standard_task_runner.py:72} INFO - Started process 7372 to run task
[2024-12-05T22:26:31.571+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'extract_sql', 'manual__2024-12-05T22:26:07.564158+00:00', '--job-id', '1603', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmphwp4y9o9']
[2024-12-05T22:26:31.573+0000] {standard_task_runner.py:105} INFO - Job 1603: Subtask extract_sql
[2024-12-05T22:26:31.632+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T22:26:07.564158+00:00 [running]> on host c7780884450d
[2024-12-05T22:26:31.722+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='extract_sql' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T22:26:07.564158+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T22:26:07.564158+00:00'
[2024-12-05T22:26:31.723+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T22:26:31.742+0000] {llm_mapping.py:187} INFO - Извлечён llm_response: Here are the assigned categories for each brand based on the search results:

1. **samick** - furniture
2. **samo** - apparel, accessories
3. **samonite** - accessories
4. **samson** - electronics, appliances
5. **samsonite** - accessories, apparel
6. **samsung** - electronics, appliances, computers
7. **samy** - apparel
8. **samyang** - food (not in the provided categories, but could relate to appliances for cooking)
9. **s.a.n.** - stationery
10. **san** - stationery
11. **sanathali** - apparel
12. **sanc** - stationery
13. **sandalye** - furniture
14. **sandisk** - electronics
15. **sanfor** - apparel
16. **saniano** - furniture
17. **sanicat** - country_yard
18. **sanita** - apparel
19. **sanitaluxe** - medicine
20. **sanjia** - electronics
21. **sankeiroki** - construction
22. **sano** - medicine
23. **sanosan** - medicine
24. **sanovit** - medicine
25. **santa-cruz** - sport, apparel

Now, here is the SQL INSERT statement based on the brand-category mappings:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('samick', 'furniture'),
    ('samo', 'apparel'),
    ('samo', 'accessories'),
    ('samonite', 'accessories'),
    ('samson', 'electronics'),
    ('samson', 'appliances'),
    ('samsonite', 'accessories'),
    ('samsonite', 'apparel'),
    ('samsung', 'electronics'),
    ('samsung', 'appliances'),
    ('samsung', 'computers'),
    ('samy', 'apparel'),
    ('samyang', 'appliances'),
    ('s.a.n.', 'stationery'),
    ('san', 'stationery'),
    ('sanathali', 'apparel'),
    ('sanc', 'stationery'),
    ('sandalye', 'furniture'),
    ('sandisk', 'electronics'),
    ('sanfor', 'apparel'),
    ('saniano', 'furniture'),
    ('sanicat', 'country_yard'),
    ('sanita', 'apparel'),
    ('sanitaluxe', 'medicine'),
    ('sanjia', 'electronics'),
    ('sankeiroki', 'construction'),
    ('sano', 'medicine'),
    ('sanosan', 'medicine'),
    ('sanovit', 'medicine'),
    ('santa-cruz', 'sport'),
    ('santa-cruz', 'apparel');
```
[2024-12-05T22:26:31.744+0000] {llm_mapping.py:174} INFO - Извлечён SQL-код:
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('samick', 'furniture'),
    ('samo', 'apparel'),
    ('samo', 'accessories'),
    ('samonite', 'accessories'),
    ('samson', 'electronics'),
    ('samson', 'appliances'),
    ('samsonite', 'accessories'),
    ('samsonite', 'apparel'),
    ('samsung', 'electronics'),
    ('samsung', 'appliances'),
    ('samsung', 'computers'),
    ('samy', 'apparel'),
    ('samyang', 'appliances'),
    ('s.a.n.', 'stationery'),
    ('san', 'stationery'),
    ('sanathali', 'apparel'),
    ('sanc', 'stationery'),
    ('sandalye', 'furniture'),
    ('sandisk', 'electronics'),
    ('sanfor', 'apparel'),
    ('saniano', 'furniture'),
    ('sanicat', 'country_yard'),
    ('sanita', 'apparel'),
    ('sanitaluxe', 'medicine'),
    ('sanjia', 'electronics'),
    ('sankeiroki', 'construction'),
    ('sano', 'medicine'),
    ('sanosan', 'medicine'),
    ('sanovit', 'medicine'),
    ('santa-cruz', 'sport'),
    ('santa-cruz', 'apparel');
[2024-12-05T22:26:31.745+0000] {python.py:240} INFO - Done. Returned value was: INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('samick', 'furniture'),
    ('samo', 'apparel'),
    ('samo', 'accessories'),
    ('samonite', 'accessories'),
    ('samson', 'electronics'),
    ('samson', 'appliances'),
    ('samsonite', 'accessories'),
    ('samsonite', 'apparel'),
    ('samsung', 'electronics'),
    ('samsung', 'appliances'),
    ('samsung', 'computers'),
    ('samy', 'apparel'),
    ('samyang', 'appliances'),
    ('s.a.n.', 'stationery'),
    ('san', 'stationery'),
    ('sanathali', 'apparel'),
    ('sanc', 'stationery'),
    ('sandalye', 'furniture'),
    ('sandisk', 'electronics'),
    ('sanfor', 'apparel'),
    ('saniano', 'furniture'),
    ('sanicat', 'country_yard'),
    ('sanita', 'apparel'),
    ('sanitaluxe', 'medicine'),
    ('sanjia', 'electronics'),
    ('sankeiroki', 'construction'),
    ('sano', 'medicine'),
    ('sanosan', 'medicine'),
    ('sanovit', 'medicine'),
    ('santa-cruz', 'sport'),
    ('santa-cruz', 'apparel');
[2024-12-05T22:26:31.763+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T22:26:31.764+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=extract_sql, run_id=manual__2024-12-05T22:26:07.564158+00:00, execution_date=20241205T222607, start_date=20241205T222631, end_date=20241205T222631
[2024-12-05T22:26:31.784+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T22:26:31.802+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T22:26:31.806+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
