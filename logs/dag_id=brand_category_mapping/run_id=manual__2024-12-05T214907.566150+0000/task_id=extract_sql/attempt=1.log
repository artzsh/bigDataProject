[2024-12-05T21:49:41.818+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T21:49:41.831+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:49:07.566150+00:00 [queued]>
[2024-12-05T21:49:41.840+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:49:07.566150+00:00 [queued]>
[2024-12-05T21:49:41.841+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T21:49:41.855+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): extract_sql> on 2024-12-05 21:49:07.566150+00:00
[2024-12-05T21:49:41.861+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=5397) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T21:49:41.862+0000] {standard_task_runner.py:72} INFO - Started process 5398 to run task
[2024-12-05T21:49:41.862+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'extract_sql', 'manual__2024-12-05T21:49:07.566150+00:00', '--job-id', '1177', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmpqv2m7aq8']
[2024-12-05T21:49:41.864+0000] {standard_task_runner.py:105} INFO - Job 1177: Subtask extract_sql
[2024-12-05T21:49:41.900+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:49:07.566150+00:00 [running]> on host c7780884450d
[2024-12-05T21:49:41.964+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='extract_sql' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T21:49:07.566150+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T21:49:07.566150+00:00'
[2024-12-05T21:49:41.965+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T21:49:41.983+0000] {llm_mapping.py:187} INFO - Извлечён llm_response: Here’s the mapping of the brands to their respective categories based on the search queries:

1. **kingtony** - tools, construction
2. **kingtul** - tools, construction
3. **kink** - accessories (specifically kink-related products)
4. **kinklight** - electronics (lighting)
5. **kinlee** - electronics (home appliances)
6. **kipardo** - apparel
7. **kipling** - apparel, accessories (bags)
8. **kipocket** - accessories (bags)
9. **kipor** - appliances (generators)
10. **kipsta** - sport
11. **kirkland** - grocery, home goods (not fitting perfectly in the given categories, but leaning towards appliances)
12. **kirovit** - medicine (medical supplies)
13. **kirovskaakeramika** - construction (ceramics)
14. **kisswill** - electronics (phone accessories)
15. **kitana** - apparel (clothing)
16. **kitap** - stationery (books)
17. **kitchenaid** - appliances (kitchen)
18. **kitekat** - pet food (not fitting perfectly in the given categories)
19. **kitfort** - appliances (kitchen)
20. **kitkat** - snacks (not fitting perfectly in the given categories)
21. **kiturami** - appliances (heating systems)
22. **kivi** - electronics (smart home devices)
23. **kk** - accessories (general)
24. **k.k.y.** - apparel
25. **kladez** - stationery (office supplies)

Now, I will generate the SQL INSERT statement based on the above mappings:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('kingtony', 'construction'),
    ('kingtony', 'tools'),
    ('kingtul', 'construction'),
    ('kingtul', 'tools'),
    ('kink', 'accessories'),
    ('kinklight', 'electronics'),
    ('kinlee', 'electronics'),
    ('kipardo', 'apparel'),
    ('kipling', 'apparel'),
    ('kipling', 'accessories'),
    ('kipocket', 'accessories'),
    ('kipor', 'appliances'),
    ('kipsta', 'sport'),
    ('kirkland', 'appliances'),
    ('kirovit', 'medicine'),
    ('kirovskaakeramika', 'construction'),
    ('kisswill', 'electronics'),
    ('kitana', 'apparel'),
    ('kitap', 'stationery'),
    ('kitchenaid', 'appliances'),
    ('kitekat', 'stationery'),
    ('kitfort', 'appliances'),
    ('kitkat', 'stationery'),
    ('kiturami', 'appliances'),
    ('kivi', 'electronics'),
    ('kk', 'accessories'),
    ('k.k.y.', 'apparel'),
    ('kladez', 'stationery');
```
[2024-12-05T21:49:41.984+0000] {llm_mapping.py:174} INFO - Извлечён SQL-код:
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('kingtony', 'construction'),
    ('kingtony', 'tools'),
    ('kingtul', 'construction'),
    ('kingtul', 'tools'),
    ('kink', 'accessories'),
    ('kinklight', 'electronics'),
    ('kinlee', 'electronics'),
    ('kipardo', 'apparel'),
    ('kipling', 'apparel'),
    ('kipling', 'accessories'),
    ('kipocket', 'accessories'),
    ('kipor', 'appliances'),
    ('kipsta', 'sport'),
    ('kirkland', 'appliances'),
    ('kirovit', 'medicine'),
    ('kirovskaakeramika', 'construction'),
    ('kisswill', 'electronics'),
    ('kitana', 'apparel'),
    ('kitap', 'stationery'),
    ('kitchenaid', 'appliances'),
    ('kitekat', 'stationery'),
    ('kitfort', 'appliances'),
    ('kitkat', 'stationery'),
    ('kiturami', 'appliances'),
    ('kivi', 'electronics'),
    ('kk', 'accessories'),
    ('k.k.y.', 'apparel'),
    ('kladez', 'stationery');
[2024-12-05T21:49:41.985+0000] {python.py:240} INFO - Done. Returned value was: INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('kingtony', 'construction'),
    ('kingtony', 'tools'),
    ('kingtul', 'construction'),
    ('kingtul', 'tools'),
    ('kink', 'accessories'),
    ('kinklight', 'electronics'),
    ('kinlee', 'electronics'),
    ('kipardo', 'apparel'),
    ('kipling', 'apparel'),
    ('kipling', 'accessories'),
    ('kipocket', 'accessories'),
    ('kipor', 'appliances'),
    ('kipsta', 'sport'),
    ('kirkland', 'appliances'),
    ('kirovit', 'medicine'),
    ('kirovskaakeramika', 'construction'),
    ('kisswill', 'electronics'),
    ('kitana', 'apparel'),
    ('kitap', 'stationery'),
    ('kitchenaid', 'appliances'),
    ('kitekat', 'stationery'),
    ('kitfort', 'appliances'),
    ('kitkat', 'stationery'),
    ('kiturami', 'appliances'),
    ('kivi', 'electronics'),
    ('kk', 'accessories'),
    ('k.k.y.', 'apparel'),
    ('kladez', 'stationery');
[2024-12-05T21:49:42.001+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T21:49:42.002+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=extract_sql, run_id=manual__2024-12-05T21:49:07.566150+00:00, execution_date=20241205T214907, start_date=20241205T214941, end_date=20241205T214942
[2024-12-05T21:49:42.036+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T21:49:42.055+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T21:49:42.058+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
