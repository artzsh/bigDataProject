[2024-12-05T21:13:52.848+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T21:13:52.860+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T21:13:48.326237+00:00 [queued]>
[2024-12-05T21:13:52.869+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T21:13:48.326237+00:00 [queued]>
[2024-12-05T21:13:52.871+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T21:13:52.889+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): call_llm> on 2024-12-05 21:13:48.326237+00:00
[2024-12-05T21:13:52.895+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=3495) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T21:13:52.897+0000] {standard_task_runner.py:72} INFO - Started process 3496 to run task
[2024-12-05T21:13:52.898+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'call_llm', 'manual__2024-12-05T21:13:48.326237+00:00', '--job-id', '768', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmp0ug2855g']
[2024-12-05T21:13:52.900+0000] {standard_task_runner.py:105} INFO - Job 768: Subtask call_llm
[2024-12-05T21:13:52.935+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T21:13:48.326237+00:00 [running]> on host c7780884450d
[2024-12-05T21:13:53.000+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='call_llm' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T21:13:48.326237+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T21:13:48.326237+00:00'
[2024-12-05T21:13:53.002+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T21:13:53.020+0000] {llm_mapping.py:155} INFO - Извлечён return_value: {'batch': ['car-baby', 'carbon', 'carcam', 'cardrox', 'carfashion', 'carhome', 'carino', 'carlsbad', 'carlsbro', 'carmex', 'carpet', 'carpisa', 'carrera', 'cars', 'carters', 'cartier', 'carver', 'carwel', 'casaconforte', 'casada', 'casamorati', 'case', 'caseconforte', 'casela', 'casio'], 'next_index': 950}
[2024-12-05T21:13:53.021+0000] {llm_mapping.py:127} INFO - Отправка запроса к LLM.
[2024-12-05T21:13:53.457+0000] {logging_mixin.py:190} INFO - New g4f version: 0.3.8.3 (current: 0.3.8.0) | pip install -U g4f
[2024-12-05T21:14:10.962+0000] {llm_mapping.py:141} INFO - Получен ответ от LLM: Here’s the mapping of each brand to the predefined categories based on the search queries:

1. **car-baby**: kids
2. **carbon**: apparel, accessories
3. **carcam**: electronics
4. **cardrox**: auto
5. **carfashion**: apparel, accessories
6. **carhome**: home, country_yard
7. **carino**: apparel
8. **carlsbad**: furniture
9. **carlsbro**: electronics
10. **carmex**: medicine
11. **carpet**: home, furniture
12. **carpisa**: accessories
13. **carrera**: apparel, sport
14. **cars**: auto
15. **carters**: kids, apparel
16. **cartier**: accessories
17. **carver**: electronics, appliances
18. **carwel**: apparel
19. **casaconforte**: furniture
20. **casada**: appliances
21. **casamorati**: accessories
22. **case**: electronics
23. **caseconforte**: furniture
24. **casela**: furniture
25. **casio**: electronics, appliances

Now, here is the SQL INSERT statement based on the assigned categories:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('car-baby', 'kids'),
    ('carbon', 'apparel'),
    ('carbon', 'accessories'),
    ('carcam', 'electronics'),
    ('cardrox', 'auto'),
    ('carfashion', 'apparel'),
    ('carfashion', 'accessories'),
    ('carhome', 'country_yard'),
    ('carino', 'apparel'),
    ('carlsbad', 'furniture'),
    ('carlsbro', 'electronics'),
    ('carmex', 'medicine'),
    ('carpet', 'furniture'),
    ('carpet', 'country_yard'),
    ('carpisa', 'accessories'),
    ('carrera', 'apparel'),
    ('carrera', 'sport'),
    ('cars', 'auto'),
    ('carters', 'kids'),
    ('carters', 'apparel'),
    ('cartier', 'accessories'),
    ('carver', 'electronics'),
    ('carver', 'appliances'),
    ('carwel', 'apparel'),
    ('casaconforte', 'furniture'),
    ('casada', 'appliances'),
    ('casamorati', 'accessories'),
    ('case', 'electronics'),
    ('caseconforte', 'furniture'),
    ('casela', 'furniture'),
    ('casio', 'electronics'),
    ('casio', 'appliances');
```
[2024-12-05T21:14:10.963+0000] {python.py:240} INFO - Done. Returned value was: Here’s the mapping of each brand to the predefined categories based on the search queries:

1. **car-baby**: kids
2. **carbon**: apparel, accessories
3. **carcam**: electronics
4. **cardrox**: auto
5. **carfashion**: apparel, accessories
6. **carhome**: home, country_yard
7. **carino**: apparel
8. **carlsbad**: furniture
9. **carlsbro**: electronics
10. **carmex**: medicine
11. **carpet**: home, furniture
12. **carpisa**: accessories
13. **carrera**: apparel, sport
14. **cars**: auto
15. **carters**: kids, apparel
16. **cartier**: accessories
17. **carver**: electronics, appliances
18. **carwel**: apparel
19. **casaconforte**: furniture
20. **casada**: appliances
21. **casamorati**: accessories
22. **case**: electronics
23. **caseconforte**: furniture
24. **casela**: furniture
25. **casio**: electronics, appliances

Now, here is the SQL INSERT statement based on the assigned categories:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('car-baby', 'kids'),
    ('carbon', 'apparel'),
    ('carbon', 'accessories'),
    ('carcam', 'electronics'),
    ('cardrox', 'auto'),
    ('carfashion', 'apparel'),
    ('carfashion', 'accessories'),
    ('carhome', 'country_yard'),
    ('carino', 'apparel'),
    ('carlsbad', 'furniture'),
    ('carlsbro', 'electronics'),
    ('carmex', 'medicine'),
    ('carpet', 'furniture'),
    ('carpet', 'country_yard'),
    ('carpisa', 'accessories'),
    ('carrera', 'apparel'),
    ('carrera', 'sport'),
    ('cars', 'auto'),
    ('carters', 'kids'),
    ('carters', 'apparel'),
    ('cartier', 'accessories'),
    ('carver', 'electronics'),
    ('carver', 'appliances'),
    ('carwel', 'apparel'),
    ('casaconforte', 'furniture'),
    ('casada', 'appliances'),
    ('casamorati', 'accessories'),
    ('case', 'electronics'),
    ('caseconforte', 'furniture'),
    ('casela', 'furniture'),
    ('casio', 'electronics'),
    ('casio', 'appliances');
```
[2024-12-05T21:14:10.983+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T21:14:10.984+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=call_llm, run_id=manual__2024-12-05T21:13:48.326237+00:00, execution_date=20241205T211348, start_date=20241205T211352, end_date=20241205T211410
[2024-12-05T21:14:11.007+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T21:14:11.024+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T21:14:11.027+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
