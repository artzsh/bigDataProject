[2024-12-05T22:11:38.242+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T22:11:38.256+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T22:11:13.181868+00:00 [queued]>
[2024-12-05T22:11:38.263+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T22:11:13.181868+00:00 [queued]>
[2024-12-05T22:11:38.263+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T22:11:38.276+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): extract_sql> on 2024-12-05 22:11:13.181868+00:00
[2024-12-05T22:11:38.282+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=6566) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T22:11:38.283+0000] {standard_task_runner.py:72} INFO - Started process 6567 to run task
[2024-12-05T22:11:38.284+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'extract_sql', 'manual__2024-12-05T22:11:13.181868+00:00', '--job-id', '1429', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmpstsux_yw']
[2024-12-05T22:11:38.286+0000] {standard_task_runner.py:105} INFO - Job 1429: Subtask extract_sql
[2024-12-05T22:11:38.322+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T22:11:13.181868+00:00 [running]> on host c7780884450d
[2024-12-05T22:11:38.409+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='extract_sql' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T22:11:13.181868+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T22:11:13.181868+00:00'
[2024-12-05T22:11:38.410+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T22:11:38.430+0000] {llm_mapping.py:187} INFO - Извлечён llm_response: Here is the mapping of the brands to their respective categories based on the search results and analysis:

1. **obsessive** - apparel
2. **ocag** - accessories
3. **ockel** - electronics
4. **ocz** - computers
5. **odeonlight** - appliances, electronics
6. **odri** - apparel
7. **oeego** - accessories
8. **oem** - electronics
9. **ogiz** - electronics
10. **ohoha** - kids
11. **oitez** - apparel
12. **oklick** - electronics
13. **okuma** - sport
14. **oladi** - furniture
15. **oleo-mac** - appliances, construction
16. **oley** - accessories
17. **olimp** - medicine, sport
18. **olimp-biznes** - medicine
19. **olimpic** - sport
20. **oliva** - food (not included in categories)
21. **olivella** - medicine, accessories
22. **olivia** - kids
23. **oliviabambino** - kids
24. **ollin** - beauty (not included in categories)
25. **olmeko** - construction

Now, based on the above mappings, here is the SQL INSERT statement:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('obsessive', 'apparel'),
    ('ocag', 'accessories'),
    ('ockel', 'electronics'),
    ('ocz', 'computers'),
    ('odeonlight', 'appliances'),
    ('odeonlight', 'electronics'),
    ('odri', 'apparel'),
    ('oeego', 'accessories'),
    ('oem', 'electronics'),
    ('ogiz', 'electronics'),
    ('ohoha', 'kids'),
    ('oitez', 'apparel'),
    ('oklick', 'electronics'),
    ('okuma', 'sport'),
    ('oladi', 'furniture'),
    ('oleo-mac', 'appliances'),
    ('oleo-mac', 'construction'),
    ('oley', 'accessories'),
    ('olimp', 'medicine'),
    ('olimp', 'sport'),
    ('olimp-biznes', 'medicine'),
    ('olimpic', 'sport'),
    ('oliva', 'food'),
    ('olivella', 'medicine'),
    ('olivella', 'accessories'),
    ('olivia', 'kids'),
    ('oliviabambino', 'kids'),
    ('ollin', 'beauty'),
    ('olmeko', 'construction');
```

Note: Some brands may have products that do not fit into the predefined categories, such as food and beauty, and therefore are not included in the final SQL statement.
[2024-12-05T22:11:38.431+0000] {llm_mapping.py:174} INFO - Извлечён SQL-код:
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('obsessive', 'apparel'),
    ('ocag', 'accessories'),
    ('ockel', 'electronics'),
    ('ocz', 'computers'),
    ('odeonlight', 'appliances'),
    ('odeonlight', 'electronics'),
    ('odri', 'apparel'),
    ('oeego', 'accessories'),
    ('oem', 'electronics'),
    ('ogiz', 'electronics'),
    ('ohoha', 'kids'),
    ('oitez', 'apparel'),
    ('oklick', 'electronics'),
    ('okuma', 'sport'),
    ('oladi', 'furniture'),
    ('oleo-mac', 'appliances'),
    ('oleo-mac', 'construction'),
    ('oley', 'accessories'),
    ('olimp', 'medicine'),
    ('olimp', 'sport'),
    ('olimp-biznes', 'medicine'),
    ('olimpic', 'sport'),
    ('oliva', 'food'),
    ('olivella', 'medicine'),
    ('olivella', 'accessories'),
    ('olivia', 'kids'),
    ('oliviabambino', 'kids'),
    ('ollin', 'beauty'),
    ('olmeko', 'construction');
[2024-12-05T22:11:38.431+0000] {python.py:240} INFO - Done. Returned value was: INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('obsessive', 'apparel'),
    ('ocag', 'accessories'),
    ('ockel', 'electronics'),
    ('ocz', 'computers'),
    ('odeonlight', 'appliances'),
    ('odeonlight', 'electronics'),
    ('odri', 'apparel'),
    ('oeego', 'accessories'),
    ('oem', 'electronics'),
    ('ogiz', 'electronics'),
    ('ohoha', 'kids'),
    ('oitez', 'apparel'),
    ('oklick', 'electronics'),
    ('okuma', 'sport'),
    ('oladi', 'furniture'),
    ('oleo-mac', 'appliances'),
    ('oleo-mac', 'construction'),
    ('oley', 'accessories'),
    ('olimp', 'medicine'),
    ('olimp', 'sport'),
    ('olimp-biznes', 'medicine'),
    ('olimpic', 'sport'),
    ('oliva', 'food'),
    ('olivella', 'medicine'),
    ('olivella', 'accessories'),
    ('olivia', 'kids'),
    ('oliviabambino', 'kids'),
    ('ollin', 'beauty'),
    ('olmeko', 'construction');
[2024-12-05T22:11:38.448+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T22:11:38.449+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=extract_sql, run_id=manual__2024-12-05T22:11:13.181868+00:00, execution_date=20241205T221113, start_date=20241205T221138, end_date=20241205T221138
[2024-12-05T22:11:38.497+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T22:11:38.516+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T22:11:38.519+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
