[2024-12-05T21:38:59.795+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T21:38:59.809+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:38:35.058404+00:00 [queued]>
[2024-12-05T21:38:59.816+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:38:35.058404+00:00 [queued]>
[2024-12-05T21:38:59.817+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T21:38:59.830+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): extract_sql> on 2024-12-05 21:38:35.058404+00:00
[2024-12-05T21:38:59.836+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=4837) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T21:38:59.837+0000] {standard_task_runner.py:72} INFO - Started process 4838 to run task
[2024-12-05T21:38:59.837+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'extract_sql', 'manual__2024-12-05T21:38:35.058404+00:00', '--job-id', '1057', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmpb458t6ta']
[2024-12-05T21:38:59.839+0000] {standard_task_runner.py:105} INFO - Job 1057: Subtask extract_sql
[2024-12-05T21:38:59.918+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:38:35.058404+00:00 [running]> on host c7780884450d
[2024-12-05T21:39:00.034+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='extract_sql' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T21:38:35.058404+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T21:38:35.058404+00:00'
[2024-12-05T21:39:00.036+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T21:39:00.058+0000] {llm_mapping.py:187} INFO - Извлечён llm_response: Here are the brands mapped to their appropriate categories based on the search queries:

1. **harley-davidson**: auto, apparel
2. **harmankardon**: electronics
3. **haro**: sport, accessories
4. **harp**: musical instruments (not in predefined categories, but could fit under accessories)
5. **harper**: stationery, kids
6. **harpercollins**: stationery
7. **hartan**: kids, apparel (specifically strollers)
8. **harte**: (no specific category found, could fit under apparel)
9. **hartung**: (no specific category found, could fit under furniture)
10. **harvia**: appliances (specifically sauna heaters)
11. **hasbro**: kids, toys (not in predefined categories, but could fit under kids)
12. **hasbromylittlepony**: kids
13. **hatchimals**: kids
14. **hauck**: kids, apparel (specifically baby products)
15. **hauptstadtkoffer**: accessories (luggage)
16. **haushalt**: appliances
17. **hausmann**: furniture
18. **havit**: electronics, computers (peripherals)
19. **hayabusa**: sport, apparel (specifically MMA gear)
20. **hayali**: (no specific category found, could fit under accessories)
21. **hayejin**: (no specific category found, could fit under accessories)
22. **hb**: stationery
23. **hde**: (no specific category found, could fit under electronics)
24. **head**: sport, accessories (specifically sports equipment)
25. **headrush**: apparel, sport (specifically clothing for sports)

Now, here is the SQL INSERT statement based on the assigned categories:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('harley-davidson', 'auto'),
    ('harley-davidson', 'apparel'),
    ('harmankardon', 'electronics'),
    ('haro', 'sport'),
    ('haro', 'accessories'),
    ('harp', 'accessories'),
    ('harper', 'stationery'),
    ('harper', 'kids'),
    ('harpercollins', 'stationery'),
    ('hartan', 'kids'),
    ('hartan', 'apparel'),
    ('harte', 'apparel'),
    ('hartung', 'furniture'),
    ('harvia', 'appliances'),
    ('hasbro', 'kids'),
    ('hasbromylittlepony', 'kids'),
    ('hatchimals', 'kids'),
    ('hauck', 'kids'),
    ('hauck', 'apparel'),
    ('hauptstadtkoffer', 'accessories'),
    ('haushalt', 'appliances'),
    ('hausmann', 'furniture'),
    ('havit', 'electronics'),
    ('havit', 'computers'),
    ('hayabusa', 'sport'),
    ('hayabusa', 'apparel'),
    ('hayali', 'accessories'),
    ('hayejin', 'accessories'),
    ('hb', 'stationery'),
    ('hde', 'electronics'),
    ('head', 'sport'),
    ('head', 'accessories'),
    ('headrush', 'apparel'),
    ('headrush', 'sport');
```

Feel free to ask if you need further assistance or modifications!
[2024-12-05T21:39:00.059+0000] {llm_mapping.py:174} INFO - Извлечён SQL-код:
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('harley-davidson', 'auto'),
    ('harley-davidson', 'apparel'),
    ('harmankardon', 'electronics'),
    ('haro', 'sport'),
    ('haro', 'accessories'),
    ('harp', 'accessories'),
    ('harper', 'stationery'),
    ('harper', 'kids'),
    ('harpercollins', 'stationery'),
    ('hartan', 'kids'),
    ('hartan', 'apparel'),
    ('harte', 'apparel'),
    ('hartung', 'furniture'),
    ('harvia', 'appliances'),
    ('hasbro', 'kids'),
    ('hasbromylittlepony', 'kids'),
    ('hatchimals', 'kids'),
    ('hauck', 'kids'),
    ('hauck', 'apparel'),
    ('hauptstadtkoffer', 'accessories'),
    ('haushalt', 'appliances'),
    ('hausmann', 'furniture'),
    ('havit', 'electronics'),
    ('havit', 'computers'),
    ('hayabusa', 'sport'),
    ('hayabusa', 'apparel'),
    ('hayali', 'accessories'),
    ('hayejin', 'accessories'),
    ('hb', 'stationery'),
    ('hde', 'electronics'),
    ('head', 'sport'),
    ('head', 'accessories'),
    ('headrush', 'apparel'),
    ('headrush', 'sport');
[2024-12-05T21:39:00.059+0000] {python.py:240} INFO - Done. Returned value was: INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('harley-davidson', 'auto'),
    ('harley-davidson', 'apparel'),
    ('harmankardon', 'electronics'),
    ('haro', 'sport'),
    ('haro', 'accessories'),
    ('harp', 'accessories'),
    ('harper', 'stationery'),
    ('harper', 'kids'),
    ('harpercollins', 'stationery'),
    ('hartan', 'kids'),
    ('hartan', 'apparel'),
    ('harte', 'apparel'),
    ('hartung', 'furniture'),
    ('harvia', 'appliances'),
    ('hasbro', 'kids'),
    ('hasbromylittlepony', 'kids'),
    ('hatchimals', 'kids'),
    ('hauck', 'kids'),
    ('hauck', 'apparel'),
    ('hauptstadtkoffer', 'accessories'),
    ('haushalt', 'appliances'),
    ('hausmann', 'furniture'),
    ('havit', 'electronics'),
    ('havit', 'computers'),
    ('hayabusa', 'sport'),
    ('hayabusa', 'apparel'),
    ('hayali', 'accessories'),
    ('hayejin', 'accessories'),
    ('hb', 'stationery'),
    ('hde', 'electronics'),
    ('head', 'sport'),
    ('head', 'accessories'),
    ('headrush', 'apparel'),
    ('headrush', 'sport');
[2024-12-05T21:39:00.077+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T21:39:00.077+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=extract_sql, run_id=manual__2024-12-05T21:38:35.058404+00:00, execution_date=20241205T213835, start_date=20241205T213859, end_date=20241205T213900
[2024-12-05T21:39:00.092+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T21:39:00.113+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T21:39:00.117+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
