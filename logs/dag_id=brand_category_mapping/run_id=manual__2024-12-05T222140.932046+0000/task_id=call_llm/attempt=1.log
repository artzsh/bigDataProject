[2024-12-05T22:21:45.935+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T22:21:45.947+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T22:21:40.932046+00:00 [queued]>
[2024-12-05T22:21:45.954+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T22:21:40.932046+00:00 [queued]>
[2024-12-05T22:21:45.955+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T22:21:45.968+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): call_llm> on 2024-12-05 22:21:40.932046+00:00
[2024-12-05T22:21:45.974+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=7114) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T22:21:45.976+0000] {standard_task_runner.py:72} INFO - Started process 7115 to run task
[2024-12-05T22:21:45.976+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'call_llm', 'manual__2024-12-05T22:21:40.932046+00:00', '--job-id', '1548', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmpgp8nz1s9']
[2024-12-05T22:21:45.979+0000] {standard_task_runner.py:105} INFO - Job 1548: Subtask call_llm
[2024-12-05T22:21:46.017+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T22:21:40.932046+00:00 [running]> on host c7780884450d
[2024-12-05T22:21:46.127+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='call_llm' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T22:21:40.932046+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T22:21:40.932046+00:00'
[2024-12-05T22:21:46.130+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T22:21:46.171+0000] {llm_mapping.py:155} INFO - Извлечён return_value: {'batch': ['redbo', 'redcastle', 'redford', 'redforest', 'redken', 'redline', 'redmond', 'redoblu', 'redpower', 'redragon', 'reebok', 'reelsonar', 'regalacademy', 'regatta', 'regent', 'regentinox', 'reima', 'reimar', 'reinvox', 'relaks', 'relouis', 'reluce', 'reluse', 'remain', 'remax'], 'next_index': 4200}
[2024-12-05T22:21:46.173+0000] {llm_mapping.py:127} INFO - Отправка запроса к LLM.
[2024-12-05T22:21:46.605+0000] {logging_mixin.py:190} INFO - New g4f version: 0.3.8.3 (current: 0.3.8.0) | pip install -U g4f
[2024-12-05T22:22:08.010+0000] {llm_mapping.py:141} INFO - Получен ответ от LLM: Based on the provided brands and the search queries, here are the assigned categories for each brand:

1. **redbo** - appliances
2. **redcastle** - kids, apparel
3. **redford** - furniture
4. **redforest** - furniture
5. **redken** - medicine, accessories (hair care products)
6. **redline** - auto, electronics
7. **redmond** - appliances
8. **redoblu** - electronics
9. **redpower** - electronics
10. **redragon** - electronics, accessories (gaming peripherals)
11. **reebok** - sport, apparel
12. **reelsonar** - electronics, sport (fishing gear)
13. **regalacademy** - kids
14. **regatta** - apparel, accessories (outdoor clothing)
15. **regent** - furniture
16. **regentinox** - construction, appliances (kitchenware)
17. **reima** - kids, apparel
18. **reimar** - stationery, accessories
19. **reinvox** - electronics
20. **relaks** - furniture
21. **relouis** - accessories (cosmetics)
22. **reluce** - accessories (beauty products)
23. **reluse** - accessories
24. **remain** - apparel
25. **remax** - construction, appliances (real estate services)

Now, here is the SQL INSERT statement based on the assigned categories:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('redbo', 'appliances'),
    ('redcastle', 'kids'),
    ('redcastle', 'apparel'),
    ('redford', 'furniture'),
    ('redforest', 'furniture'),
    ('redken', 'medicine'),
    ('redken', 'accessories'),
    ('redline', 'auto'),
    ('redline', 'electronics'),
    ('redmond', 'appliances'),
    ('redoblu', 'electronics'),
    ('redpower', 'electronics'),
    ('redragon', 'electronics'),
    ('redragon', 'accessories'),
    ('reebok', 'sport'),
    ('reebok', 'apparel'),
    ('reelsonar', 'electronics'),
    ('reelsonar', 'sport'),
    ('regalacademy', 'kids'),
    ('regatta', 'apparel'),
    ('regatta', 'accessories'),
    ('regent', 'furniture'),
    ('regentinox', 'construction'),
    ('regentinox', 'appliances'),
    ('reima', 'kids'),
    ('reima', 'apparel'),
    ('reimar', 'stationery'),
    ('reimar', 'accessories'),
    ('reinvox', 'electronics'),
    ('relaks', 'furniture'),
    ('relouis', 'accessories'),
    ('reluce', 'accessories'),
    ('reluse', 'accessories'),
    ('remain', 'apparel'),
    ('remax', 'construction'),
    ('remax', 'appliances');
```
[2024-12-05T22:22:08.011+0000] {python.py:240} INFO - Done. Returned value was: Based on the provided brands and the search queries, here are the assigned categories for each brand:

1. **redbo** - appliances
2. **redcastle** - kids, apparel
3. **redford** - furniture
4. **redforest** - furniture
5. **redken** - medicine, accessories (hair care products)
6. **redline** - auto, electronics
7. **redmond** - appliances
8. **redoblu** - electronics
9. **redpower** - electronics
10. **redragon** - electronics, accessories (gaming peripherals)
11. **reebok** - sport, apparel
12. **reelsonar** - electronics, sport (fishing gear)
13. **regalacademy** - kids
14. **regatta** - apparel, accessories (outdoor clothing)
15. **regent** - furniture
16. **regentinox** - construction, appliances (kitchenware)
17. **reima** - kids, apparel
18. **reimar** - stationery, accessories
19. **reinvox** - electronics
20. **relaks** - furniture
21. **relouis** - accessories (cosmetics)
22. **reluce** - accessories (beauty products)
23. **reluse** - accessories
24. **remain** - apparel
25. **remax** - construction, appliances (real estate services)

Now, here is the SQL INSERT statement based on the assigned categories:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('redbo', 'appliances'),
    ('redcastle', 'kids'),
    ('redcastle', 'apparel'),
    ('redford', 'furniture'),
    ('redforest', 'furniture'),
    ('redken', 'medicine'),
    ('redken', 'accessories'),
    ('redline', 'auto'),
    ('redline', 'electronics'),
    ('redmond', 'appliances'),
    ('redoblu', 'electronics'),
    ('redpower', 'electronics'),
    ('redragon', 'electronics'),
    ('redragon', 'accessories'),
    ('reebok', 'sport'),
    ('reebok', 'apparel'),
    ('reelsonar', 'electronics'),
    ('reelsonar', 'sport'),
    ('regalacademy', 'kids'),
    ('regatta', 'apparel'),
    ('regatta', 'accessories'),
    ('regent', 'furniture'),
    ('regentinox', 'construction'),
    ('regentinox', 'appliances'),
    ('reima', 'kids'),
    ('reima', 'apparel'),
    ('reimar', 'stationery'),
    ('reimar', 'accessories'),
    ('reinvox', 'electronics'),
    ('relaks', 'furniture'),
    ('relouis', 'accessories'),
    ('reluce', 'accessories'),
    ('reluse', 'accessories'),
    ('remain', 'apparel'),
    ('remax', 'construction'),
    ('remax', 'appliances');
```
[2024-12-05T22:22:08.031+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T22:22:08.032+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=call_llm, run_id=manual__2024-12-05T22:21:40.932046+00:00, execution_date=20241205T222140, start_date=20241205T222145, end_date=20241205T222208
[2024-12-05T22:22:08.054+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T22:22:08.073+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T22:22:08.076+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
