[2024-12-05T21:33:31.853+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T21:33:31.882+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:33:05.264496+00:00 [queued]>
[2024-12-05T21:33:31.889+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:33:05.264496+00:00 [queued]>
[2024-12-05T21:33:31.890+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T21:33:31.902+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): extract_sql> on 2024-12-05 21:33:05.264496+00:00
[2024-12-05T21:33:31.908+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=4557) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T21:33:31.909+0000] {standard_task_runner.py:72} INFO - Started process 4558 to run task
[2024-12-05T21:33:31.909+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'extract_sql', 'manual__2024-12-05T21:33:05.264496+00:00', '--job-id', '997', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmps1hnhxcb']
[2024-12-05T21:33:31.911+0000] {standard_task_runner.py:105} INFO - Job 997: Subtask extract_sql
[2024-12-05T21:33:31.947+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:33:05.264496+00:00 [running]> on host c7780884450d
[2024-12-05T21:33:32.007+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='extract_sql' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T21:33:05.264496+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T21:33:05.264496+00:00'
[2024-12-05T21:33:32.008+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T21:33:32.025+0000] {llm_mapping.py:187} INFO - Извлечён llm_response: Below is the mapping of the provided brands to their respective categories based on the search results:

1. **gamemax** - electronics
2. **gamerstorm** - electronics
3. **gametrix** - electronics
4. **gamma** - electronics
5. **garage** - country_yard, appliances
6. **garant** - construction
7. **garanterm** - appliances
8. **gardena** - country_yard, appliances
9. **gardenia** - country_yard
10. **gardenlux** - country_yard
11. **garmin** - electronics, accessories
12. **garnier** - medicine, cosmetics
13. **garnizon** - apparel
14. **garrett** - electronics
15. **garvalin** - kids, apparel
16. **gaspari** - sport, accessories
17. **gauss** - electronics
18. **gazpromneft** - auto, appliances
19. **g-case** - electronics, accessories
20. **g-cube** - electronics
21. **geberit** - appliances, construction
22. **geburt** - appliances
23. **gedore** - tools, construction
24. **gefest** - appliances
25. **gehwol** - medicine, accessories

Now, here is the SQL INSERT statement based on the above mappings:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('gamemax', 'electronics'),
    ('gamerstorm', 'electronics'),
    ('gametrix', 'electronics'),
    ('gamma', 'electronics'),
    ('garage', 'country_yard'),
    ('garage', 'appliances'),
    ('garant', 'construction'),
    ('garanterm', 'appliances'),
    ('gardena', 'country_yard'),
    ('gardena', 'appliances'),
    ('gardenia', 'country_yard'),
    ('gardenlux', 'country_yard'),
    ('garmin', 'electronics'),
    ('garmin', 'accessories'),
    ('garnier', 'medicine'),
    ('garnier', 'cosmetics'),
    ('garnizon', 'apparel'),
    ('garrett', 'electronics'),
    ('garvalin', 'kids'),
    ('garvalin', 'apparel'),
    ('gaspari', 'sport'),
    ('gaspari', 'accessories'),
    ('gauss', 'electronics'),
    ('gazpromneft', 'auto'),
    ('gazpromneft', 'appliances'),
    ('g-case', 'electronics'),
    ('g-case', 'accessories'),
    ('g-cube', 'electronics'),
    ('geberit', 'appliances'),
    ('geberit', 'construction'),
    ('geburt', 'appliances'),
    ('gedore', 'construction'),
    ('gefest', 'appliances'),
    ('gehwol', 'medicine'),
    ('gehwol', 'accessories');
```
[2024-12-05T21:33:32.026+0000] {llm_mapping.py:174} INFO - Извлечён SQL-код:
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('gamemax', 'electronics'),
    ('gamerstorm', 'electronics'),
    ('gametrix', 'electronics'),
    ('gamma', 'electronics'),
    ('garage', 'country_yard'),
    ('garage', 'appliances'),
    ('garant', 'construction'),
    ('garanterm', 'appliances'),
    ('gardena', 'country_yard'),
    ('gardena', 'appliances'),
    ('gardenia', 'country_yard'),
    ('gardenlux', 'country_yard'),
    ('garmin', 'electronics'),
    ('garmin', 'accessories'),
    ('garnier', 'medicine'),
    ('garnier', 'cosmetics'),
    ('garnizon', 'apparel'),
    ('garrett', 'electronics'),
    ('garvalin', 'kids'),
    ('garvalin', 'apparel'),
    ('gaspari', 'sport'),
    ('gaspari', 'accessories'),
    ('gauss', 'electronics'),
    ('gazpromneft', 'auto'),
    ('gazpromneft', 'appliances'),
    ('g-case', 'electronics'),
    ('g-case', 'accessories'),
    ('g-cube', 'electronics'),
    ('geberit', 'appliances'),
    ('geberit', 'construction'),
    ('geburt', 'appliances'),
    ('gedore', 'construction'),
    ('gefest', 'appliances'),
    ('gehwol', 'medicine'),
    ('gehwol', 'accessories');
[2024-12-05T21:33:32.027+0000] {python.py:240} INFO - Done. Returned value was: INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('gamemax', 'electronics'),
    ('gamerstorm', 'electronics'),
    ('gametrix', 'electronics'),
    ('gamma', 'electronics'),
    ('garage', 'country_yard'),
    ('garage', 'appliances'),
    ('garant', 'construction'),
    ('garanterm', 'appliances'),
    ('gardena', 'country_yard'),
    ('gardena', 'appliances'),
    ('gardenia', 'country_yard'),
    ('gardenlux', 'country_yard'),
    ('garmin', 'electronics'),
    ('garmin', 'accessories'),
    ('garnier', 'medicine'),
    ('garnier', 'cosmetics'),
    ('garnizon', 'apparel'),
    ('garrett', 'electronics'),
    ('garvalin', 'kids'),
    ('garvalin', 'apparel'),
    ('gaspari', 'sport'),
    ('gaspari', 'accessories'),
    ('gauss', 'electronics'),
    ('gazpromneft', 'auto'),
    ('gazpromneft', 'appliances'),
    ('g-case', 'electronics'),
    ('g-case', 'accessories'),
    ('g-cube', 'electronics'),
    ('geberit', 'appliances'),
    ('geberit', 'construction'),
    ('geburt', 'appliances'),
    ('gedore', 'construction'),
    ('gefest', 'appliances'),
    ('gehwol', 'medicine'),
    ('gehwol', 'accessories');
[2024-12-05T21:33:32.043+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T21:33:32.043+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=extract_sql, run_id=manual__2024-12-05T21:33:05.264496+00:00, execution_date=20241205T213305, start_date=20241205T213331, end_date=20241205T213332
[2024-12-05T21:33:32.083+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T21:33:32.101+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T21:33:32.104+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
