[2024-12-05T22:43:30.229+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T22:43:30.241+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T22:43:24.319792+00:00 [queued]>
[2024-12-05T22:43:30.248+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T22:43:24.319792+00:00 [queued]>
[2024-12-05T22:43:30.248+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T22:43:30.261+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): call_llm> on 2024-12-05 22:43:24.319792+00:00
[2024-12-05T22:43:30.267+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=8218) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T22:43:30.269+0000] {standard_task_runner.py:72} INFO - Started process 8219 to run task
[2024-12-05T22:43:30.269+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'call_llm', 'manual__2024-12-05T22:43:24.319792+00:00', '--job-id', '1782', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmp_qicxb20']
[2024-12-05T22:43:30.271+0000] {standard_task_runner.py:105} INFO - Job 1782: Subtask call_llm
[2024-12-05T22:43:30.306+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T22:43:24.319792+00:00 [running]> on host c7780884450d
[2024-12-05T22:43:30.366+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='call_llm' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T22:43:24.319792+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T22:43:24.319792+00:00'
[2024-12-05T22:43:30.367+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T22:43:30.383+0000] {llm_mapping.py:155} INFO - Извлечён return_value: {'batch': ['troyka', 'trucktec', 'true', 'truealchemy', 'trukinauki', 'trunki', 'trusardy', 'trussardi', 'trust', 'truva', 'trw', 'trx', 'tsg', 'tsubaki', 'tsv', 'tuarex', 'tubor', 'tucano', 'tuctuc', 'tuffoni', 'tuka', 'tuncmatik', 'tundra', 'tunia', 'turbo'], 'next_index': 5175}
[2024-12-05T22:43:30.384+0000] {llm_mapping.py:127} INFO - Отправка запроса к LLM.
[2024-12-05T22:43:30.813+0000] {logging_mixin.py:190} INFO - New g4f version: 0.3.8.3 (current: 0.3.8.0) | pip install -U g4f
[2024-12-05T22:43:58.272+0000] {llm_mapping.py:141} INFO - Получен ответ от LLM: Here are the assigned categories for each brand based on their products:

1. **troyka** - stationery
2. **trucktec** - auto
3. **true** - appliances, electronics
4. **truealchemy** - medicine
5. **trukinauki** - kids
6. **trunki** - kids, accessories
7. **trusardy** - apparel, accessories
8. **trussardi** - apparel, accessories
9. **trust** - electronics
10. **truva** - appliances
11. **trw** - auto
12. **trx** - fitness, sport
13. **tsg** - sport
14. **tsubaki** - cosmetics, medicine
15. **tsv** - electronics
16. **tuarex** - appliances
17. **tubor** - construction
18. **tucano** - accessories, computers
19. **tuctuc** - kids, apparel
20. **tuffoni** - furniture
21. **tuka** - appliances
22. **tuncmatik** - auto
23. **tundra** - apparel, outdoor
24. **tunia** - apparel
25. **turbo** - auto, appliances

Now, here is the SQL INSERT statement for the brand-category mapping:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('troyka', 'stationery'),
    ('trucktec', 'auto'),
    ('true', 'appliances'),
    ('true', 'electronics'),
    ('truealchemy', 'medicine'),
    ('trukinauki', 'kids'),
    ('trunki', 'kids'),
    ('trunki', 'accessories'),
    ('trusardy', 'apparel'),
    ('trusardy', 'accessories'),
    ('trussardi', 'apparel'),
    ('trussardi', 'accessories'),
    ('trust', 'electronics'),
    ('truva', 'appliances'),
    ('trw', 'auto'),
    ('trx', 'sport'),
    ('tsg', 'sport'),
    ('tsubaki', 'medicine'),
    ('tsv', 'electronics'),
    ('tuarex', 'appliances'),
    ('tubor', 'construction'),
    ('tucano', 'accessories'),
    ('tucano', 'computers'),
    ('tuctuc', 'kids'),
    ('tuctuc', 'apparel'),
    ('tuffoni', 'furniture'),
    ('tuka', 'appliances'),
    ('tuncmatik', 'auto'),
    ('tundra', 'apparel'),
    ('tundra', 'outdoor'),
    ('tunia', 'apparel'),
    ('turbo', 'auto'),
    ('turbo', 'appliances');
```
[2024-12-05T22:43:58.273+0000] {python.py:240} INFO - Done. Returned value was: Here are the assigned categories for each brand based on their products:

1. **troyka** - stationery
2. **trucktec** - auto
3. **true** - appliances, electronics
4. **truealchemy** - medicine
5. **trukinauki** - kids
6. **trunki** - kids, accessories
7. **trusardy** - apparel, accessories
8. **trussardi** - apparel, accessories
9. **trust** - electronics
10. **truva** - appliances
11. **trw** - auto
12. **trx** - fitness, sport
13. **tsg** - sport
14. **tsubaki** - cosmetics, medicine
15. **tsv** - electronics
16. **tuarex** - appliances
17. **tubor** - construction
18. **tucano** - accessories, computers
19. **tuctuc** - kids, apparel
20. **tuffoni** - furniture
21. **tuka** - appliances
22. **tuncmatik** - auto
23. **tundra** - apparel, outdoor
24. **tunia** - apparel
25. **turbo** - auto, appliances

Now, here is the SQL INSERT statement for the brand-category mapping:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('troyka', 'stationery'),
    ('trucktec', 'auto'),
    ('true', 'appliances'),
    ('true', 'electronics'),
    ('truealchemy', 'medicine'),
    ('trukinauki', 'kids'),
    ('trunki', 'kids'),
    ('trunki', 'accessories'),
    ('trusardy', 'apparel'),
    ('trusardy', 'accessories'),
    ('trussardi', 'apparel'),
    ('trussardi', 'accessories'),
    ('trust', 'electronics'),
    ('truva', 'appliances'),
    ('trw', 'auto'),
    ('trx', 'sport'),
    ('tsg', 'sport'),
    ('tsubaki', 'medicine'),
    ('tsv', 'electronics'),
    ('tuarex', 'appliances'),
    ('tubor', 'construction'),
    ('tucano', 'accessories'),
    ('tucano', 'computers'),
    ('tuctuc', 'kids'),
    ('tuctuc', 'apparel'),
    ('tuffoni', 'furniture'),
    ('tuka', 'appliances'),
    ('tuncmatik', 'auto'),
    ('tundra', 'apparel'),
    ('tundra', 'outdoor'),
    ('tunia', 'apparel'),
    ('turbo', 'auto'),
    ('turbo', 'appliances');
```
[2024-12-05T22:43:58.292+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T22:43:58.293+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=call_llm, run_id=manual__2024-12-05T22:43:24.319792+00:00, execution_date=20241205T224324, start_date=20241205T224330, end_date=20241205T224358
[2024-12-05T22:43:58.345+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T22:43:58.366+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T22:43:58.370+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
