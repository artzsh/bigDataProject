[2024-12-05T21:29:04.052+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T21:29:04.065+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:28:20.540625+00:00 [queued]>
[2024-12-05T21:29:04.073+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:28:20.540625+00:00 [queued]>
[2024-12-05T21:29:04.073+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T21:29:04.087+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): extract_sql> on 2024-12-05 21:28:20.540625+00:00
[2024-12-05T21:29:04.094+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=4312) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T21:29:04.095+0000] {standard_task_runner.py:72} INFO - Started process 4313 to run task
[2024-12-05T21:29:04.095+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'extract_sql', 'manual__2024-12-05T21:28:20.540625+00:00', '--job-id', '943', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmp5obfpgsi']
[2024-12-05T21:29:04.098+0000] {standard_task_runner.py:105} INFO - Job 943: Subtask extract_sql
[2024-12-05T21:29:04.133+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:28:20.540625+00:00 [running]> on host c7780884450d
[2024-12-05T21:29:04.195+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='extract_sql' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T21:28:20.540625+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T21:28:20.540625+00:00'
[2024-12-05T21:29:04.196+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T21:29:04.217+0000] {llm_mapping.py:187} INFO - Извлечён llm_response: Here are the assigned categories for each brand based on the search results:

1. **evrika** - appliances
2. **evriki** - apparel
3. **evrodetal** - construction
4. **ewa** - apparel
5. **ewigstein** - accessories
6. **ewt** - electronics
7. **exclusive** - apparel, accessories
8. **exide** - auto
9. **exnihilo** - accessories
10. **exogini** - apparel
11. **exost** - auto
12. **expression** - stationery
13. **expromt** - stationery
14. **exxtasy** - apparel
15. **ezetil** - appliances
16. **ezviz** - electronics
17. **fa** - cosmetics (not in predefined categories, but closest could be accessories)
18. **faans** - apparel
19. **faber** - stationery
20. **fabretti** - accessories
21. **fabriano** - stationery
22. **fabrikakarteks** - apparel
23. **fabrikakomiksov** - stationery
24. **fabrikamir** - apparel
25. **face** - cosmetics (not in predefined categories, but closest could be accessories)

Now, I'll generate the SQL INSERT statement:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('evrika', 'appliances'),
    ('evriki', 'apparel'),
    ('evrodetal', 'construction'),
    ('ewa', 'apparel'),
    ('ewigstein', 'accessories'),
    ('ewt', 'electronics'),
    ('exclusive', 'apparel'),
    ('exclusive', 'accessories'),
    ('exide', 'auto'),
    ('exnihilo', 'accessories'),
    ('exogini', 'apparel'),
    ('exost', 'auto'),
    ('expression', 'stationery'),
    ('expromt', 'stationery'),
    ('exxtasy', 'apparel'),
    ('ezetil', 'appliances'),
    ('ezviz', 'electronics'),
    ('fa', 'accessories'),
    ('faans', 'apparel'),
    ('faber', 'stationery'),
    ('fabretti', 'accessories'),
    ('fabriano', 'stationery'),
    ('fabrikakarteks', 'apparel'),
    ('fabrikakomiksov', 'stationery'),
    ('fabrikamir', 'apparel'),
    ('face', 'accessories');
``` 

This SQL statement can be executed to insert the brand-category mappings into the database.
[2024-12-05T21:29:04.218+0000] {llm_mapping.py:174} INFO - Извлечён SQL-код:
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('evrika', 'appliances'),
    ('evriki', 'apparel'),
    ('evrodetal', 'construction'),
    ('ewa', 'apparel'),
    ('ewigstein', 'accessories'),
    ('ewt', 'electronics'),
    ('exclusive', 'apparel'),
    ('exclusive', 'accessories'),
    ('exide', 'auto'),
    ('exnihilo', 'accessories'),
    ('exogini', 'apparel'),
    ('exost', 'auto'),
    ('expression', 'stationery'),
    ('expromt', 'stationery'),
    ('exxtasy', 'apparel'),
    ('ezetil', 'appliances'),
    ('ezviz', 'electronics'),
    ('fa', 'accessories'),
    ('faans', 'apparel'),
    ('faber', 'stationery'),
    ('fabretti', 'accessories'),
    ('fabriano', 'stationery'),
    ('fabrikakarteks', 'apparel'),
    ('fabrikakomiksov', 'stationery'),
    ('fabrikamir', 'apparel'),
    ('face', 'accessories');
[2024-12-05T21:29:04.218+0000] {python.py:240} INFO - Done. Returned value was: INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('evrika', 'appliances'),
    ('evriki', 'apparel'),
    ('evrodetal', 'construction'),
    ('ewa', 'apparel'),
    ('ewigstein', 'accessories'),
    ('ewt', 'electronics'),
    ('exclusive', 'apparel'),
    ('exclusive', 'accessories'),
    ('exide', 'auto'),
    ('exnihilo', 'accessories'),
    ('exogini', 'apparel'),
    ('exost', 'auto'),
    ('expression', 'stationery'),
    ('expromt', 'stationery'),
    ('exxtasy', 'apparel'),
    ('ezetil', 'appliances'),
    ('ezviz', 'electronics'),
    ('fa', 'accessories'),
    ('faans', 'apparel'),
    ('faber', 'stationery'),
    ('fabretti', 'accessories'),
    ('fabriano', 'stationery'),
    ('fabrikakarteks', 'apparel'),
    ('fabrikakomiksov', 'stationery'),
    ('fabrikamir', 'apparel'),
    ('face', 'accessories');
[2024-12-05T21:29:04.237+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T21:29:04.238+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=extract_sql, run_id=manual__2024-12-05T21:28:20.540625+00:00, execution_date=20241205T212820, start_date=20241205T212904, end_date=20241205T212904
[2024-12-05T21:29:04.270+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T21:29:04.290+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T21:29:04.294+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
