[2024-12-05T22:27:41.430+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T22:27:41.444+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T22:27:36.429229+00:00 [queued]>
[2024-12-05T22:27:41.450+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T22:27:36.429229+00:00 [queued]>
[2024-12-05T22:27:41.451+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T22:27:41.462+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): call_llm> on 2024-12-05 22:27:36.429229+00:00
[2024-12-05T22:27:41.468+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=7443) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T22:27:41.469+0000] {standard_task_runner.py:72} INFO - Started process 7444 to run task
[2024-12-05T22:27:41.469+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'call_llm', 'manual__2024-12-05T22:27:36.429229+00:00', '--job-id', '1620', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmp_npvs6kg']
[2024-12-05T22:27:41.471+0000] {standard_task_runner.py:105} INFO - Job 1620: Subtask call_llm
[2024-12-05T22:27:41.503+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T22:27:36.429229+00:00 [running]> on host c7780884450d
[2024-12-05T22:27:41.560+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='call_llm' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T22:27:36.429229+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T22:27:36.429229+00:00'
[2024-12-05T22:27:41.561+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T22:27:41.578+0000] {llm_mapping.py:155} INFO - Извлечён return_value: {'batch': ['scorpion', 'scott', 'scovo', 'scoyco', 'screecherswild', 'scruff-a-luvs', 'scythe', 'sdt', 'sea-doo', 'seagate', 'seakoo', 'sealy', 'seasonic', 'sebamed', 'secretgourmet', 'secretkey', 'sede', 'seealt', 'seed', 'sega', 'segotep', 'segura', 'segway', 'seicane', 'seiko'], 'next_index': 4500}
[2024-12-05T22:27:41.579+0000] {llm_mapping.py:127} INFO - Отправка запроса к LLM.
[2024-12-05T22:27:41.987+0000] {logging_mixin.py:190} INFO - New g4f version: 0.3.8.3 (current: 0.3.8.0) | pip install -U g4f
[2024-12-05T22:28:00.410+0000] {llm_mapping.py:141} INFO - Получен ответ от LLM: Here’s the mapping of the brands to their respective categories based on the search results:

1. **scorpion** - apparel, accessories
2. **scott** - apparel, sport
3. **scovo** - electronics
4. **scoyco** - apparel, accessories, auto
5. **screecherswild** - kids, sport
6. **scruff-a-luvs** - kids, accessories
7. **scythe** - computers, electronics
8. **sdt** - electronics
9. **sea-doo** - auto, sport
10. **seagate** - computers, electronics
11. **seakoo** - electronics
12. **sealy** - furniture
13. **seasonic** - electronics
14. **sebamed** - medicine
15. **secretgourmet** - country_yard, food
16. **secretkey** - medicine, accessories
17. **sede** - electronics
18. **seealt** - electronics
19. **seed** - country_yard
20. **sega** - electronics, kids
21. **segotep** - electronics
22. **segura** - auto
23. **segway** - auto, electronics
24. **seicane** - electronics
25. **seiko** - accessories, electronics

Now, here’s the SQL INSERT statement for the brand-category mapping:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('scorpion', 'apparel'),
    ('scorpion', 'accessories'),
    ('scott', 'apparel'),
    ('scott', 'sport'),
    ('scovo', 'electronics'),
    ('scoyco', 'apparel'),
    ('scoyco', 'accessories'),
    ('scoyco', 'auto'),
    ('screecherswild', 'kids'),
    ('screecherswild', 'sport'),
    ('scruff-a-luvs', 'kids'),
    ('scruff-a-luvs', 'accessories'),
    ('scythe', 'computers'),
    ('scythe', 'electronics'),
    ('sdt', 'electronics'),
    ('sea-doo', 'auto'),
    ('sea-doo', 'sport'),
    ('seagate', 'computers'),
    ('seagate', 'electronics'),
    ('seakoo', 'electronics'),
    ('sealy', 'furniture'),
    ('seasonic', 'electronics'),
    ('sebamed', 'medicine'),
    ('secretgourmet', 'country_yard'),
    ('secretgourmet', 'food'),
    ('secretkey', 'medicine'),
    ('secretkey', 'accessories'),
    ('sede', 'electronics'),
    ('seealt', 'electronics'),
    ('seed', 'country_yard'),
    ('sega', 'electronics'),
    ('sega', 'kids'),
    ('segotep', 'electronics'),
    ('segura', 'auto'),
    ('segway', 'auto'),
    ('segway', 'electronics'),
    ('seicane', 'electronics'),
    ('seiko', 'accessories'),
    ('seiko', 'electronics');
```
[2024-12-05T22:28:00.411+0000] {python.py:240} INFO - Done. Returned value was: Here’s the mapping of the brands to their respective categories based on the search results:

1. **scorpion** - apparel, accessories
2. **scott** - apparel, sport
3. **scovo** - electronics
4. **scoyco** - apparel, accessories, auto
5. **screecherswild** - kids, sport
6. **scruff-a-luvs** - kids, accessories
7. **scythe** - computers, electronics
8. **sdt** - electronics
9. **sea-doo** - auto, sport
10. **seagate** - computers, electronics
11. **seakoo** - electronics
12. **sealy** - furniture
13. **seasonic** - electronics
14. **sebamed** - medicine
15. **secretgourmet** - country_yard, food
16. **secretkey** - medicine, accessories
17. **sede** - electronics
18. **seealt** - electronics
19. **seed** - country_yard
20. **sega** - electronics, kids
21. **segotep** - electronics
22. **segura** - auto
23. **segway** - auto, electronics
24. **seicane** - electronics
25. **seiko** - accessories, electronics

Now, here’s the SQL INSERT statement for the brand-category mapping:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('scorpion', 'apparel'),
    ('scorpion', 'accessories'),
    ('scott', 'apparel'),
    ('scott', 'sport'),
    ('scovo', 'electronics'),
    ('scoyco', 'apparel'),
    ('scoyco', 'accessories'),
    ('scoyco', 'auto'),
    ('screecherswild', 'kids'),
    ('screecherswild', 'sport'),
    ('scruff-a-luvs', 'kids'),
    ('scruff-a-luvs', 'accessories'),
    ('scythe', 'computers'),
    ('scythe', 'electronics'),
    ('sdt', 'electronics'),
    ('sea-doo', 'auto'),
    ('sea-doo', 'sport'),
    ('seagate', 'computers'),
    ('seagate', 'electronics'),
    ('seakoo', 'electronics'),
    ('sealy', 'furniture'),
    ('seasonic', 'electronics'),
    ('sebamed', 'medicine'),
    ('secretgourmet', 'country_yard'),
    ('secretgourmet', 'food'),
    ('secretkey', 'medicine'),
    ('secretkey', 'accessories'),
    ('sede', 'electronics'),
    ('seealt', 'electronics'),
    ('seed', 'country_yard'),
    ('sega', 'electronics'),
    ('sega', 'kids'),
    ('segotep', 'electronics'),
    ('segura', 'auto'),
    ('segway', 'auto'),
    ('segway', 'electronics'),
    ('seicane', 'electronics'),
    ('seiko', 'accessories'),
    ('seiko', 'electronics');
```
[2024-12-05T22:28:00.428+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T22:28:00.429+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=call_llm, run_id=manual__2024-12-05T22:27:36.429229+00:00, execution_date=20241205T222736, start_date=20241205T222741, end_date=20241205T222800
[2024-12-05T22:28:00.467+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T22:28:00.484+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T22:28:00.487+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
