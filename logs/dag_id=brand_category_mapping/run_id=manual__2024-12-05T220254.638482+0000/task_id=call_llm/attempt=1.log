[2024-12-05T22:02:59.861+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T22:02:59.873+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T22:02:54.638482+00:00 [queued]>
[2024-12-05T22:02:59.880+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T22:02:54.638482+00:00 [queued]>
[2024-12-05T22:02:59.881+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T22:02:59.893+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): call_llm> on 2024-12-05 22:02:54.638482+00:00
[2024-12-05T22:02:59.899+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=6113) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T22:02:59.901+0000] {standard_task_runner.py:72} INFO - Started process 6114 to run task
[2024-12-05T22:02:59.901+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'call_llm', 'manual__2024-12-05T22:02:54.638482+00:00', '--job-id', '1332', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmpp5c2cdm7']
[2024-12-05T22:02:59.903+0000] {standard_task_runner.py:105} INFO - Job 1332: Subtask call_llm
[2024-12-05T22:02:59.940+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T22:02:54.638482+00:00 [running]> on host c7780884450d
[2024-12-05T22:03:00.004+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='call_llm' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T22:02:54.638482+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T22:02:54.638482+00:00'
[2024-12-05T22:03:00.005+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T22:03:00.024+0000] {llm_mapping.py:155} INFO - Извлечён return_value: {'batch': ['metallicgear', 'metoo', 'metoyou', 'metrot', 'metsui', 'mexx', 'meyle', 'meze', 'mezizdat', 'mgaentertainment', 'mgaintertainment', 'mhp', 'mibb', 'mica', 'micallef', 'michaelkors', 'michelin', 'micio', 'micmax', 'micoe', 'micro', 'microids', 'microlab', 'micromax', 'micron'], 'next_index': 3300}
[2024-12-05T22:03:00.024+0000] {llm_mapping.py:127} INFO - Отправка запроса к LLM.
[2024-12-05T22:03:00.448+0000] {logging_mixin.py:190} INFO - New g4f version: 0.3.8.3 (current: 0.3.8.0) | pip install -U g4f
[2024-12-05T22:03:18.554+0000] {llm_mapping.py:141} INFO - Получен ответ от LLM: Here are the brand-category mappings based on the searches performed:

1. **metallicgear**: electronics
2. **metoo**: kids, apparel
3. **metoyou**: kids, apparel
4. **metrot**: apparel
5. **metsui**: appliances
6. **mexx**: apparel, accessories
7. **meyle**: auto
8. **meze**: accessories, electronics
9. **mezizdat**: stationery
10. **mgaentertainment**: kids
11. **mgaintertainment**: kids
12. **mhp**: auto
13. **mibb**: kids
14. **mica**: stationery
15. **micallef**: accessories
16. **michaelkors**: apparel, accessories
17. **michelin**: auto
18. **micio**: electronics
19. **micmax**: electronics
20. **micoe**: appliances
21. **micro**: computers, electronics
22. **microids**: electronics
23. **microlab**: electronics
24. **micromax**: electronics, computers
25. **micron**: computers, electronics

Now, here is the SQL INSERT statement:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('metallicgear', 'electronics'),
    ('metoo', 'kids'),
    ('metoo', 'apparel'),
    ('metoyou', 'kids'),
    ('metoyou', 'apparel'),
    ('metrot', 'apparel'),
    ('metsui', 'appliances'),
    ('mexx', 'apparel'),
    ('mexx', 'accessories'),
    ('meyle', 'auto'),
    ('meze', 'accessories'),
    ('meze', 'electronics'),
    ('mezizdat', 'stationery'),
    ('mgaentertainment', 'kids'),
    ('mgaintertainment', 'kids'),
    ('mhp', 'auto'),
    ('mibb', 'kids'),
    ('mica', 'stationery'),
    ('micallef', 'accessories'),
    ('michaelkors', 'apparel'),
    ('michaelkors', 'accessories'),
    ('michelin', 'auto'),
    ('micio', 'electronics'),
    ('micmax', 'electronics'),
    ('micoe', 'appliances'),
    ('micro', 'computers'),
    ('micro', 'electronics'),
    ('microids', 'electronics'),
    ('microlab', 'electronics'),
    ('micromax', 'electronics'),
    ('micromax', 'computers'),
    ('micron', 'computers'),
    ('micron', 'electronics');
```
[2024-12-05T22:03:18.555+0000] {python.py:240} INFO - Done. Returned value was: Here are the brand-category mappings based on the searches performed:

1. **metallicgear**: electronics
2. **metoo**: kids, apparel
3. **metoyou**: kids, apparel
4. **metrot**: apparel
5. **metsui**: appliances
6. **mexx**: apparel, accessories
7. **meyle**: auto
8. **meze**: accessories, electronics
9. **mezizdat**: stationery
10. **mgaentertainment**: kids
11. **mgaintertainment**: kids
12. **mhp**: auto
13. **mibb**: kids
14. **mica**: stationery
15. **micallef**: accessories
16. **michaelkors**: apparel, accessories
17. **michelin**: auto
18. **micio**: electronics
19. **micmax**: electronics
20. **micoe**: appliances
21. **micro**: computers, electronics
22. **microids**: electronics
23. **microlab**: electronics
24. **micromax**: electronics, computers
25. **micron**: computers, electronics

Now, here is the SQL INSERT statement:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('metallicgear', 'electronics'),
    ('metoo', 'kids'),
    ('metoo', 'apparel'),
    ('metoyou', 'kids'),
    ('metoyou', 'apparel'),
    ('metrot', 'apparel'),
    ('metsui', 'appliances'),
    ('mexx', 'apparel'),
    ('mexx', 'accessories'),
    ('meyle', 'auto'),
    ('meze', 'accessories'),
    ('meze', 'electronics'),
    ('mezizdat', 'stationery'),
    ('mgaentertainment', 'kids'),
    ('mgaintertainment', 'kids'),
    ('mhp', 'auto'),
    ('mibb', 'kids'),
    ('mica', 'stationery'),
    ('micallef', 'accessories'),
    ('michaelkors', 'apparel'),
    ('michaelkors', 'accessories'),
    ('michelin', 'auto'),
    ('micio', 'electronics'),
    ('micmax', 'electronics'),
    ('micoe', 'appliances'),
    ('micro', 'computers'),
    ('micro', 'electronics'),
    ('microids', 'electronics'),
    ('microlab', 'electronics'),
    ('micromax', 'electronics'),
    ('micromax', 'computers'),
    ('micron', 'computers'),
    ('micron', 'electronics');
```
[2024-12-05T22:03:18.578+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T22:03:18.578+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=call_llm, run_id=manual__2024-12-05T22:02:54.638482+00:00, execution_date=20241205T220254, start_date=20241205T220259, end_date=20241205T220318
[2024-12-05T22:03:18.638+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T22:03:18.664+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T22:03:18.668+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
