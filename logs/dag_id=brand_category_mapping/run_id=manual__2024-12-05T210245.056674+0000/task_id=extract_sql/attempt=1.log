[2024-12-05T21:03:09.998+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T21:03:10.013+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:02:45.056674+00:00 [queued]>
[2024-12-05T21:03:10.020+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:02:45.056674+00:00 [queued]>
[2024-12-05T21:03:10.021+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T21:03:10.034+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): extract_sql> on 2024-12-05 21:02:45.056674+00:00
[2024-12-05T21:03:10.041+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=2915) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T21:03:10.042+0000] {standard_task_runner.py:72} INFO - Started process 2916 to run task
[2024-12-05T21:03:10.042+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'extract_sql', 'manual__2024-12-05T21:02:45.056674+00:00', '--job-id', '643', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmp3ytdzmoh']
[2024-12-05T21:03:10.044+0000] {standard_task_runner.py:105} INFO - Job 643: Subtask extract_sql
[2024-12-05T21:03:10.079+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:02:45.056674+00:00 [running]> on host c7780884450d
[2024-12-05T21:03:10.148+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='extract_sql' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T21:02:45.056674+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T21:02:45.056674+00:00'
[2024-12-05T21:03:10.149+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T21:03:10.168+0000] {llm_mapping.py:187} INFO - Извлечён llm_response: Here are the assigned categories for each brand based on the search results:

1. **atlantmf** - appliances
2. **atlas** - construction
3. **atmor** - appliances
4. **atmosphera** - furniture, home decor
5. **atoll** - appliances, electronics
6. **atomic** - electronics
7. **aton** - electronics
8. **a-toys** - kids
9. **atrai** - electronics
10. **ats** - electronics
11. **attar** - accessories
12. **attikus** - apparel
13. **attribute** - electronics
14. **audac** - electronics
15. **audi** - auto, electronics
16. **audio-technica** - electronics
17. **audiotop** - electronics
18. **audison** - electronics
19. **aukia** - electronics
20. **aula** - electronics
21. **auldey** - kids
22. **aura** - electronics
23. **auratic** - electronics
24. **aurora** - electronics
25. **ausini** - kids

Now, here is the SQL INSERT statement based on the assigned categories:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('atlantmf', 'appliances'),
    ('atlas', 'construction'),
    ('atmor', 'appliances'),
    ('atmosphera', 'furniture'),
    ('atmosphera', 'home decor'),
    ('atoll', 'appliances'),
    ('atoll', 'electronics'),
    ('atomic', 'electronics'),
    ('aton', 'electronics'),
    ('a-toys', 'kids'),
    ('atrai', 'electronics'),
    ('ats', 'electronics'),
    ('attar', 'accessories'),
    ('attikus', 'apparel'),
    ('attribute', 'electronics'),
    ('audac', 'electronics'),
    ('audi', 'auto'),
    ('audi', 'electronics'),
    ('audio-technica', 'electronics'),
    ('audiotop', 'electronics'),
    ('audison', 'electronics'),
    ('aukia', 'electronics'),
    ('aula', 'electronics'),
    ('auldey', 'kids'),
    ('aura', 'electronics'),
    ('auratic', 'electronics'),
    ('aurora', 'electronics'),
    ('ausini', 'kids');
```
[2024-12-05T21:03:10.169+0000] {llm_mapping.py:174} INFO - Извлечён SQL-код:
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('atlantmf', 'appliances'),
    ('atlas', 'construction'),
    ('atmor', 'appliances'),
    ('atmosphera', 'furniture'),
    ('atmosphera', 'home decor'),
    ('atoll', 'appliances'),
    ('atoll', 'electronics'),
    ('atomic', 'electronics'),
    ('aton', 'electronics'),
    ('a-toys', 'kids'),
    ('atrai', 'electronics'),
    ('ats', 'electronics'),
    ('attar', 'accessories'),
    ('attikus', 'apparel'),
    ('attribute', 'electronics'),
    ('audac', 'electronics'),
    ('audi', 'auto'),
    ('audi', 'electronics'),
    ('audio-technica', 'electronics'),
    ('audiotop', 'electronics'),
    ('audison', 'electronics'),
    ('aukia', 'electronics'),
    ('aula', 'electronics'),
    ('auldey', 'kids'),
    ('aura', 'electronics'),
    ('auratic', 'electronics'),
    ('aurora', 'electronics'),
    ('ausini', 'kids');
[2024-12-05T21:03:10.169+0000] {python.py:240} INFO - Done. Returned value was: INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('atlantmf', 'appliances'),
    ('atlas', 'construction'),
    ('atmor', 'appliances'),
    ('atmosphera', 'furniture'),
    ('atmosphera', 'home decor'),
    ('atoll', 'appliances'),
    ('atoll', 'electronics'),
    ('atomic', 'electronics'),
    ('aton', 'electronics'),
    ('a-toys', 'kids'),
    ('atrai', 'electronics'),
    ('ats', 'electronics'),
    ('attar', 'accessories'),
    ('attikus', 'apparel'),
    ('attribute', 'electronics'),
    ('audac', 'electronics'),
    ('audi', 'auto'),
    ('audi', 'electronics'),
    ('audio-technica', 'electronics'),
    ('audiotop', 'electronics'),
    ('audison', 'electronics'),
    ('aukia', 'electronics'),
    ('aula', 'electronics'),
    ('auldey', 'kids'),
    ('aura', 'electronics'),
    ('auratic', 'electronics'),
    ('aurora', 'electronics'),
    ('ausini', 'kids');
[2024-12-05T21:03:10.187+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T21:03:10.188+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=extract_sql, run_id=manual__2024-12-05T21:02:45.056674+00:00, execution_date=20241205T210245, start_date=20241205T210310, end_date=20241205T210310
[2024-12-05T21:03:10.216+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T21:03:10.235+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T21:03:10.238+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
