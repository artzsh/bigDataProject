[2024-12-05T22:44:09.491+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T22:44:09.504+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T22:44:03.707457+00:00 [queued]>
[2024-12-05T22:44:09.511+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T22:44:03.707457+00:00 [queued]>
[2024-12-05T22:44:09.512+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T22:44:09.529+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): call_llm> on 2024-12-05 22:44:03.707457+00:00
[2024-12-05T22:44:09.536+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=8246) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T22:44:09.537+0000] {standard_task_runner.py:72} INFO - Started process 8247 to run task
[2024-12-05T22:44:09.537+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'call_llm', 'manual__2024-12-05T22:44:03.707457+00:00', '--job-id', '1788', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmp309r24pb']
[2024-12-05T22:44:09.539+0000] {standard_task_runner.py:105} INFO - Job 1788: Subtask call_llm
[2024-12-05T22:44:09.578+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T22:44:03.707457+00:00 [running]> on host c7780884450d
[2024-12-05T22:44:09.649+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='call_llm' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T22:44:03.707457+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T22:44:03.707457+00:00'
[2024-12-05T22:44:09.650+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T22:44:09.667+0000] {llm_mapping.py:155} INFO - Извлечён return_value: {'batch': ['turboair', 'turbosound', 'turtle', 'turtles', 'tutis', 'tutti', 'tutu', 'tvs', 'tv-shop', 'twinkly', 'twins', 'twistclimbingcar', 'twistypetz', 'ty', 'tyc', 'tyent', 'tyr', 'tyrex', 'tytan', 'ub', 'ubear', 'ubiquiti', 'ubisoft', 'ubtech', 'ugears'], 'next_index': 5200}
[2024-12-05T22:44:09.668+0000] {llm_mapping.py:127} INFO - Отправка запроса к LLM.
[2024-12-05T22:44:10.091+0000] {logging_mixin.py:190} INFO - New g4f version: 0.3.8.3 (current: 0.3.8.0) | pip install -U g4f
[2024-12-05T22:44:27.892+0000] {llm_mapping.py:141} INFO - Получен ответ от LLM: Based on the brands provided, here are the assigned categories after performing the necessary searches and analysis:

1. **turboair** - appliances
2. **turbosound** - electronics
3. **turtle** - kids, accessories
4. **turtles** - kids, accessories
5. **tutis** - kids, apparel
6. **tutti** - kids, accessories
7. **tutu** - kids, apparel
8. **tvs** - electronics
9. **tv-shop** - electronics
10. **twinkly** - electronics
11. **twins** - kids, apparel
12. **twistclimbingcar** - kids, toys
13. **twistypetz** - kids, toys
14. **ty** - kids, toys, accessories
15. **tyc** - auto, electronics
16. **tyent** - appliances, electronics
17. **tyr** - sport, apparel
18. **tyrex** - auto
19. **tytan** - construction, appliances
20. **ub** - electronics
21. **ubear** - kids, toys
22. **ubiquiti** - electronics
23. **ubisoft** - electronics, computers
24. **ubtech** - electronics, toys
25. **ugears** - kids, toys, construction

Now, here is the SQL INSERT statement based on the assigned categories:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('turboair', 'appliances'),
    ('turbosound', 'electronics'),
    ('turtle', 'kids'),
    ('turtle', 'accessories'),
    ('turtles', 'kids'),
    ('turtles', 'accessories'),
    ('tutis', 'kids'),
    ('tutis', 'apparel'),
    ('tutti', 'kids'),
    ('tutti', 'accessories'),
    ('tutu', 'kids'),
    ('tutu', 'apparel'),
    ('tvs', 'electronics'),
    ('tv-shop', 'electronics'),
    ('twinkly', 'electronics'),
    ('twins', 'kids'),
    ('twins', 'apparel'),
    ('twistclimbingcar', 'kids'),
    ('twistclimbingcar', 'toys'),
    ('twistypetz', 'kids'),
    ('twistypetz', 'toys'),
    ('ty', 'kids'),
    ('ty', 'toys'),
    ('ty', 'accessories'),
    ('tyc', 'auto'),
    ('tyc', 'electronics'),
    ('tyent', 'appliances'),
    ('tyent', 'electronics'),
    ('tyr', 'sport'),
    ('tyr', 'apparel'),
    ('tyrex', 'auto'),
    ('tytan', 'construction'),
    ('tytan', 'appliances'),
    ('ub', 'electronics'),
    ('ubear', 'kids'),
    ('ubear', 'toys'),
    ('ubiquiti', 'electronics'),
    ('ubisoft', 'electronics'),
    ('ubisoft', 'computers'),
    ('ubtech', 'electronics'),
    ('ubtech', 'toys'),
    ('ugears', 'kids'),
    ('ugears', 'toys'),
    ('ugears', 'construction');
```
[2024-12-05T22:44:27.893+0000] {python.py:240} INFO - Done. Returned value was: Based on the brands provided, here are the assigned categories after performing the necessary searches and analysis:

1. **turboair** - appliances
2. **turbosound** - electronics
3. **turtle** - kids, accessories
4. **turtles** - kids, accessories
5. **tutis** - kids, apparel
6. **tutti** - kids, accessories
7. **tutu** - kids, apparel
8. **tvs** - electronics
9. **tv-shop** - electronics
10. **twinkly** - electronics
11. **twins** - kids, apparel
12. **twistclimbingcar** - kids, toys
13. **twistypetz** - kids, toys
14. **ty** - kids, toys, accessories
15. **tyc** - auto, electronics
16. **tyent** - appliances, electronics
17. **tyr** - sport, apparel
18. **tyrex** - auto
19. **tytan** - construction, appliances
20. **ub** - electronics
21. **ubear** - kids, toys
22. **ubiquiti** - electronics
23. **ubisoft** - electronics, computers
24. **ubtech** - electronics, toys
25. **ugears** - kids, toys, construction

Now, here is the SQL INSERT statement based on the assigned categories:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('turboair', 'appliances'),
    ('turbosound', 'electronics'),
    ('turtle', 'kids'),
    ('turtle', 'accessories'),
    ('turtles', 'kids'),
    ('turtles', 'accessories'),
    ('tutis', 'kids'),
    ('tutis', 'apparel'),
    ('tutti', 'kids'),
    ('tutti', 'accessories'),
    ('tutu', 'kids'),
    ('tutu', 'apparel'),
    ('tvs', 'electronics'),
    ('tv-shop', 'electronics'),
    ('twinkly', 'electronics'),
    ('twins', 'kids'),
    ('twins', 'apparel'),
    ('twistclimbingcar', 'kids'),
    ('twistclimbingcar', 'toys'),
    ('twistypetz', 'kids'),
    ('twistypetz', 'toys'),
    ('ty', 'kids'),
    ('ty', 'toys'),
    ('ty', 'accessories'),
    ('tyc', 'auto'),
    ('tyc', 'electronics'),
    ('tyent', 'appliances'),
    ('tyent', 'electronics'),
    ('tyr', 'sport'),
    ('tyr', 'apparel'),
    ('tyrex', 'auto'),
    ('tytan', 'construction'),
    ('tytan', 'appliances'),
    ('ub', 'electronics'),
    ('ubear', 'kids'),
    ('ubear', 'toys'),
    ('ubiquiti', 'electronics'),
    ('ubisoft', 'electronics'),
    ('ubisoft', 'computers'),
    ('ubtech', 'electronics'),
    ('ubtech', 'toys'),
    ('ugears', 'kids'),
    ('ugears', 'toys'),
    ('ugears', 'construction');
```
[2024-12-05T22:44:27.913+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T22:44:27.913+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=call_llm, run_id=manual__2024-12-05T22:44:03.707457+00:00, execution_date=20241205T224403, start_date=20241205T224409, end_date=20241205T224427
[2024-12-05T22:44:27.933+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T22:44:27.953+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T22:44:27.956+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
