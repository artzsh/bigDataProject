[2024-12-05T22:47:57.184+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T22:47:57.196+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T22:47:52.197420+00:00 [queued]>
[2024-12-05T22:47:57.202+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T22:47:52.197420+00:00 [queued]>
[2024-12-05T22:47:57.203+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T22:47:57.215+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): call_llm> on 2024-12-05 22:47:52.197420+00:00
[2024-12-05T22:47:57.221+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=8463) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T22:47:57.222+0000] {standard_task_runner.py:72} INFO - Started process 8464 to run task
[2024-12-05T22:47:57.222+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'call_llm', 'manual__2024-12-05T22:47:52.197420+00:00', '--job-id', '1836', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmppcqezqh7']
[2024-12-05T22:47:57.224+0000] {standard_task_runner.py:105} INFO - Job 1836: Subtask call_llm
[2024-12-05T22:47:57.261+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T22:47:52.197420+00:00 [running]> on host c7780884450d
[2024-12-05T22:47:57.334+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='call_llm' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T22:47:52.197420+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T22:47:52.197420+00:00'
[2024-12-05T22:47:57.335+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T22:47:57.354+0000] {llm_mapping.py:155} INFO - Извлечён return_value: {'batch': ['vladitoys', 'vlk', 'vmgconsultancy', 'vmv', 'vobix', 'voda', 'vogue', 'voin', 'vokter', 'vokul', 'volcano', 'volcok', 'volkl', 'volta', 'voltajr', 'voltman', 'voltmaster', 'voondo', 'vorson', 'vortex', 'vossen', 'vouni', 'vov', 'vox', 'voyager'], 'next_index': 5400}
[2024-12-05T22:47:57.354+0000] {llm_mapping.py:127} INFO - Отправка запроса к LLM.
[2024-12-05T22:47:57.769+0000] {logging_mixin.py:190} INFO - New g4f version: 0.3.8.3 (current: 0.3.8.0) | pip install -U g4f
[2024-12-05T22:48:14.835+0000] {llm_mapping.py:141} INFO - Получен ответ от LLM: Here’s the mapping of the brands to their respective categories based on the search results:

1. **vladitoys** - kids
2. **vlk** - sport
3. **vmgconsultancy** - (no specific category found, assign: accessories)
4. **vmv** - (no specific category found, assign: apparel)
5. **vobix** - (no specific category found, assign: electronics)
6. **voda** - (no specific category found, assign: appliances)
7. **vogue** - apparel, accessories
8. **voin** - (no specific category found, assign: apparel)
9. **vokter** - (no specific category found, assign: medicine)
10. **vokul** - sport, accessories
11. **volcano** - (no specific category found, assign: appliances)
12. **volcok** - (no specific category found, assign: construction)
13. **volkl** - sport
14. **volta** - electronics
15. **voltajr** - (no specific category found, assign: electronics)
16. **voltman** - (no specific category found, assign: electronics)
17. **voltmaster** - (no specific category found, assign: electronics)
18. **voondo** - (no specific category found, assign: electronics)
19. **vorson** - (no specific category found, assign: appliances)
20. **vortex** - electronics
21. **vossen** - accessories
22. **vouni** - (no specific category found, assign: accessories)
23. **vov** - (no specific category found, assign: electronics)
24. **vox** - electronics
25. **voyager** - (no specific category found, assign: auto)

Now, here’s the SQL INSERT statement based on the assigned categories:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('vladitoys', 'kids'),
    ('vlk', 'sport'),
    ('vmgconsultancy', 'accessories'),
    ('vmv', 'apparel'),
    ('vobix', 'electronics'),
    ('voda', 'appliances'),
    ('vogue', 'apparel'),
    ('vogue', 'accessories'),
    ('voin', 'apparel'),
    ('vokter', 'medicine'),
    ('vokul', 'sport'),
    ('vokul', 'accessories'),
    ('volcano', 'appliances'),
    ('volcok', 'construction'),
    ('volkl', 'sport'),
    ('volta', 'electronics'),
    ('voltajr', 'electronics'),
    ('voltman', 'electronics'),
    ('voltmaster', 'electronics'),
    ('voondo', 'electronics'),
    ('vorson', 'appliances'),
    ('vortex', 'electronics'),
    ('vossen', 'accessories'),
    ('vouni', 'accessories'),
    ('vov', 'electronics'),
    ('vox', 'electronics'),
    ('voyager', 'auto');
```
[2024-12-05T22:48:14.835+0000] {python.py:240} INFO - Done. Returned value was: Here’s the mapping of the brands to their respective categories based on the search results:

1. **vladitoys** - kids
2. **vlk** - sport
3. **vmgconsultancy** - (no specific category found, assign: accessories)
4. **vmv** - (no specific category found, assign: apparel)
5. **vobix** - (no specific category found, assign: electronics)
6. **voda** - (no specific category found, assign: appliances)
7. **vogue** - apparel, accessories
8. **voin** - (no specific category found, assign: apparel)
9. **vokter** - (no specific category found, assign: medicine)
10. **vokul** - sport, accessories
11. **volcano** - (no specific category found, assign: appliances)
12. **volcok** - (no specific category found, assign: construction)
13. **volkl** - sport
14. **volta** - electronics
15. **voltajr** - (no specific category found, assign: electronics)
16. **voltman** - (no specific category found, assign: electronics)
17. **voltmaster** - (no specific category found, assign: electronics)
18. **voondo** - (no specific category found, assign: electronics)
19. **vorson** - (no specific category found, assign: appliances)
20. **vortex** - electronics
21. **vossen** - accessories
22. **vouni** - (no specific category found, assign: accessories)
23. **vov** - (no specific category found, assign: electronics)
24. **vox** - electronics
25. **voyager** - (no specific category found, assign: auto)

Now, here’s the SQL INSERT statement based on the assigned categories:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('vladitoys', 'kids'),
    ('vlk', 'sport'),
    ('vmgconsultancy', 'accessories'),
    ('vmv', 'apparel'),
    ('vobix', 'electronics'),
    ('voda', 'appliances'),
    ('vogue', 'apparel'),
    ('vogue', 'accessories'),
    ('voin', 'apparel'),
    ('vokter', 'medicine'),
    ('vokul', 'sport'),
    ('vokul', 'accessories'),
    ('volcano', 'appliances'),
    ('volcok', 'construction'),
    ('volkl', 'sport'),
    ('volta', 'electronics'),
    ('voltajr', 'electronics'),
    ('voltman', 'electronics'),
    ('voltmaster', 'electronics'),
    ('voondo', 'electronics'),
    ('vorson', 'appliances'),
    ('vortex', 'electronics'),
    ('vossen', 'accessories'),
    ('vouni', 'accessories'),
    ('vov', 'electronics'),
    ('vox', 'electronics'),
    ('voyager', 'auto');
```
[2024-12-05T22:48:14.857+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T22:48:14.858+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=call_llm, run_id=manual__2024-12-05T22:47:52.197420+00:00, execution_date=20241205T224752, start_date=20241205T224757, end_date=20241205T224814
[2024-12-05T22:48:14.905+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T22:48:14.923+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T22:48:14.926+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
