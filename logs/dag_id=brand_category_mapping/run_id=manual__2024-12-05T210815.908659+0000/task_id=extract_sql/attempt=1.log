[2024-12-05T21:08:42.043+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T21:08:42.056+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:08:15.908659+00:00 [queued]>
[2024-12-05T21:08:42.063+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:08:15.908659+00:00 [queued]>
[2024-12-05T21:08:42.064+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T21:08:42.078+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): extract_sql> on 2024-12-05 21:08:15.908659+00:00
[2024-12-05T21:08:42.085+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=3205) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T21:08:42.087+0000] {standard_task_runner.py:72} INFO - Started process 3206 to run task
[2024-12-05T21:08:42.086+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'extract_sql', 'manual__2024-12-05T21:08:15.908659+00:00', '--job-id', '703', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmprmm9lnc1']
[2024-12-05T21:08:42.088+0000] {standard_task_runner.py:105} INFO - Job 703: Subtask extract_sql
[2024-12-05T21:08:42.127+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T21:08:15.908659+00:00 [running]> on host c7780884450d
[2024-12-05T21:08:42.194+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='extract_sql' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T21:08:15.908659+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T21:08:15.908659+00:00'
[2024-12-05T21:08:42.195+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T21:08:42.216+0000] {llm_mapping.py:187} INFO - Извлечён llm_response: Here is the mapping of the brands to their respective categories based on the search results:

1. **beuchat** - sport
2. **beurer** - medicine, appliances
3. **beyblade** - kids, sport
4. **beyerdynamic** - electronics
5. **beyonce** - apparel, accessories
6. **beyond** - apparel
7. **bfgoodrich** - auto
8. **bfsnowboards** - sport
9. **bfz** - (no specific category found, assign to apparel)
10. **bhawk** - (no specific category found, assign to auto)
11. **b.h.h** - (no specific category found, assign to apparel)
12. **bianca** - apparel
13. **bibalina** - kids
14. **bielita** - (no specific category found, assign to medicine)
15. **biema** - appliances
16. **biemmedue** - appliances
17. **big** - (no specific category found, assign to appliances)
18. **bigdream** - (no specific category found, assign to kids)
19. **bigfigures** - kids
20. **bigklever** - kids
21. **bigmotors** - auto
22. **bildo** - (no specific category found, assign to kids)
23. **billi** - (no specific category found, assign to appliances)
24. **bilstein** - auto
25. **binatone** - electronics

Now, here is the SQL INSERT statement based on the mapping:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('beuchat', 'sport'),
    ('beurer', 'medicine'),
    ('beurer', 'appliances'),
    ('beyblade', 'kids'),
    ('beyblade', 'sport'),
    ('beyerdynamic', 'electronics'),
    ('beyonce', 'apparel'),
    ('beyonce', 'accessories'),
    ('beyond', 'apparel'),
    ('bfgoodrich', 'auto'),
    ('bfsnowboards', 'sport'),
    ('bfz', 'apparel'),
    ('bhawk', 'auto'),
    ('b.h.h', 'apparel'),
    ('bianca', 'apparel'),
    ('bibalina', 'kids'),
    ('bielita', 'medicine'),
    ('biema', 'appliances'),
    ('biemmedue', 'appliances'),
    ('big', 'appliances'),
    ('bigdream', 'kids'),
    ('bigfigures', 'kids'),
    ('bigklever', 'kids'),
    ('bigmotors', 'auto'),
    ('bildo', 'kids'),
    ('billi', 'appliances'),
    ('bilstein', 'auto'),
    ('binatone', 'electronics');
```
[2024-12-05T21:08:42.217+0000] {llm_mapping.py:174} INFO - Извлечён SQL-код:
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('beuchat', 'sport'),
    ('beurer', 'medicine'),
    ('beurer', 'appliances'),
    ('beyblade', 'kids'),
    ('beyblade', 'sport'),
    ('beyerdynamic', 'electronics'),
    ('beyonce', 'apparel'),
    ('beyonce', 'accessories'),
    ('beyond', 'apparel'),
    ('bfgoodrich', 'auto'),
    ('bfsnowboards', 'sport'),
    ('bfz', 'apparel'),
    ('bhawk', 'auto'),
    ('b.h.h', 'apparel'),
    ('bianca', 'apparel'),
    ('bibalina', 'kids'),
    ('bielita', 'medicine'),
    ('biema', 'appliances'),
    ('biemmedue', 'appliances'),
    ('big', 'appliances'),
    ('bigdream', 'kids'),
    ('bigfigures', 'kids'),
    ('bigklever', 'kids'),
    ('bigmotors', 'auto'),
    ('bildo', 'kids'),
    ('billi', 'appliances'),
    ('bilstein', 'auto'),
    ('binatone', 'electronics');
[2024-12-05T21:08:42.218+0000] {python.py:240} INFO - Done. Returned value was: INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('beuchat', 'sport'),
    ('beurer', 'medicine'),
    ('beurer', 'appliances'),
    ('beyblade', 'kids'),
    ('beyblade', 'sport'),
    ('beyerdynamic', 'electronics'),
    ('beyonce', 'apparel'),
    ('beyonce', 'accessories'),
    ('beyond', 'apparel'),
    ('bfgoodrich', 'auto'),
    ('bfsnowboards', 'sport'),
    ('bfz', 'apparel'),
    ('bhawk', 'auto'),
    ('b.h.h', 'apparel'),
    ('bianca', 'apparel'),
    ('bibalina', 'kids'),
    ('bielita', 'medicine'),
    ('biema', 'appliances'),
    ('biemmedue', 'appliances'),
    ('big', 'appliances'),
    ('bigdream', 'kids'),
    ('bigfigures', 'kids'),
    ('bigklever', 'kids'),
    ('bigmotors', 'auto'),
    ('bildo', 'kids'),
    ('billi', 'appliances'),
    ('bilstein', 'auto'),
    ('binatone', 'electronics');
[2024-12-05T21:08:42.236+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T21:08:42.237+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=extract_sql, run_id=manual__2024-12-05T21:08:15.908659+00:00, execution_date=20241205T210815, start_date=20241205T210842, end_date=20241205T210842
[2024-12-05T21:08:42.261+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T21:08:42.281+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T21:08:42.285+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
