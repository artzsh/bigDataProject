[2024-12-05T22:01:21.787+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T22:01:21.799+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T22:00:59.972528+00:00 [queued]>
[2024-12-05T22:01:21.805+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T22:00:59.972528+00:00 [queued]>
[2024-12-05T22:01:21.805+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T22:01:21.817+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): extract_sql> on 2024-12-05 22:00:59.972528+00:00
[2024-12-05T22:01:21.822+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=6013) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T22:01:21.824+0000] {standard_task_runner.py:72} INFO - Started process 6014 to run task
[2024-12-05T22:01:21.823+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'extract_sql', 'manual__2024-12-05T22:00:59.972528+00:00', '--job-id', '1309', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmpd29vf3hx']
[2024-12-05T22:01:21.825+0000] {standard_task_runner.py:105} INFO - Job 1309: Subtask extract_sql
[2024-12-05T22:01:21.863+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.extract_sql manual__2024-12-05T22:00:59.972528+00:00 [running]> on host c7780884450d
[2024-12-05T22:01:21.933+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='extract_sql' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T22:00:59.972528+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T22:00:59.972528+00:00'
[2024-12-05T22:01:21.934+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T22:01:21.956+0000] {llm_mapping.py:187} INFO - Извлечён llm_response: Here’s the mapping of the brands to their respective categories based on the search results:

1. **maxima** - country_yard
2. **maxiscoo** - appliances
3. **maxler** - medicine
4. **maxmara** - apparel
5. **max-pro** - construction
6. **maxpro** - electronics
7. **maxtone** - electronics
8. **maxtrek** - auto
9. **maxvi** - electronics
10. **maxwell** - appliances
11. **maxxis** - auto
12. **maxxpro** - electronics
13. **maybelline** - cosmetics (not in predefined categories, but can fit under accessories)
14. **maybellinenewyork** - cosmetics (not in predefined categories, but can fit under accessories)
15. **maysternya** - apparel
16. **maysun** - electronics
17. **maytag** - appliances
18. **maytoni** - furniture
19. **mazzini** - apparel
20. **mbs** - electronics
21. **mc** - apparel
22. **mccan** - stationery
23. **mcculloch** - appliances
24. **mcfr** - appliances
25. **m-city** - apparel

Now, here’s the SQL INSERT statement based on the mapping:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('maxima', 'country_yard'),
    ('maxiscoo', 'appliances'),
    ('maxler', 'medicine'),
    ('maxmara', 'apparel'),
    ('max-pro', 'construction'),
    ('maxpro', 'electronics'),
    ('maxtone', 'electronics'),
    ('maxtrek', 'auto'),
    ('maxvi', 'electronics'),
    ('maxwell', 'appliances'),
    ('maxxis', 'auto'),
    ('maxxpro', 'electronics'),
    ('maybelline', 'accessories'),
    ('maybellinenewyork', 'accessories'),
    ('maysternya', 'apparel'),
    ('maysun', 'electronics'),
    ('maytag', 'appliances'),
    ('maytoni', 'furniture'),
    ('mazzini', 'apparel'),
    ('mbs', 'electronics'),
    ('mc', 'apparel'),
    ('mccan', 'stationery'),
    ('mcculloch', 'appliances'),
    ('mcfr', 'appliances'),
    ('m-city', 'apparel');
```
[2024-12-05T22:01:21.957+0000] {llm_mapping.py:174} INFO - Извлечён SQL-код:
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('maxima', 'country_yard'),
    ('maxiscoo', 'appliances'),
    ('maxler', 'medicine'),
    ('maxmara', 'apparel'),
    ('max-pro', 'construction'),
    ('maxpro', 'electronics'),
    ('maxtone', 'electronics'),
    ('maxtrek', 'auto'),
    ('maxvi', 'electronics'),
    ('maxwell', 'appliances'),
    ('maxxis', 'auto'),
    ('maxxpro', 'electronics'),
    ('maybelline', 'accessories'),
    ('maybellinenewyork', 'accessories'),
    ('maysternya', 'apparel'),
    ('maysun', 'electronics'),
    ('maytag', 'appliances'),
    ('maytoni', 'furniture'),
    ('mazzini', 'apparel'),
    ('mbs', 'electronics'),
    ('mc', 'apparel'),
    ('mccan', 'stationery'),
    ('mcculloch', 'appliances'),
    ('mcfr', 'appliances'),
    ('m-city', 'apparel');
[2024-12-05T22:01:21.957+0000] {python.py:240} INFO - Done. Returned value was: INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('maxima', 'country_yard'),
    ('maxiscoo', 'appliances'),
    ('maxler', 'medicine'),
    ('maxmara', 'apparel'),
    ('max-pro', 'construction'),
    ('maxpro', 'electronics'),
    ('maxtone', 'electronics'),
    ('maxtrek', 'auto'),
    ('maxvi', 'electronics'),
    ('maxwell', 'appliances'),
    ('maxxis', 'auto'),
    ('maxxpro', 'electronics'),
    ('maybelline', 'accessories'),
    ('maybellinenewyork', 'accessories'),
    ('maysternya', 'apparel'),
    ('maysun', 'electronics'),
    ('maytag', 'appliances'),
    ('maytoni', 'furniture'),
    ('mazzini', 'apparel'),
    ('mbs', 'electronics'),
    ('mc', 'apparel'),
    ('mccan', 'stationery'),
    ('mcculloch', 'appliances'),
    ('mcfr', 'appliances'),
    ('m-city', 'apparel');
[2024-12-05T22:01:21.973+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T22:01:21.973+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=extract_sql, run_id=manual__2024-12-05T22:00:59.972528+00:00, execution_date=20241205T220059, start_date=20241205T220121, end_date=20241205T220121
[2024-12-05T22:01:21.998+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T22:01:22.016+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T22:01:22.019+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
