[2024-12-05T21:40:44.145+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T21:40:44.158+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T21:40:39.280461+00:00 [queued]>
[2024-12-05T21:40:44.165+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T21:40:39.280461+00:00 [queued]>
[2024-12-05T21:40:44.166+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T21:40:44.179+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): call_llm> on 2024-12-05 21:40:39.280461+00:00
[2024-12-05T21:40:44.185+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=4937) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T21:40:44.187+0000] {standard_task_runner.py:72} INFO - Started process 4938 to run task
[2024-12-05T21:40:44.187+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'call_llm', 'manual__2024-12-05T21:40:39.280461+00:00', '--job-id', '1080', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmpae4pp6ti']
[2024-12-05T21:40:44.189+0000] {standard_task_runner.py:105} INFO - Job 1080: Subtask call_llm
[2024-12-05T21:40:44.225+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T21:40:39.280461+00:00 [running]> on host c7780884450d
[2024-12-05T21:40:44.287+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='call_llm' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T21:40:39.280461+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T21:40:39.280461+00:00'
[2024-12-05T21:40:44.289+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T21:40:44.306+0000] {llm_mapping.py:155} INFO - Извлечён return_value: {'batch': ['honhongvictorygroupltd', 'honor', 'hoover', 'hope', 'hori', 'horizont', 'hotmom', 'hotner', 'hotpoint-ariston', 'hotpoint-aristonbuilt', 'hottek', 'hotwheels', 'housefit', 'household', 'houseofseasons', 'hp', 'hpe', 'hq', 'hr', 'hre', 'htc', 'hti', 'htp', 'htw', 'huanger'], 'next_index': 2250}
[2024-12-05T21:40:44.307+0000] {llm_mapping.py:127} INFO - Отправка запроса к LLM.
[2024-12-05T21:40:44.729+0000] {logging_mixin.py:190} INFO - New g4f version: 0.3.8.3 (current: 0.3.8.0) | pip install -U g4f
[2024-12-05T21:41:06.620+0000] {llm_mapping.py:141} INFO - Получен ответ от LLM: Here are the categories assigned to each brand based on the search queries:

1. **honhongvictorygroupltd**: appliances
2. **honor**: electronics, computers
3. **hoover**: appliances
4. **hope**: auto
5. **hori**: electronics, accessories
6. **horizont**: appliances
7. **hotmom**: kids, apparel
8. **hotner**: apparel
9. **hotpoint-ariston**: appliances
10. **hotpoint-aristonbuilt**: appliances
11. **hottek**: electronics
12. **hotwheels**: kids, toys
13. **housefit**: appliances, fitness
14. **household**: appliances
15. **houseofseasons**: country_yard, furniture
16. **hp**: computers, electronics
17. **hpe**: computers, electronics
18. **hq**: electronics
19. **hr**: electronics
20. **hre**: electronics
21. **htc**: electronics, computers
22. **hti**: electronics
23. **htp**: electronics
24. **htw**: electronics
25. **huanger**: kids, toys

Now, generating the SQL INSERT statement:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('honhongvictorygroupltd', 'appliances'),
    ('honor', 'electronics'),
    ('honor', 'computers'),
    ('hoover', 'appliances'),
    ('hope', 'auto'),
    ('hori', 'electronics'),
    ('hori', 'accessories'),
    ('horizont', 'appliances'),
    ('hotmom', 'kids'),
    ('hotmom', 'apparel'),
    ('hotner', 'apparel'),
    ('hotpoint-ariston', 'appliances'),
    ('hotpoint-aristonbuilt', 'appliances'),
    ('hottek', 'electronics'),
    ('hotwheels', 'kids'),
    ('hotwheels', 'toys'),
    ('housefit', 'appliances'),
    ('housefit', 'fitness'),
    ('household', 'appliances'),
    ('houseofseasons', 'country_yard'),
    ('houseofseasons', 'furniture'),
    ('hp', 'computers'),
    ('hp', 'electronics'),
    ('hpe', 'computers'),
    ('hpe', 'electronics'),
    ('hq', 'electronics'),
    ('hr', 'electronics'),
    ('hre', 'electronics'),
    ('htc', 'electronics'),
    ('htc', 'computers'),
    ('hti', 'electronics'),
    ('htp', 'electronics'),
    ('htw', 'electronics'),
    ('huanger', 'kids'),
    ('huanger', 'toys');
```
[2024-12-05T21:41:06.621+0000] {python.py:240} INFO - Done. Returned value was: Here are the categories assigned to each brand based on the search queries:

1. **honhongvictorygroupltd**: appliances
2. **honor**: electronics, computers
3. **hoover**: appliances
4. **hope**: auto
5. **hori**: electronics, accessories
6. **horizont**: appliances
7. **hotmom**: kids, apparel
8. **hotner**: apparel
9. **hotpoint-ariston**: appliances
10. **hotpoint-aristonbuilt**: appliances
11. **hottek**: electronics
12. **hotwheels**: kids, toys
13. **housefit**: appliances, fitness
14. **household**: appliances
15. **houseofseasons**: country_yard, furniture
16. **hp**: computers, electronics
17. **hpe**: computers, electronics
18. **hq**: electronics
19. **hr**: electronics
20. **hre**: electronics
21. **htc**: electronics, computers
22. **hti**: electronics
23. **htp**: electronics
24. **htw**: electronics
25. **huanger**: kids, toys

Now, generating the SQL INSERT statement:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('honhongvictorygroupltd', 'appliances'),
    ('honor', 'electronics'),
    ('honor', 'computers'),
    ('hoover', 'appliances'),
    ('hope', 'auto'),
    ('hori', 'electronics'),
    ('hori', 'accessories'),
    ('horizont', 'appliances'),
    ('hotmom', 'kids'),
    ('hotmom', 'apparel'),
    ('hotner', 'apparel'),
    ('hotpoint-ariston', 'appliances'),
    ('hotpoint-aristonbuilt', 'appliances'),
    ('hottek', 'electronics'),
    ('hotwheels', 'kids'),
    ('hotwheels', 'toys'),
    ('housefit', 'appliances'),
    ('housefit', 'fitness'),
    ('household', 'appliances'),
    ('houseofseasons', 'country_yard'),
    ('houseofseasons', 'furniture'),
    ('hp', 'computers'),
    ('hp', 'electronics'),
    ('hpe', 'computers'),
    ('hpe', 'electronics'),
    ('hq', 'electronics'),
    ('hr', 'electronics'),
    ('hre', 'electronics'),
    ('htc', 'electronics'),
    ('htc', 'computers'),
    ('hti', 'electronics'),
    ('htp', 'electronics'),
    ('htw', 'electronics'),
    ('huanger', 'kids'),
    ('huanger', 'toys');
```
[2024-12-05T21:41:06.640+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T21:41:06.641+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=call_llm, run_id=manual__2024-12-05T21:40:39.280461+00:00, execution_date=20241205T214039, start_date=20241205T214044, end_date=20241205T214106
[2024-12-05T21:41:06.660+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T21:41:06.678+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T21:41:06.681+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
