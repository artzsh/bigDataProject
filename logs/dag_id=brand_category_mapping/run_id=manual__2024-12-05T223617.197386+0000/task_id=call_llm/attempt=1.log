[2024-12-05T22:36:22.558+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T22:36:22.573+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T22:36:17.197386+00:00 [queued]>
[2024-12-05T22:36:22.582+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T22:36:17.197386+00:00 [queued]>
[2024-12-05T22:36:22.582+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T22:36:22.596+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): call_llm> on 2024-12-05 22:36:17.197386+00:00
[2024-12-05T22:36:22.603+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=7869) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T22:36:22.605+0000] {standard_task_runner.py:72} INFO - Started process 7870 to run task
[2024-12-05T22:36:22.605+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'call_llm', 'manual__2024-12-05T22:36:17.197386+00:00', '--job-id', '1710', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmpxkpwhdac']
[2024-12-05T22:36:22.607+0000] {standard_task_runner.py:105} INFO - Job 1710: Subtask call_llm
[2024-12-05T22:36:22.646+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T22:36:17.197386+00:00 [running]> on host c7780884450d
[2024-12-05T22:36:22.709+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='call_llm' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T22:36:17.197386+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T22:36:17.197386+00:00'
[2024-12-05T22:36:22.710+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T22:36:22.729+0000] {llm_mapping.py:155} INFO - Извлечён return_value: {'batch': ['sunday', 'suneight', 'sunlike', 'sunmi', 'sunsuki', 'sunsystem', 'suntech-msks', 'sunuv', 'sunwide', 'superfine', 'superlux', 'supermicro', 'superwings', 'supra', 'surveon', 'suunto', 'suzuki', 'sv', 'svar', 'svc', 'sven', 'svetogor', 'svoboda', 'svr', 'swan'], 'next_index': 4875}
[2024-12-05T22:36:22.729+0000] {llm_mapping.py:127} INFO - Отправка запроса к LLM.
[2024-12-05T22:36:23.163+0000] {logging_mixin.py:190} INFO - New g4f version: 0.3.8.3 (current: 0.3.8.0) | pip install -U g4f
[2024-12-05T22:36:40.997+0000] {llm_mapping.py:141} INFO - Получен ответ от LLM: Here are the brands mapped to their respective categories based on the search queries:

1. **sunday** - apparel, accessories
2. **suneight** - apparel, accessories
3. **sunlike** - electronics, appliances
4. **sunmi** - electronics, appliances
5. **sunsuki** - apparel
6. **sunsystem** - electronics, appliances
7. **suntech-msks** - electronics
8. **sunuv** - electronics, appliances
9. **sunwide** - electronics
10. **superfine** - apparel
11. **superlux** - electronics, appliances
12. **supermicro** - computers, electronics
13. **superwings** - kids
14. **supra** - electronics, appliances
15. **surveon** - electronics
16. **suunto** - sport, accessories
17. **suzuki** - auto, electronics
18. **sv** - electronics
19. **svar** - electronics
20. **svc** - electronics
21. **sven** - electronics, appliances
22. **svetogor** - construction
23. **svoboda** - medicine
24. **svr** - medicine
25. **swan** - appliances

Now, here is the SQL INSERT statement based on the mappings:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('sunday', 'apparel'),
    ('sunday', 'accessories'),
    ('suneight', 'apparel'),
    ('suneight', 'accessories'),
    ('sunlike', 'electronics'),
    ('sunlike', 'appliances'),
    ('sunmi', 'electronics'),
    ('sunmi', 'appliances'),
    ('sunsuki', 'apparel'),
    ('sunsystem', 'electronics'),
    ('sunsystem', 'appliances'),
    ('suntech-msks', 'electronics'),
    ('sunuv', 'electronics'),
    ('sunuv', 'appliances'),
    ('sunwide', 'electronics'),
    ('superfine', 'apparel'),
    ('superlux', 'electronics'),
    ('superlux', 'appliances'),
    ('supermicro', 'computers'),
    ('supermicro', 'electronics'),
    ('superwings', 'kids'),
    ('supra', 'electronics'),
    ('supra', 'appliances'),
    ('surveon', 'electronics'),
    ('suunto', 'sport'),
    ('suunto', 'accessories'),
    ('suzuki', 'auto'),
    ('suzuki', 'electronics'),
    ('sv', 'electronics'),
    ('svar', 'electronics'),
    ('svc', 'electronics'),
    ('sven', 'electronics'),
    ('sven', 'appliances'),
    ('svetogor', 'construction'),
    ('svoboda', 'medicine'),
    ('svr', 'medicine'),
    ('swan', 'appliances');
```
[2024-12-05T22:36:40.997+0000] {python.py:240} INFO - Done. Returned value was: Here are the brands mapped to their respective categories based on the search queries:

1. **sunday** - apparel, accessories
2. **suneight** - apparel, accessories
3. **sunlike** - electronics, appliances
4. **sunmi** - electronics, appliances
5. **sunsuki** - apparel
6. **sunsystem** - electronics, appliances
7. **suntech-msks** - electronics
8. **sunuv** - electronics, appliances
9. **sunwide** - electronics
10. **superfine** - apparel
11. **superlux** - electronics, appliances
12. **supermicro** - computers, electronics
13. **superwings** - kids
14. **supra** - electronics, appliances
15. **surveon** - electronics
16. **suunto** - sport, accessories
17. **suzuki** - auto, electronics
18. **sv** - electronics
19. **svar** - electronics
20. **svc** - electronics
21. **sven** - electronics, appliances
22. **svetogor** - construction
23. **svoboda** - medicine
24. **svr** - medicine
25. **swan** - appliances

Now, here is the SQL INSERT statement based on the mappings:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('sunday', 'apparel'),
    ('sunday', 'accessories'),
    ('suneight', 'apparel'),
    ('suneight', 'accessories'),
    ('sunlike', 'electronics'),
    ('sunlike', 'appliances'),
    ('sunmi', 'electronics'),
    ('sunmi', 'appliances'),
    ('sunsuki', 'apparel'),
    ('sunsystem', 'electronics'),
    ('sunsystem', 'appliances'),
    ('suntech-msks', 'electronics'),
    ('sunuv', 'electronics'),
    ('sunuv', 'appliances'),
    ('sunwide', 'electronics'),
    ('superfine', 'apparel'),
    ('superlux', 'electronics'),
    ('superlux', 'appliances'),
    ('supermicro', 'computers'),
    ('supermicro', 'electronics'),
    ('superwings', 'kids'),
    ('supra', 'electronics'),
    ('supra', 'appliances'),
    ('surveon', 'electronics'),
    ('suunto', 'sport'),
    ('suunto', 'accessories'),
    ('suzuki', 'auto'),
    ('suzuki', 'electronics'),
    ('sv', 'electronics'),
    ('svar', 'electronics'),
    ('svc', 'electronics'),
    ('sven', 'electronics'),
    ('sven', 'appliances'),
    ('svetogor', 'construction'),
    ('svoboda', 'medicine'),
    ('svr', 'medicine'),
    ('swan', 'appliances');
```
[2024-12-05T22:36:41.015+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T22:36:41.016+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=call_llm, run_id=manual__2024-12-05T22:36:17.197386+00:00, execution_date=20241205T223617, start_date=20241205T223622, end_date=20241205T223641
[2024-12-05T22:36:41.047+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T22:36:41.068+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T22:36:41.071+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
