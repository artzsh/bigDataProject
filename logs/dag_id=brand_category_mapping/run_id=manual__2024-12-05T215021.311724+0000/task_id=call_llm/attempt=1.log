[2024-12-05T21:50:26.035+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T21:50:26.047+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T21:50:21.311724+00:00 [queued]>
[2024-12-05T21:50:26.053+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T21:50:21.311724+00:00 [queued]>
[2024-12-05T21:50:26.054+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T21:50:26.065+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): call_llm> on 2024-12-05 21:50:21.311724+00:00
[2024-12-05T21:50:26.072+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=5441) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T21:50:26.073+0000] {standard_task_runner.py:72} INFO - Started process 5442 to run task
[2024-12-05T21:50:26.073+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'call_llm', 'manual__2024-12-05T21:50:21.311724+00:00', '--job-id', '1188', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmpjeu1ptiy']
[2024-12-05T21:50:26.075+0000] {standard_task_runner.py:105} INFO - Job 1188: Subtask call_llm
[2024-12-05T21:50:26.110+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T21:50:21.311724+00:00 [running]> on host c7780884450d
[2024-12-05T21:50:26.174+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='call_llm' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T21:50:21.311724+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T21:50:21.311724+00:00'
[2024-12-05T21:50:26.175+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T21:50:26.192+0000] {llm_mapping.py:155} INFO - Извлечён return_value: {'batch': ['kolibri', 'kolner', 'kolo', 'kolpa', 'kolpasan', 'komar', 'komc', 'komfederacia', 'komfort-s', 'komicomo', 'komilfo', 'kompasgid', 'kompasgidid', 'kona', 'kong', 'konig', 'konlega', 'konoos', 'konov', 'kontinent', 'koopman', 'koowheel', 'kora', 'korg', 'korin'], 'next_index': 2700}
[2024-12-05T21:50:26.193+0000] {llm_mapping.py:127} INFO - Отправка запроса к LLM.
[2024-12-05T21:50:26.656+0000] {logging_mixin.py:190} INFO - New g4f version: 0.3.8.3 (current: 0.3.8.0) | pip install -U g4f
[2024-12-05T21:50:44.921+0000] {llm_mapping.py:141} INFO - Получен ответ от LLM: Here are the assigned categories for each brand based on the search results:

1. **kolibri**: apparel
2. **kolner**: construction, tools
3. **kolo**: furniture, home decor
4. **kolpa**: furniture, appliances
5. **kolpasan**: appliances
6. **komar**: electronics, home decor
7. **komc**: electronics
8. **komfederacia**: apparel
9. **komfort-s**: appliances, furniture
10. **komicomo**: accessories
11. **komilfo**: stationery
12. **kompasgid**: electronics
13. **kompasgidid**: electronics
14. **kona**: auto, bicycles
15. **kong**: toys, kids
16. **konig**: electronics
17. **konlega**: stationery
18. **konoos**: electronics
19. **konov**: electronics
20. **kontinent**: appliances
21. **koopman**: country_yard, appliances
22. **koowheel**: auto, electronics
23. **kora**: apparel
24. **korg**: electronics
25. **korin**: appliances

Now, here’s the SQL INSERT statement:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('kolibri', 'apparel'),
    ('kolner', 'construction'),
    ('kolner', 'tools'),
    ('kolo', 'furniture'),
    ('kolo', 'home decor'),
    ('kolpa', 'furniture'),
    ('kolpa', 'appliances'),
    ('kolpasan', 'appliances'),
    ('komar', 'electronics'),
    ('komar', 'home decor'),
    ('komc', 'electronics'),
    ('komfederacia', 'apparel'),
    ('komfort-s', 'appliances'),
    ('komfort-s', 'furniture'),
    ('komicomo', 'accessories'),
    ('komilfo', 'stationery'),
    ('kompasgid', 'electronics'),
    ('kompasgidid', 'electronics'),
    ('kona', 'auto'),
    ('kona', 'bicycles'),
    ('kong', 'toys'),
    ('kong', 'kids'),
    ('konig', 'electronics'),
    ('konlega', 'stationery'),
    ('konoos', 'electronics'),
    ('konov', 'electronics'),
    ('kontinent', 'appliances'),
    ('koopman', 'country_yard'),
    ('koopman', 'appliances'),
    ('koowheel', 'auto'),
    ('koowheel', 'electronics'),
    ('kora', 'apparel'),
    ('korg', 'electronics'),
    ('korin', 'appliances');
```
[2024-12-05T21:50:44.922+0000] {python.py:240} INFO - Done. Returned value was: Here are the assigned categories for each brand based on the search results:

1. **kolibri**: apparel
2. **kolner**: construction, tools
3. **kolo**: furniture, home decor
4. **kolpa**: furniture, appliances
5. **kolpasan**: appliances
6. **komar**: electronics, home decor
7. **komc**: electronics
8. **komfederacia**: apparel
9. **komfort-s**: appliances, furniture
10. **komicomo**: accessories
11. **komilfo**: stationery
12. **kompasgid**: electronics
13. **kompasgidid**: electronics
14. **kona**: auto, bicycles
15. **kong**: toys, kids
16. **konig**: electronics
17. **konlega**: stationery
18. **konoos**: electronics
19. **konov**: electronics
20. **kontinent**: appliances
21. **koopman**: country_yard, appliances
22. **koowheel**: auto, electronics
23. **kora**: apparel
24. **korg**: electronics
25. **korin**: appliances

Now, here’s the SQL INSERT statement:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('kolibri', 'apparel'),
    ('kolner', 'construction'),
    ('kolner', 'tools'),
    ('kolo', 'furniture'),
    ('kolo', 'home decor'),
    ('kolpa', 'furniture'),
    ('kolpa', 'appliances'),
    ('kolpasan', 'appliances'),
    ('komar', 'electronics'),
    ('komar', 'home decor'),
    ('komc', 'electronics'),
    ('komfederacia', 'apparel'),
    ('komfort-s', 'appliances'),
    ('komfort-s', 'furniture'),
    ('komicomo', 'accessories'),
    ('komilfo', 'stationery'),
    ('kompasgid', 'electronics'),
    ('kompasgidid', 'electronics'),
    ('kona', 'auto'),
    ('kona', 'bicycles'),
    ('kong', 'toys'),
    ('kong', 'kids'),
    ('konig', 'electronics'),
    ('konlega', 'stationery'),
    ('konoos', 'electronics'),
    ('konov', 'electronics'),
    ('kontinent', 'appliances'),
    ('koopman', 'country_yard'),
    ('koopman', 'appliances'),
    ('koowheel', 'auto'),
    ('koowheel', 'electronics'),
    ('kora', 'apparel'),
    ('korg', 'electronics'),
    ('korin', 'appliances');
```
[2024-12-05T21:50:44.942+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T21:50:44.942+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=call_llm, run_id=manual__2024-12-05T21:50:21.311724+00:00, execution_date=20241205T215021, start_date=20241205T215026, end_date=20241205T215044
[2024-12-05T21:50:44.990+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T21:50:45.008+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T21:50:45.012+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
