[2024-12-05T21:32:39.099+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-05T21:32:39.111+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T21:32:34.265185+00:00 [queued]>
[2024-12-05T21:32:39.118+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T21:32:34.265185+00:00 [queued]>
[2024-12-05T21:32:39.119+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 4
[2024-12-05T21:32:39.130+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): call_llm> on 2024-12-05 21:32:34.265185+00:00
[2024-12-05T21:32:39.136+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=4517) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-05T21:32:39.138+0000] {standard_task_runner.py:72} INFO - Started process 4518 to run task
[2024-12-05T21:32:39.138+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'brand_category_mapping', 'call_llm', 'manual__2024-12-05T21:32:34.265185+00:00', '--job-id', '990', '--raw', '--subdir', 'DAGS_FOLDER/llm_mapping.py', '--cfg-path', '/tmp/tmp7bwm5cfp']
[2024-12-05T21:32:39.139+0000] {standard_task_runner.py:105} INFO - Job 990: Subtask call_llm
[2024-12-05T21:32:39.172+0000] {task_command.py:467} INFO - Running <TaskInstance: brand_category_mapping.call_llm manual__2024-12-05T21:32:34.265185+00:00 [running]> on host c7780884450d
[2024-12-05T21:32:39.234+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='artzsh' AIRFLOW_CTX_DAG_ID='brand_category_mapping' AIRFLOW_CTX_TASK_ID='call_llm' AIRFLOW_CTX_EXECUTION_DATE='2024-12-05T21:32:34.265185+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-05T21:32:34.265185+00:00'
[2024-12-05T21:32:39.235+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-05T21:32:39.252+0000] {llm_mapping.py:155} INFO - Извлечён return_value: {'batch': ['fujifilm', 'fundesk', 'funred', 'funtzio', 'funville', 'furreal', 'furutech', 'futura', 'fxn', 'gabolparadise', 'gabor', 'gad', 'ga-de', 'gadkija', 'gaga', 'gaggia', 'gaint', 'gainward', 'gaissina', 'galacticos', 'galantcosmetic', 'galanz', 'galaxy', 'galobaby', 'gamdias'], 'next_index': 1875}
[2024-12-05T21:32:39.252+0000] {llm_mapping.py:127} INFO - Отправка запроса к LLM.
[2024-12-05T21:32:39.728+0000] {logging_mixin.py:190} INFO - New g4f version: 0.3.8.3 (current: 0.3.8.0) | pip install -U g4f
[2024-12-05T21:33:00.653+0000] {llm_mapping.py:141} INFO - Получен ответ от LLM: Here are the assigned categories for each brand based on the search results and my knowledge:

1. **fujifilm**: electronics, appliances
2. **fundesk**: furniture, stationery
3. **funred**: kids, toys
4. **funtzio**: kids, toys
5. **funville**: kids, toys
6. **furreal**: kids, toys
7. **furutech**: electronics, accessories
8. **futura**: appliances, electronics
9. **fxn**: sport, accessories
10. **gabolparadise**: accessories, luggage
11. **gabor**: apparel, accessories
12. **gad**: electronics, accessories
13. **ga-de**: cosmetics, accessories
14. **gadkija**: apparel, accessories
15. **gaga**: apparel, accessories
16. **gaggia**: appliances, electronics
17. **gaint**: electronics, appliances
18. **gainward**: electronics, computers
19. **gaissina**: apparel, accessories
20. **galacticos**: apparel, sport
21. **galantcosmetic**: cosmetics, accessories
22. **galanz**: appliances, electronics
23. **galaxy**: electronics, appliances
24. **galobaby**: kids, apparel
25. **gamdias**: electronics, computers

Now, here is the SQL INSERT statement based on the assigned categories:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('fujifilm', 'electronics'),
    ('fujifilm', 'appliances'),
    ('fundesk', 'furniture'),
    ('fundesk', 'stationery'),
    ('funred', 'kids'),
    ('funred', 'toys'),
    ('funtzio', 'kids'),
    ('funtzio', 'toys'),
    ('funville', 'kids'),
    ('funville', 'toys'),
    ('furreal', 'kids'),
    ('furreal', 'toys'),
    ('furutech', 'electronics'),
    ('furutech', 'accessories'),
    ('futura', 'appliances'),
    ('futura', 'electronics'),
    ('fxn', 'sport'),
    ('fxn', 'accessories'),
    ('gabolparadise', 'accessories'),
    ('gabolparadise', 'luggage'),
    ('gabor', 'apparel'),
    ('gabor', 'accessories'),
    ('gad', 'electronics'),
    ('gad', 'accessories'),
    ('ga-de', 'cosmetics'),
    ('ga-de', 'accessories'),
    ('gadkija', 'apparel'),
    ('gadkija', 'accessories'),
    ('gaga', 'apparel'),
    ('gaga', 'accessories'),
    ('gaggia', 'appliances'),
    ('gaggia', 'electronics'),
    ('gaint', 'electronics'),
    ('gaint', 'appliances'),
    ('gainward', 'electronics'),
    ('gainward', 'computers'),
    ('gaissina', 'apparel'),
    ('gaissina', 'accessories'),
    ('galacticos', 'apparel'),
    ('galacticos', 'sport'),
    ('galantcosmetic', 'cosmetics'),
    ('galantcosmetic', 'accessories'),
    ('galanz', 'appliances'),
    ('galanz', 'electronics'),
    ('galaxy', 'electronics'),
    ('galaxy', 'appliances'),
    ('galobaby', 'kids'),
    ('galobaby', 'apparel'),
    ('gamdias', 'electronics'),
    ('gamdias', 'computers');
```
[2024-12-05T21:33:00.653+0000] {python.py:240} INFO - Done. Returned value was: Here are the assigned categories for each brand based on the search results and my knowledge:

1. **fujifilm**: electronics, appliances
2. **fundesk**: furniture, stationery
3. **funred**: kids, toys
4. **funtzio**: kids, toys
5. **funville**: kids, toys
6. **furreal**: kids, toys
7. **furutech**: electronics, accessories
8. **futura**: appliances, electronics
9. **fxn**: sport, accessories
10. **gabolparadise**: accessories, luggage
11. **gabor**: apparel, accessories
12. **gad**: electronics, accessories
13. **ga-de**: cosmetics, accessories
14. **gadkija**: apparel, accessories
15. **gaga**: apparel, accessories
16. **gaggia**: appliances, electronics
17. **gaint**: electronics, appliances
18. **gainward**: electronics, computers
19. **gaissina**: apparel, accessories
20. **galacticos**: apparel, sport
21. **galantcosmetic**: cosmetics, accessories
22. **galanz**: appliances, electronics
23. **galaxy**: electronics, appliances
24. **galobaby**: kids, apparel
25. **gamdias**: electronics, computers

Now, here is the SQL INSERT statement based on the assigned categories:

```sql
INSERT INTO "DDS".brand_category_mapping (brand, category_index) VALUES
    ('fujifilm', 'electronics'),
    ('fujifilm', 'appliances'),
    ('fundesk', 'furniture'),
    ('fundesk', 'stationery'),
    ('funred', 'kids'),
    ('funred', 'toys'),
    ('funtzio', 'kids'),
    ('funtzio', 'toys'),
    ('funville', 'kids'),
    ('funville', 'toys'),
    ('furreal', 'kids'),
    ('furreal', 'toys'),
    ('furutech', 'electronics'),
    ('furutech', 'accessories'),
    ('futura', 'appliances'),
    ('futura', 'electronics'),
    ('fxn', 'sport'),
    ('fxn', 'accessories'),
    ('gabolparadise', 'accessories'),
    ('gabolparadise', 'luggage'),
    ('gabor', 'apparel'),
    ('gabor', 'accessories'),
    ('gad', 'electronics'),
    ('gad', 'accessories'),
    ('ga-de', 'cosmetics'),
    ('ga-de', 'accessories'),
    ('gadkija', 'apparel'),
    ('gadkija', 'accessories'),
    ('gaga', 'apparel'),
    ('gaga', 'accessories'),
    ('gaggia', 'appliances'),
    ('gaggia', 'electronics'),
    ('gaint', 'electronics'),
    ('gaint', 'appliances'),
    ('gainward', 'electronics'),
    ('gainward', 'computers'),
    ('gaissina', 'apparel'),
    ('gaissina', 'accessories'),
    ('galacticos', 'apparel'),
    ('galacticos', 'sport'),
    ('galantcosmetic', 'cosmetics'),
    ('galantcosmetic', 'accessories'),
    ('galanz', 'appliances'),
    ('galanz', 'electronics'),
    ('galaxy', 'electronics'),
    ('galaxy', 'appliances'),
    ('galobaby', 'kids'),
    ('galobaby', 'apparel'),
    ('gamdias', 'electronics'),
    ('gamdias', 'computers');
```
[2024-12-05T21:33:00.672+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-05T21:33:00.672+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=brand_category_mapping, task_id=call_llm, run_id=manual__2024-12-05T21:32:34.265185+00:00, execution_date=20241205T213234, start_date=20241205T213239, end_date=20241205T213300
[2024-12-05T21:33:00.723+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-05T21:33:00.739+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-12-05T21:33:00.742+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
